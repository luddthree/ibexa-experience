{% trans_default_domain 'ibexa_taxonomy_content_view' %}
{% import _self as tab %}
{% form_theme form_taxonomy_content_unassign '@ibexadesign/ui/form_fields.html.twig' %}
{% form_theme form_taxonomy_content_assign '@ibexadesign/ui/form_fields.html.twig' %}
<section>
    {% set body_rows = [] %}
    {{ form(form_taxonomy_content_assign, {
        'action': path('ibexa.taxonomy.entry.assign', {'taxonomyName': taxonomy_entry.taxonomy})
    }) }}

    {% for location in locations %}
        {% set body_row_cols = [] %}

        {% set col_raw %}
            {% if can_assign %}
                {{ form_widget(form_taxonomy_content_unassign.assignedContentItems[location.content.id]) }}
            {% else %}
                {% do form_taxonomy_content_unassign.assignedContentItems[location.content.id].setRendered() %}
            {% endif %}
        {% endset %}

        {% set body_row_cols = body_row_cols|merge([{
            has_checkbox: can_assign,
            content: col_raw,
            raw: true,
        }]) %}

        {% set path_locations %}
            {% include '@ibexadesign/ui/location_path.html.twig' with {'locations': location.pathLocations, 'link_last_element': true} %}
        {% endset %}

        {% set translations = location.content.versionInfo.languages|map(language => "#{language.name}"|escape('html'))|join('<br />') %}

        {% set body_row_cols = body_row_cols|merge([
            {
                content: ibexa_content_name(location.contentInfo)
            },
            {
                content: path_locations,
                raw: true,
            },
            {
                content: translations,
                raw: true,
            },
            {
                content: location.contentInfo.modificationDate|ibexa_full_datetime,
            }
        ]) %}

        {% set body_rows = body_rows|merge([{ cols: body_row_cols }]) %}
    {% endfor %}

    {{ form_start(form_taxonomy_content_unassign, {
        'action': path('ibexa.taxonomy.entry.unassign', {'taxonomyName': taxonomy_entry.taxonomy}),
        'attr': { 'class': 'ibexa-toggle-btn-state', 'data-toggle-button-id': '#taxonomy-unassign-content' }
    }) }}

    {% embed '@ibexadesign/ui/component/table/table.html.twig' with {
        headline: 'tab.content.headline'|trans({'%total%': pagination.getNbResults()})|desc('Content items (%total%)'),
        head_cols: [
            { has_checkbox: can_assign },
            { content: 'tab.content.name'|trans|desc('Name') },
            { content: 'tab.content.path'|trans|desc('Path') },
            { content: 'tab.content.translations'|trans|desc('Used in translations') },
            { content: 'tab.locations.modification_date'|trans|desc('Modification date') },
        ],
        actions: can_assign ? tab.table_header_tools(form_taxonomy_content_assign, form_taxonomy_content_unassign) : '',
        body_rows,
        empty_table_info_text: 'tab.content.list.no_content.info'|trans|desc('Assign content to tags'),
        empty_table_action_text: 'tab.content.list.no_content.action'|trans|desc('Start organizing content with tags and streamline your system for easier navigation.'),
    } %}
    {% endembed %}

    {{ form_widget(form_taxonomy_content_unassign.entry) }}
    {{ form_widget(form_taxonomy_content_unassign.unassign) }}
    {{ form_end(form_taxonomy_content_unassign) }}

    {% if pagination is defined and pagination.haveToPaginate %}
        {% include '@ibexadesign/ui/pagination.html.twig' with {
            'pager': pagination,
            'paginaton_params': pagination_options|merge({
                'routeParams': {
                    '_fragment': 'ibexa-tab-location-view-assigned-content'
                }
            })
        } %}
    {% endif %}
</section>

{% macro table_header_tools(form_taxonomy_content_assign, form_taxonomy_content_unassign) %}
    <button
        type="button"
        id="taxonomy-assign-content"
        class="btn ibexa-btn ibexa-btn--tertiary ibexa-btn--small ibexa-btn--assign-content"
        data-udw-config="{{ ibexa_udw_config('multiple', {}) }}"
    >
        <svg class="ibexa-icon ibexa-icon--small ibexa-icon--create">
            <use xlink:href="{{ ibexa_icon_path('create') }}"></use>
        </svg>
        <span class="ibexa-btn__label">
            {{ 'taxonomy.assign'|trans|desc('Assign') }}
        </span>
    </button>

    {% set modal_data_target = 'taxonomy-unassign-content-modal' %}
    <button
        type="button"
        id="taxonomy-unassign-content"
        class="btn ibexa-btn ibexa-btn--ghost ibexa-btn--small"
        disabled
        data-bs-toggle="modal"
        data-bs-target="#{{ modal_data_target }}"
    >
        <svg class="ibexa-icon ibexa-icon--small ibexa-icon--trash">
            <use xlink:href="{{ ibexa_icon_path('trash') }}"></use>
        </svg>
        <span class="ibexa-btn__label">
            {{ 'taxonomy.unassign'|trans|desc('Unassign') }}
        </span>
    </button>
    {% include '@ibexadesign/ibexa/taxonomy/ui/modal/bulk_unassign_confirmation.html.twig' with {
        'id': modal_data_target,
        'message': 'tab.unassign_content.modal.message'|trans|desc('Do you want to unassign content?'),
        'data_click': '#' ~ form_taxonomy_content_unassign.unassign.vars.id,
    }%}
{% endmacro %}
