services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Ibexa\Taxonomy\Search\Solr\Criterion\Visitor\TaxonomyEntryId:
        tags:
            - { name: ibexa.search.solr.query.location.criterion.visitor }
            - { name: ibexa.search.solr.query.content.criterion.visitor }

    Ibexa\Taxonomy\Search\Solr\Criterion\Visitor\TaxonomySubtree:
        tags:
            - { name: ibexa.search.solr.query.location.criterion.visitor }
            - { name: ibexa.search.solr.query.content.criterion.visitor }

    ibexa.taxonomy.search.solr.aggregation.taxonomy_entry_id_visitor:
        class: Ibexa\Solr\Query\Common\AggregationVisitor\TermAggregationVisitor
        arguments:
            $aggregationClass: Ibexa\Contracts\Taxonomy\Search\Query\Aggregation\TaxonomyEntryIdAggregation
            $aggregationFieldResolver: !service
                class: Ibexa\Taxonomy\Search\Aggregation\TaxonomySearchFieldResolver
        tags:
            - { name: ibexa.search.solr.query.location.aggregation.visitor }
            - { name: ibexa.search.solr.query.content.aggregation.visitor }

    ibexa.taxonomy.search.solr.aggregation_result_extractor.taxonomy_entry_id:
        class: Ibexa\Solr\ResultExtractor\AggregationResultExtractor\TermAggregationResultExtractor
        arguments:
            $aggregationClass: Ibexa\Contracts\Taxonomy\Search\Query\Aggregation\TaxonomyEntryIdAggregation
            $keyMapper: '@Ibexa\Taxonomy\Search\Aggregation\TaxonomyResultKeyMapper'
        tags:
            - { name: ibexa.search.solr.query.location.aggregation.result.extractor }
            - { name: ibexa.search.solr.query.content.aggregation.result.extractor }

    Ibexa\Taxonomy\Search\Aggregation\TaxonomyResultKeyMapper: ~

    Ibexa\Taxonomy\Search\Solr\TaxonomyEntryFieldMapper:
        tags:
            - { name: ibexa.search.solr.field.mapper.block }
