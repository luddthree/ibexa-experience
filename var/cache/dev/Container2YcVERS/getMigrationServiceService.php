<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMigrationServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Migration\MigrationService' shared autowired service.
     *
     * @return \Ibexa\Migration\MigrationService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/contracts/MigrationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Log/LoggerAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/MigrationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/contracts/MigrationStorage.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Storage/FlysystemMigrationStorage.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/contracts/MigrationExecutor.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Event/MigrationExecutor.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/MigrationExecutor.php';

        $a = ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService());

        return $container->privates['Ibexa\\Migration\\MigrationService'] = new \Ibexa\Migration\MigrationService(new \Ibexa\Migration\Storage\FlysystemMigrationStorage(($container->privates['ibexa.migrations.io.flysystem.default_filesystem'] ?? $container->load('getIbexa_Migrations_Io_Flysystem_DefaultFilesystemService')), 'migrations'), ($container->privates['Ibexa\\Migration\\Metadata\\Storage\\MetadataStorage'] ?? $container->load('getMetadataStorageService')), new \Ibexa\Migration\Event\MigrationExecutor(new \Ibexa\Migration\MigrationExecutor(($container->privates['ibexa.migrations.serializer'] ?? $container->load('getIbexa_Migrations_SerializerService')), ($container->privates['Ibexa\\Migration\\StepExecutor\\StepExecutorManager'] ?? $container->load('getStepExecutorManagerService')), ($container->privates['Ibexa\\Core\\Persistence\\Cache\\TransactionHandler'] ?? $container->getTransactionHandlerService()), $a), ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService())), ($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService()), ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService()), ($container->privates['debug.stopwatch'] ?? ($container->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))), 'admin', $a);
    }
}
