<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPageBuilderPreRenderEventSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\Connect\EventSubscriber\PageBuilderPreRenderEventSubscriber' shared autowired service.
     *
     * @return \Ibexa\Bundle\Connect\EventSubscriber\PageBuilderPreRenderEventSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/connect/src/bundle/EventSubscriber/PageBuilderPreRenderEventSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/connect/src/lib/PageBuilder/BlockClient.php';

        $a = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['Ibexa\\Bundle\\Connect\\EventSubscriber\\PageBuilderPreRenderEventSubscriber'])) {
            return $container->privates['Ibexa\\Bundle\\Connect\\EventSubscriber\\PageBuilderPreRenderEventSubscriber'];
        }
        $b = ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService());

        $c = new \Ibexa\Connect\PageBuilder\BlockClient(($container->privates['.debug.ibexa.connect.http_client'] ?? $container->get_Debug_Ibexa_Connect_HttpClientService()), $a, $b);
        $c->setLogger($b);

        return $container->privates['Ibexa\\Bundle\\Connect\\EventSubscriber\\PageBuilderPreRenderEventSubscriber'] = new \Ibexa\Bundle\Connect\EventSubscriber\PageBuilderPreRenderEventSubscriber($c);
    }
}
