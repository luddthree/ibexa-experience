<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRecommendationEventSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Personalization\Event\Subscriber\RecommendationEventSubscriber' shared autowired service.
     *
     * @return \Ibexa\Personalization\Event\Subscriber\RecommendationEventSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Event/Subscriber/RecommendationEventSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/OutputType/OutputTypeResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/OutputType/OutputTypeResolver.php';

        $a = ($container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'] ?? $container->load('getCachedScenarioServiceService'));

        if (isset($container->privates['Ibexa\\Personalization\\Event\\Subscriber\\RecommendationEventSubscriber'])) {
            return $container->privates['Ibexa\\Personalization\\Event\\Subscriber\\RecommendationEventSubscriber'];
        }
        $b = ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService());

        $container->privates['Ibexa\\Personalization\\Event\\Subscriber\\RecommendationEventSubscriber'] = $instance = new \Ibexa\Personalization\Event\Subscriber\RecommendationEventSubscriber(($container->services['Ibexa\\Core\\MVC\\Symfony\\Locale\\LocaleConverter'] ?? $container->getLocaleConverterService()), new \Ibexa\Personalization\OutputType\OutputTypeResolver($a, ($container->privates['Ibexa\\Personalization\\SiteAccess\\ScopeParameterNativeResolver'] ?? $container->getScopeParameterNativeResolverService()), ($container->privates['ibexa.personalization.serializer'] ?? $container->getIbexa_Personalization_SerializerService())), ($container->privates['Ibexa\\Personalization\\Service\\RecommendationService'] ?? $container->getRecommendationService2Service()), ($container->privates['Ibexa\\Personalization\\Config\\Repository\\RepositoryConfigResolver'] ?? $container->load('getRepositoryConfigResolverService')), $b);

        $instance->setLogger($b);

        return $instance;
    }
}
