<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUserRegisterControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\User\Controller\UserRegisterController' shared autowired service.
     *
     * @return \Ibexa\Bundle\User\Controller\UserRegisterController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/bundle/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/bundle/Controller/UserRegisterController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/lib/Form/DataMapper/UserRegisterMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/lib/ConfigResolver/RegistrationContentTypeLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/lib/ConfigResolver/ConfigurableRegistrationContentTypeLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/lib/ConfigResolver/RegistrationGroupLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/lib/ConfigResolver/ConfigurableRegistrationGroupLoader.php';

        $a = ($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService());
        $b = ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService());

        $c = new \Ibexa\User\Form\DataMapper\UserRegisterMapper(new \Ibexa\User\ConfigResolver\ConfigurableRegistrationContentTypeLoader($a, $b, ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService())), new \Ibexa\User\ConfigResolver\ConfigurableRegistrationGroupLoader($a, $b));
        $c->setParam('language', ($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService())->getParameter("languages", null, null)[0]);

        $container->services['Ibexa\\Bundle\\User\\Controller\\UserRegisterController'] = $instance = new \Ibexa\Bundle\User\Controller\UserRegisterController($c, ($container->privates['Ibexa\\ContentForms\\Form\\ActionDispatcher\\UserDispatcher'] ?? $container->load('getUserDispatcherService')), ($container->privates['Ibexa\\User\\Invitation\\InvitationService'] ?? $container->getInvitationServiceService()));

        $instance->setContainer($container);

        return $instance;
    }
}
