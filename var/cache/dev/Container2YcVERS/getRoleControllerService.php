<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRoleControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\AdminUi\Controller\RoleController' shared autowired service.
     *
     * @return \Ibexa\Bundle\AdminUi\Controller\RoleController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/bundle/Controller/RoleController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Form/DataMapper/DataMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Form/DataMapper/RoleCreateMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Form/DataMapper/RoleCopyMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Form/DataMapper/RoleUpdateMapper.php';

        $container->services['Ibexa\\Bundle\\AdminUi\\Controller\\RoleController'] = $instance = new \Ibexa\Bundle\AdminUi\Controller\RoleController(($container->privates['Ibexa\\AdminUi\\Notification\\TranslatableNotificationHandler'] ?? $container->getTranslatableNotificationHandlerService()), ($container->services['ibexa.api.service.role'] ?? $container->getIbexa_Api_Service_RoleService()), new \Ibexa\AdminUi\Form\DataMapper\RoleCreateMapper(), new \Ibexa\AdminUi\Form\DataMapper\RoleCopyMapper(), new \Ibexa\AdminUi\Form\DataMapper\RoleUpdateMapper(), ($container->privates['Ibexa\\AdminUi\\Form\\Factory\\FormFactory'] ?? $container->getFormFactory2Service()), ($container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'] ?? $container->load('getSubmitHandlerService')), ($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService()));

        $instance->setContainer($container);
        $instance->performAccessCheck();

        return $instance;
    }
}
