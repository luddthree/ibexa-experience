<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCompanyHistorySubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\CorporateAccount\Event\Listener\CompanyHistorySubscriber' shared autowired service.
     *
     * @return \Ibexa\CorporateAccount\Event\Listener\CompanyHistorySubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/corporate-account/src/lib/Event/Listener/CompanyHistorySubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/corporate-account/src/lib/Persistence/Legacy/CompanyHistory/HandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/corporate-account/src/lib/Persistence/Legacy/CompanyHistory/Handler.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/corporate-account/src/lib/Persistence/Legacy/CompanyHistory/Mapper.php';

        $a = ($container->privates['Ibexa\\CorporateAccount\\Event\\ApplicationService'] ?? $container->getApplicationServiceService());

        if (isset($container->privates['Ibexa\\CorporateAccount\\Event\\Listener\\CompanyHistorySubscriber'])) {
            return $container->privates['Ibexa\\CorporateAccount\\Event\\Listener\\CompanyHistorySubscriber'];
        }
        $b = ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService());

        if (isset($container->privates['Ibexa\\CorporateAccount\\Event\\Listener\\CompanyHistorySubscriber'])) {
            return $container->privates['Ibexa\\CorporateAccount\\Event\\Listener\\CompanyHistorySubscriber'];
        }

        return $container->privates['Ibexa\\CorporateAccount\\Event\\Listener\\CompanyHistorySubscriber'] = new \Ibexa\CorporateAccount\Event\Listener\CompanyHistorySubscriber(new \Ibexa\CorporateAccount\Persistence\Legacy\CompanyHistory\Handler(($container->privates['Ibexa\\CorporateAccount\\Persistence\\Legacy\\CompanyHistory\\Gateway\\DoctrineDatabase'] ?? $container->load('getDoctrineDatabase26Service')), new \Ibexa\CorporateAccount\Persistence\Legacy\CompanyHistory\Mapper()), $a, $b);
    }
}
