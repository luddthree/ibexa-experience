<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Firewall_Map_Context_IbexaFrontService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.firewall.map.context.ibexa_front' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Security/FirewallContext.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Util/TargetPathTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Firewall/ExceptionListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/EntryPoint/FormAuthenticationEntryPoint.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Firewall/FirewallListenerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Firewall/AbstractListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Firewall/LogoutListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-bundle/Security/FirewallConfig.php';

        $a = ($container->privates['security.http_utils'] ?? $container->load('getSecurity_HttpUtilsService'));

        if (isset($container->privates['security.firewall.map.context.ibexa_front'])) {
            return $container->privates['security.firewall.map.context.ibexa_front'];
        }
        $b = ($container->services['http_kernel'] ?? $container->getHttpKernelService());

        if (isset($container->privates['security.firewall.map.context.ibexa_front'])) {
            return $container->privates['security.firewall.map.context.ibexa_front'];
        }
        $c = ($container->privates['security.event_dispatcher.ibexa_front'] ?? $container->load('getSecurity_EventDispatcher_IbexaFrontService'));

        if (isset($container->privates['security.firewall.map.context.ibexa_front'])) {
            return $container->privates['security.firewall.map.context.ibexa_front'];
        }
        $d = ($container->services['.container.private.security.token_storage'] ?? $container->get_Container_Private_Security_TokenStorageService());
        $e = new \Symfony\Component\Security\Http\Firewall\LogoutListener($d, $a, $c, ['csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => '/logout']);
        $e->addHandler(($container->privates['Ibexa\\Rest\\Server\\Security\\RestLogoutHandler'] ?? $container->load('getRestLogoutHandlerService')));

        return $container->privates['security.firewall.map.context.ibexa_front'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['security.channel_listener'] ?? $container->load('getSecurity_ChannelListenerService'));
            yield 1 => ($container->privates['security.context_listener.0'] ?? $container->load('getSecurity_ContextListener_0Service'));
            yield 2 => ($container->privates['security.authentication.listener.guard.ibexa_front'] ?? $container->load('getSecurity_Authentication_Listener_Guard_IbexaFrontService'));
            yield 3 => ($container->privates['security.authentication.listener.form.ibexa_front'] ?? $container->load('getSecurity_Authentication_Listener_Form_IbexaFrontService'));
            yield 4 => ($container->privates['ibexa.rest.security.authentication.listener.session.ibexa_front'] ?? $container->load('getIbexa_Rest_Security_Authentication_Listener_Session_IbexaFrontService'));
            yield 5 => ($container->privates['security.authentication.listener.anonymous.ibexa_front'] ?? $container->load('getSecurity_Authentication_Listener_Anonymous_IbexaFrontService'));
            yield 6 => ($container->privates['security.access_listener'] ?? $container->load('getSecurity_AccessListenerService'));
        }, 7), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($d, ($container->privates['security.authentication.trust_resolver'] ?? ($container->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver())), $a, 'ibexa_front', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($b, $a, '/login', false), NULL, NULL, ($container->privates['monolog.logger.security'] ?? $container->load('getMonolog_Logger_SecurityService')), false), $e, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('ibexa_front', 'Ibexa\\Core\\MVC\\Symfony\\Security\\UserChecker', '.security.request_matcher.3UEFixr', true, false, 'ibexa.security.user_provider', 'ibexa_front', 'security.authentication.form_entry_point.ibexa_front', NULL, NULL, [0 => 'guard', 1 => 'form_login', 2 => 'ibexa_rest_session', 3 => 'anonymous'], NULL));
    }
}
