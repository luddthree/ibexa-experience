<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSystemInfoTabGroupListenerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\SystemInfo\EventListener\SystemInfoTabGroupListener' shared autowired service.
     *
     * @return \Ibexa\SystemInfo\EventListener\SystemInfoTabGroupListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/system-info/src/lib/EventListener/SystemInfoTabGroupListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/system-info/src/lib/Tab/SystemInfo/TabFactory.php';

        $a = ($container->privates['Ibexa\\AdminUi\\Tab\\TabRegistry'] ?? $container->load('getTabRegistryService'));

        if (isset($container->services['Ibexa\\SystemInfo\\EventListener\\SystemInfoTabGroupListener'])) {
            return $container->services['Ibexa\\SystemInfo\\EventListener\\SystemInfoTabGroupListener'];
        }
        $b = ($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService());

        if (isset($container->services['Ibexa\\SystemInfo\\EventListener\\SystemInfoTabGroupListener'])) {
            return $container->services['Ibexa\\SystemInfo\\EventListener\\SystemInfoTabGroupListener'];
        }

        return $container->services['Ibexa\\SystemInfo\\EventListener\\SystemInfoTabGroupListener'] = new \Ibexa\SystemInfo\EventListener\SystemInfoTabGroupListener($a, new \Ibexa\SystemInfo\Tab\SystemInfo\TabFactory($b, ($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService()), ($container->privates['twig.runtime.httpkernel'] ?? $container->load('getTwig_Runtime_HttpkernelService'))), ($container->services['Ibexa\\Bundle\\SystemInfo\\SystemInfo\\SystemInfoCollectorRegistry'] ?? $container->load('getSystemInfoCollectorRegistryService')));
    }
}
