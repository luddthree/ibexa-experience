<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRoleMigrationGeneratorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Migration\Generator\Role\RoleMigrationGenerator' shared autowired service.
     *
     * @return \Ibexa\Migration\Generator\Role\RoleMigrationGenerator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/MigrationGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/Role/RoleMigrationGenerator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/StepBuilder/StepFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Log/LoggerAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/StepBuilder/AbstractStepFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/Role/StepBuilder/RoleStepFactory.php';

        $a = new \Ibexa\Migration\Generator\Role\StepBuilder\RoleStepFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'create' => ['privates', 'Ibexa\\Migration\\Generator\\Role\\StepBuilder\\RoleCreateStepBuilder', 'getRoleCreateStepBuilderService', true],
            'delete' => ['privates', 'Ibexa\\Migration\\Generator\\Role\\StepBuilder\\RoleDeleteStepBuilder', 'getRoleDeleteStepBuilderService', true],
            'update' => ['privates', 'Ibexa\\Migration\\Generator\\Role\\StepBuilder\\RoleUpdateStepBuilder', 'getRoleUpdateStepBuilderService', true],
        ], [
            'create' => 'Ibexa\\Migration\\Generator\\Role\\StepBuilder\\RoleCreateStepBuilder',
            'delete' => 'Ibexa\\Migration\\Generator\\Role\\StepBuilder\\RoleDeleteStepBuilder',
            'update' => 'Ibexa\\Migration\\Generator\\Role\\StepBuilder\\RoleUpdateStepBuilder',
        ]), 'role');
        $a->setLogger(($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        return $container->privates['Ibexa\\Migration\\Generator\\Role\\RoleMigrationGenerator'] = new \Ibexa\Migration\Generator\Role\RoleMigrationGenerator($a, ($container->services['ibexa.api.service.role'] ?? $container->getIbexa_Api_Service_RoleService()));
    }
}
