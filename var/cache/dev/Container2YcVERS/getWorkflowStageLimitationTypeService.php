<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getWorkflowStageLimitationTypeService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Workflow\Security\Limitation\WorkflowStageLimitationType' shared autowired service.
     *
     * @return \Ibexa\Workflow\Security\Limitation\WorkflowStageLimitationType
     */
    public static function do($container, $lazyLoad = true)
    {
        if ($lazyLoad) {
            return $container->privates['Ibexa\\Workflow\\Security\\Limitation\\WorkflowStageLimitationType'] = $container->createProxy('WorkflowStageLimitationType_1c2931e', function () use ($container) {
                return \WorkflowStageLimitationType_1c2931e::staticProxyConstructor(function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = self::do($container, false);

                    $proxy->setProxyInitializer(null);

                    return true;
                });
            });
        }

        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/contracts/Limitation/Type.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/workflow/src/lib/Security/Limitation/WorkflowStageLimitationType.php';

        return new \Ibexa\Workflow\Security\Limitation\WorkflowStageLimitationType(($container->privates['Ibexa\\Workflow\\Registry\\WorkflowRegistry'] ?? $container->getWorkflowRegistryService()), ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService()));
    }
}
