<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRemoveOrphanedContentCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\Taxonomy\Command\RemoveOrphanedContentCommand' shared autowired service.
     *
     * @return \Ibexa\Bundle\Taxonomy\Command\RemoveOrphanedContentCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/bundle/Command/RemoveOrphanedContentCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/Persistence/Gateway/ContentGatewayInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/Persistence/Gateway/ContentGateway.php';

        $container->privates['Ibexa\\Bundle\\Taxonomy\\Command\\RemoveOrphanedContentCommand'] = $instance = new \Ibexa\Bundle\Taxonomy\Command\RemoveOrphanedContentCommand(($container->privates['Ibexa\\Taxonomy\\Service\\TaxonomyConfiguration'] ?? $container->getTaxonomyConfigurationService()), ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService()), new \Ibexa\Taxonomy\Persistence\Gateway\ContentGateway(($container->services['ibexa.persistence.connection'] ?? $container->getIbexa_Persistence_ConnectionService())), ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService()), ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService()));

        $instance->setLogger(($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));
        $instance->addOption('siteaccess', NULL, 4, 'SiteAccess to use for operations. If not provided, default siteaccess will be used');
        $instance->setName('ibexa:taxonomy:remove-orphaned-content');
        $instance->setDescription('Find and remove orphaned Content items that may have been left after removing Taxonomy Entries');

        return $instance;
    }
}
