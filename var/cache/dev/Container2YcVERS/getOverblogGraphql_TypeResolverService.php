<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOverblogGraphql_TypeResolverService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'overblog_graphql.type_resolver' shared service.
     *
     * @return \Overblog\GraphQLBundle\Resolver\TypeResolver
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/overblog/graphql-bundle/src/Resolver/FluentResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/overblog/graphql-bundle/src/Resolver/AbstractResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/overblog/graphql-bundle/src/Resolver/TypeResolver.php';

        $container->services['overblog_graphql.type_resolver'] = $instance = new \Overblog\GraphQLBundle\Resolver\TypeResolver();

        $instance->setDispatcher(($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()));
        $instance->addSolution('overblog_graphql.definition.string_type', function () use ($container) {
            return ($container->privates['overblog_graphql.definition.string_type'] ?? $container->load('getOverblogGraphql_Definition_StringTypeService'));
        }, [0 => 'String'], ['id' => 'overblog_graphql.definition.string_type', 'aliases' => [0 => 'String'], 'alias' => 'String']);
        $instance->addSolution('overblog_graphql.definition.int_type', function () use ($container) {
            return ($container->privates['overblog_graphql.definition.int_type'] ?? $container->load('getOverblogGraphql_Definition_IntTypeService'));
        }, [0 => 'Int'], ['id' => 'overblog_graphql.definition.int_type', 'aliases' => [0 => 'Int'], 'alias' => 'Int']);
        $instance->addSolution('overblog_graphql.definition.float_type', function () use ($container) {
            return ($container->privates['overblog_graphql.definition.float_type'] ?? $container->load('getOverblogGraphql_Definition_FloatTypeService'));
        }, [0 => 'Float'], ['id' => 'overblog_graphql.definition.float_type', 'aliases' => [0 => 'Float'], 'alias' => 'Float']);
        $instance->addSolution('overblog_graphql.definition.boolean_type', function () use ($container) {
            return ($container->privates['overblog_graphql.definition.boolean_type'] ?? $container->load('getOverblogGraphql_Definition_BooleanTypeService'));
        }, [0 => 'Boolean'], ['id' => 'overblog_graphql.definition.boolean_type', 'aliases' => [0 => 'Boolean'], 'alias' => 'Boolean']);
        $instance->addSolution('overblog_graphql.definition.id_type', function () use ($container) {
            return ($container->privates['overblog_graphql.definition.id_type'] ?? $container->load('getOverblogGraphql_Definition_IdTypeService'));
        }, [0 => 'ID'], ['id' => 'overblog_graphql.definition.id_type', 'aliases' => [0 => 'ID'], 'alias' => 'ID']);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextBlockAttributeValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextBlockAttributeValueType'] ?? $container->load('getRichTextBlockAttributeValueTypeService'));
        }, [0 => 'RichTextBlockAttributeValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextBlockAttributeValueType', 'aliases' => [0 => 'RichTextBlockAttributeValue'], 'alias' => 'RichTextBlockAttributeValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockType'] ?? $container->load('getPageBlockTypeService'));
        }, [0 => 'PageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockType', 'aliases' => [0 => 'PageBlock'], 'alias' => 'PageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BasePageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BasePageBlockType'] ?? $container->load('getBasePageBlockTypeService'));
        }, [0 => 'BasePageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BasePageBlockType', 'aliases' => [0 => 'BasePageBlock'], 'alias' => 'BasePageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockPropertiesType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockPropertiesType'] ?? $container->load('getPageBlockPropertiesTypeService'));
        }, [0 => 'PageBlockProperties'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockPropertiesType', 'aliases' => [0 => 'PageBlockProperties'], 'alias' => 'PageBlockProperties', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockAttributeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockAttributeType'] ?? $container->load('getPageBlockAttributeTypeService'));
        }, [0 => 'PageBlockAttribute'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlockAttributeType', 'aliases' => [0 => 'PageBlockAttribute'], 'alias' => 'PageBlockAttribute', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageType'] ?? $container->load('getPageType2Service'));
        }, [0 => 'Page'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageType', 'aliases' => [0 => 'Page'], 'alias' => 'Page', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageZoneType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageZoneType'] ?? $container->load('getPageZoneTypeService'));
        }, [0 => 'PageZone'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageZoneType', 'aliases' => [0 => 'PageZone'], 'alias' => 'PageZone', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemAddedSchedulerBlockEventType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemAddedSchedulerBlockEventType'] ?? $container->load('getItemAddedSchedulerBlockEventTypeService'));
        }, [0 => 'ItemAddedSchedulerBlockEvent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemAddedSchedulerBlockEventType', 'aliases' => [0 => 'ItemAddedSchedulerBlockEvent'], 'alias' => 'ItemAddedSchedulerBlockEvent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemRemovedSchedulerBlockEventType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemRemovedSchedulerBlockEventType'] ?? $container->load('getItemRemovedSchedulerBlockEventTypeService'));
        }, [0 => 'ItemRemovedSchedulerBlockEvent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemRemovedSchedulerBlockEventType', 'aliases' => [0 => 'ItemRemovedSchedulerBlockEvent'], 'alias' => 'ItemRemovedSchedulerBlockEvent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemsReorderedSchedulerBlockEventType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemsReorderedSchedulerBlockEventType'] ?? $container->load('getItemsReorderedSchedulerBlockEventTypeService'));
        }, [0 => 'ItemsReorderedSchedulerBlockEvent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemsReorderedSchedulerBlockEventType', 'aliases' => [0 => 'ItemsReorderedSchedulerBlockEvent'], 'alias' => 'ItemsReorderedSchedulerBlockEvent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LimitChangedSchedulerBlockEventType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LimitChangedSchedulerBlockEventType'] ?? $container->load('getLimitChangedSchedulerBlockEventTypeService'));
        }, [0 => 'LimitChangedSchedulerBlockEvent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LimitChangedSchedulerBlockEventType', 'aliases' => [0 => 'LimitChangedSchedulerBlockEvent'], 'alias' => 'LimitChangedSchedulerBlockEvent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BasePageBlockAttributeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BasePageBlockAttributeType'] ?? $container->load('getBasePageBlockAttributeTypeService'));
        }, [0 => 'BasePageBlockAttribute'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BasePageBlockAttributeType', 'aliases' => [0 => 'BasePageBlockAttribute'], 'alias' => 'BasePageBlockAttribute', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockSlotType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockSlotType'] ?? $container->load('getSchedulerBlockSlotTypeService'));
        }, [0 => 'SchedulerBlockSlot'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockSlotType', 'aliases' => [0 => 'SchedulerBlockSlot'], 'alias' => 'SchedulerBlockSlot', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockItemType'] ?? $container->load('getSchedulerBlockItemTypeService'));
        }, [0 => 'SchedulerBlockItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockItemType', 'aliases' => [0 => 'SchedulerBlockItem'], 'alias' => 'SchedulerBlockItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockSnapshotType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockSnapshotType'] ?? $container->load('getSchedulerBlockSnapshotTypeService'));
        }, [0 => 'SchedulerBlockSnapshot'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockSnapshotType', 'aliases' => [0 => 'SchedulerBlockSnapshot'], 'alias' => 'SchedulerBlockSnapshot', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockEventType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockEventType'] ?? $container->load('getSchedulerBlockEventTypeService'));
        }, [0 => 'SchedulerBlockEvent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulerBlockEventType', 'aliases' => [0 => 'SchedulerBlockEvent'], 'alias' => 'SchedulerBlockEvent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseSchedulerBlockEventType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseSchedulerBlockEventType'] ?? $container->load('getBaseSchedulerBlockEventTypeService'));
        }, [0 => 'BaseSchedulerBlockEvent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseSchedulerBlockEventType', 'aliases' => [0 => 'BaseSchedulerBlockEvent'], 'alias' => 'BaseSchedulerBlockEvent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseTaxonomyType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseTaxonomyType'] ?? $container->load('getBaseTaxonomyTypeService'));
        }, [0 => 'BaseTaxonomy'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseTaxonomyType', 'aliases' => [0 => 'BaseTaxonomy'], 'alias' => 'BaseTaxonomy', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryType'] ?? $container->load('getTaxonomyEntryType2Service'));
        }, [0 => 'TaxonomyEntry'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryType', 'aliases' => [0 => 'TaxonomyEntry'], 'alias' => 'TaxonomyEntry', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryConnectionType'] ?? $container->load('getTaxonomyEntryConnectionTypeService'));
        }, [0 => 'TaxonomyEntryConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryConnectionType', 'aliases' => [0 => 'TaxonomyEntryConnection'], 'alias' => 'TaxonomyEntryConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductAvailabilityType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductAvailabilityType'] ?? $container->load('getProductAvailabilityType2Service'));
        }, [0 => 'ProductAvailability'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductAvailabilityType', 'aliases' => [0 => 'ProductAvailability'], 'alias' => 'ProductAvailability', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SortByProductOptionsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SortByProductOptionsType'] ?? $container->load('getSortByProductOptionsTypeService'));
        }, [0 => 'SortByProductOptions'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SortByProductOptionsType', 'aliases' => [0 => 'SortByProductOptions'], 'alias' => 'SortByProductOptions', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductInterfaceType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductInterfaceType'] ?? $container->load('getProductInterfaceTypeService'));
        }, [0 => 'ProductInterface'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductInterfaceType', 'aliases' => [0 => 'ProductInterface'], 'alias' => 'ProductInterface', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentAwareInterfaceType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentAwareInterfaceType'] ?? $container->load('getContentAwareInterfaceTypeService'));
        }, [0 => 'ContentAwareInterface'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentAwareInterfaceType', 'aliases' => [0 => 'ContentAwareInterface'], 'alias' => 'ContentAwareInterface', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductType'] ?? $container->load('getBaseProductTypeService'));
        }, [0 => 'BaseProduct'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductType', 'aliases' => [0 => 'BaseProduct'], 'alias' => 'BaseProduct', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductContentFieldsInterfaceType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductContentFieldsInterfaceType'] ?? $container->load('getProductContentFieldsInterfaceTypeService'));
        }, [0 => 'ProductContentFieldsInterface'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductContentFieldsInterfaceType', 'aliases' => [0 => 'ProductContentFieldsInterface'], 'alias' => 'ProductContentFieldsInterface', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductContentFieldType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductContentFieldType'] ?? $container->load('getProductContentFieldTypeService'));
        }, [0 => 'ProductContentField'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductContentFieldType', 'aliases' => [0 => 'ProductContentField'], 'alias' => 'ProductContentField', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PriceType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PriceType'] ?? $container->load('getPriceTypeService'));
        }, [0 => 'Price'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PriceType', 'aliases' => [0 => 'Price'], 'alias' => 'Price', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CurrencyType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CurrencyType'] ?? $container->load('getCurrencyType2Service'));
        }, [0 => 'Currency'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CurrencyType', 'aliases' => [0 => 'Currency'], 'alias' => 'Currency', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductConnectionType'] ?? $container->load('getBaseProductConnectionTypeService'));
        }, [0 => 'BaseProductConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductConnectionType', 'aliases' => [0 => 'BaseProductConnection'], 'alias' => 'BaseProductConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductTypeInterfaceType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductTypeInterfaceType'] ?? $container->load('getProductTypeInterfaceTypeService'));
        }, [0 => 'ProductTypeInterface'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductTypeInterfaceType', 'aliases' => [0 => 'ProductTypeInterface'], 'alias' => 'ProductTypeInterface', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeAwareInterfaceType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeAwareInterfaceType'] ?? $container->load('getContentTypeAwareInterfaceTypeService'));
        }, [0 => 'ContentTypeAwareInterface'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeAwareInterfaceType', 'aliases' => [0 => 'ContentTypeAwareInterface'], 'alias' => 'ContentTypeAwareInterface', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductTypeType'] ?? $container->load('getBaseProductTypeTypeService'));
        }, [0 => 'BaseProductType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductTypeType', 'aliases' => [0 => 'BaseProductType'], 'alias' => 'BaseProductType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeAssignmentType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeAssignmentType'] ?? $container->load('getAttributeAssignmentTypeService'));
        }, [0 => 'AttributeAssignment'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeAssignmentType', 'aliases' => [0 => 'AttributeAssignment'], 'alias' => 'AttributeAssignment', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeDefinitionType'] ?? $container->load('getAttributeDefinitionTypeService'));
        }, [0 => 'AttributeDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeDefinitionType', 'aliases' => [0 => 'AttributeDefinition'], 'alias' => 'AttributeDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeTypeType'] ?? $container->load('getAttributeTypeTypeService'));
        }, [0 => 'AttributeType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeTypeType', 'aliases' => [0 => 'AttributeType'], 'alias' => 'AttributeType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeGroupType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeGroupType'] ?? $container->load('getAttributeGroupTypeService'));
        }, [0 => 'AttributeGroup'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeGroupType', 'aliases' => [0 => 'AttributeGroup'], 'alias' => 'AttributeGroup', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\OptionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\OptionType'] ?? $container->load('getOptionTypeService'));
        }, [0 => 'Option'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\OptionType', 'aliases' => [0 => 'Option'], 'alias' => 'Option', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductAttributesInterfaceType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductAttributesInterfaceType'] ?? $container->load('getProductAttributesInterfaceTypeService'));
        }, [0 => 'ProductAttributesInterface'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductAttributesInterfaceType', 'aliases' => [0 => 'ProductAttributesInterface'], 'alias' => 'ProductAttributesInterface', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeInterfaceType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeInterfaceType'] ?? $container->load('getAttributeInterfaceTypeService'));
        }, [0 => 'AttributeInterface'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AttributeInterfaceType', 'aliases' => [0 => 'AttributeInterface'], 'alias' => 'AttributeInterface', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CheckboxAttributeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CheckboxAttributeType'] ?? $container->load('getCheckboxAttributeTypeService'));
        }, [0 => 'CheckboxAttribute'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CheckboxAttributeType', 'aliases' => [0 => 'CheckboxAttribute'], 'alias' => 'CheckboxAttribute', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ColorAttributeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ColorAttributeType'] ?? $container->load('getColorAttributeTypeService'));
        }, [0 => 'ColorAttribute'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ColorAttributeType', 'aliases' => [0 => 'ColorAttribute'], 'alias' => 'ColorAttribute', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatAttributeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatAttributeType'] ?? $container->load('getFloatAttributeTypeService'));
        }, [0 => 'FloatAttribute'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatAttributeType', 'aliases' => [0 => 'FloatAttribute'], 'alias' => 'FloatAttribute', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerAttributeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerAttributeType'] ?? $container->load('getIntegerAttributeTypeService'));
        }, [0 => 'IntegerAttribute'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerAttributeType', 'aliases' => [0 => 'IntegerAttribute'], 'alias' => 'IntegerAttribute', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionAttributeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionAttributeType'] ?? $container->load('getSelectionAttributeTypeService'));
        }, [0 => 'SelectionAttribute'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionAttributeType', 'aliases' => [0 => 'SelectionAttribute'], 'alias' => 'SelectionAttribute', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedAttributeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedAttributeType'] ?? $container->load('getUntypedAttributeTypeService'));
        }, [0 => 'UntypedAttribute'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedAttributeType', 'aliases' => [0 => 'UntypedAttribute'], 'alias' => 'UntypedAttribute', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldDefinitionType'] ?? $container->load('getContentQueryFieldDefinitionTypeService'));
        }, [0 => 'ContentQueryFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldDefinitionType', 'aliases' => [0 => 'ContentQueryFieldDefinition'], 'alias' => 'ContentQueryFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldSettingsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldSettingsType'] ?? $container->load('getContentQueryFieldSettingsTypeService'));
        }, [0 => 'ContentQueryFieldSettings'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldSettingsType', 'aliases' => [0 => 'ContentQueryFieldSettings'], 'alias' => 'ContentQueryFieldSettings', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldParameterType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldParameterType'] ?? $container->load('getContentQueryFieldParameterTypeService'));
        }, [0 => 'ContentQueryFieldParameter'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentQueryFieldParameterType', 'aliases' => [0 => 'ContentQueryFieldParameter'], 'alias' => 'ContentQueryFieldParameter', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserType'] ?? $container->load('getUserType3Service'));
        }, [0 => 'User'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserType', 'aliases' => [0 => 'User'], 'alias' => 'User', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupType'] ?? $container->load('getUserGroupTypeService'));
        }, [0 => 'UserGroup'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupType', 'aliases' => [0 => 'UserGroup'], 'alias' => 'UserGroup', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeType'] ?? $container->load('getContentTypeType2Service'));
        }, [0 => 'ContentType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeType', 'aliases' => [0 => 'ContentType'], 'alias' => 'ContentType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeGroupType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeGroupType'] ?? $container->load('getContentTypeGroupType3Service'));
        }, [0 => 'ContentTypeGroup'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeGroupType', 'aliases' => [0 => 'ContentTypeGroup'], 'alias' => 'ContentTypeGroup', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FieldDefinitionType'] ?? $container->load('getFieldDefinitionType2Service'));
        }, [0 => 'FieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FieldDefinitionType', 'aliases' => [0 => 'FieldDefinition'], 'alias' => 'FieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CheckboxFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CheckboxFieldDefinitionType'] ?? $container->load('getCheckboxFieldDefinitionTypeService'));
        }, [0 => 'CheckboxFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CheckboxFieldDefinitionType', 'aliases' => [0 => 'CheckboxFieldDefinition'], 'alias' => 'CheckboxFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextBlockFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextBlockFieldDefinitionType'] ?? $container->load('getTextBlockFieldDefinitionTypeService'));
        }, [0 => 'TextBlockFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextBlockFieldDefinitionType', 'aliases' => [0 => 'TextBlockFieldDefinition'], 'alias' => 'TextBlockFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextLineFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextLineFieldDefinitionType'] ?? $container->load('getTextLineFieldDefinitionTypeService'));
        }, [0 => 'TextLineFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextLineFieldDefinitionType', 'aliases' => [0 => 'TextLineFieldDefinition'], 'alias' => 'TextLineFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextLineFieldDefinitionConstraintsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextLineFieldDefinitionConstraintsType'] ?? $container->load('getTextLineFieldDefinitionConstraintsTypeService'));
        }, [0 => 'TextLineFieldDefinitionConstraints'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TextLineFieldDefinitionConstraintsType', 'aliases' => [0 => 'TextLineFieldDefinitionConstraints'], 'alias' => 'TextLineFieldDefinitionConstraints', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatFieldDefinitionType'] ?? $container->load('getFloatFieldDefinitionTypeService'));
        }, [0 => 'FloatFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatFieldDefinitionType', 'aliases' => [0 => 'FloatFieldDefinition'], 'alias' => 'FloatFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatFieldDefinitionConstraintsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatFieldDefinitionConstraintsType'] ?? $container->load('getFloatFieldDefinitionConstraintsTypeService'));
        }, [0 => 'FloatFieldDefinitionConstraints'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FloatFieldDefinitionConstraintsType', 'aliases' => [0 => 'FloatFieldDefinitionConstraints'], 'alias' => 'FloatFieldDefinitionConstraints', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerFieldDefinitionType'] ?? $container->load('getIntegerFieldDefinitionTypeService'));
        }, [0 => 'IntegerFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerFieldDefinitionType', 'aliases' => [0 => 'IntegerFieldDefinition'], 'alias' => 'IntegerFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerFieldDefinitionConstraintsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerFieldDefinitionConstraintsType'] ?? $container->load('getIntegerFieldDefinitionConstraintsTypeService'));
        }, [0 => 'IntegerFieldDefinitionConstraints'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\IntegerFieldDefinitionConstraintsType', 'aliases' => [0 => 'IntegerFieldDefinitionConstraints'], 'alias' => 'IntegerFieldDefinitionConstraints', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldDefinitionType'] ?? $container->load('getBinaryFieldDefinitionTypeService'));
        }, [0 => 'BinaryFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldDefinitionType', 'aliases' => [0 => 'BinaryFieldDefinition'], 'alias' => 'BinaryFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldDefinitionConstraintsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldDefinitionConstraintsType'] ?? $container->load('getBinaryFieldDefinitionConstraintsTypeService'));
        }, [0 => 'BinaryFieldDefinitionConstraints'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldDefinitionConstraintsType', 'aliases' => [0 => 'BinaryFieldDefinitionConstraints'], 'alias' => 'BinaryFieldDefinitionConstraints', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldDefinitionType'] ?? $container->load('getMediaFieldDefinitionTypeService'));
        }, [0 => 'MediaFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldDefinitionType', 'aliases' => [0 => 'MediaFieldDefinition'], 'alias' => 'MediaFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldDefinitionSettingsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldDefinitionSettingsType'] ?? $container->load('getMediaFieldDefinitionSettingsTypeService'));
        }, [0 => 'MediaFieldDefinitionSettings'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldDefinitionSettingsType', 'aliases' => [0 => 'MediaFieldDefinitionSettings'], 'alias' => 'MediaFieldDefinitionSettings', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldDefinitionType'] ?? $container->load('getCountryFieldDefinitionTypeService'));
        }, [0 => 'CountryFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldDefinitionType', 'aliases' => [0 => 'CountryFieldDefinition'], 'alias' => 'CountryFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldDefinitionSettingsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldDefinitionSettingsType'] ?? $container->load('getCountryFieldDefinitionSettingsTypeService'));
        }, [0 => 'CountryFieldDefinitionSettings'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldDefinitionSettingsType', 'aliases' => [0 => 'CountryFieldDefinitionSettings'], 'alias' => 'CountryFieldDefinitionSettings', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionType'] ?? $container->load('getSelectionFieldDefinitionTypeService'));
        }, [0 => 'SelectionFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionType', 'aliases' => [0 => 'SelectionFieldDefinition'], 'alias' => 'SelectionFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionSettingsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionSettingsType'] ?? $container->load('getSelectionFieldDefinitionSettingsTypeService'));
        }, [0 => 'SelectionFieldDefinitionSettings'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionSettingsType', 'aliases' => [0 => 'SelectionFieldDefinitionSettings'], 'alias' => 'SelectionFieldDefinitionSettings', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionOptionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionOptionType'] ?? $container->load('getSelectionFieldDefinitionOptionTypeService'));
        }, [0 => 'SelectionFieldDefinitionOption'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldDefinitionOptionType', 'aliases' => [0 => 'SelectionFieldDefinitionOption'], 'alias' => 'SelectionFieldDefinitionOption', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationFieldDefinitionType'] ?? $container->load('getRelationFieldDefinitionTypeService'));
        }, [0 => 'RelationFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationFieldDefinitionType', 'aliases' => [0 => 'RelationFieldDefinition'], 'alias' => 'RelationFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationFieldDefinitionSettingsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationFieldDefinitionSettingsType'] ?? $container->load('getRelationFieldDefinitionSettingsTypeService'));
        }, [0 => 'RelationFieldDefinitionSettings'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationFieldDefinitionSettingsType', 'aliases' => [0 => 'RelationFieldDefinitionSettings'], 'alias' => 'RelationFieldDefinitionSettings', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationListFieldDefinitionConstraintsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationListFieldDefinitionConstraintsType'] ?? $container->load('getRelationListFieldDefinitionConstraintsTypeService'));
        }, [0 => 'RelationListFieldDefinitionConstraints'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationListFieldDefinitionConstraintsType', 'aliases' => [0 => 'RelationListFieldDefinitionConstraints'], 'alias' => 'RelationListFieldDefinitionConstraints', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationListFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationListFieldDefinitionType'] ?? $container->load('getRelationListFieldDefinitionTypeService'));
        }, [0 => 'RelationListFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationListFieldDefinitionType', 'aliases' => [0 => 'RelationListFieldDefinition'], 'alias' => 'RelationListFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RepositoryType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RepositoryType'] ?? $container->load('getRepositoryTypeService'));
        }, [0 => 'Repository'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RepositoryType', 'aliases' => [0 => 'Repository'], 'alias' => 'Repository', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PlatformType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PlatformType'] ?? $container->load('getPlatformTypeService'));
        }, [0 => 'Platform'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PlatformType', 'aliases' => [0 => 'Platform'], 'alias' => 'Platform', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\GenericFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\GenericFieldValueType'] ?? $container->load('getGenericFieldValueTypeService'));
        }, [0 => 'GenericFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\GenericFieldValueType', 'aliases' => [0 => 'GenericFieldValue'], 'alias' => 'GenericFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageFieldValueType'] ?? $container->load('getImageFieldValueTypeService'));
        }, [0 => 'ImageFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageFieldValueType', 'aliases' => [0 => 'ImageFieldValue'], 'alias' => 'ImageFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageAdditionalDataType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageAdditionalDataType'] ?? $container->load('getImageAdditionalDataTypeService'));
        }, [0 => 'ImageAdditionalData'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageAdditionalDataType', 'aliases' => [0 => 'ImageAdditionalData'], 'alias' => 'ImageAdditionalData', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageVariationType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageVariationType'] ?? $container->load('getImageVariationTypeService'));
        }, [0 => 'ImageVariation'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageVariationType', 'aliases' => [0 => 'ImageVariation'], 'alias' => 'ImageVariation', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AuthorFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AuthorFieldValueType'] ?? $container->load('getAuthorFieldValueTypeService'));
        }, [0 => 'AuthorFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AuthorFieldValueType', 'aliases' => [0 => 'AuthorFieldValue'], 'alias' => 'AuthorFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFileFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFileFieldValueType'] ?? $container->load('getBinaryFileFieldValueTypeService'));
        }, [0 => 'BinaryFileFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFileFieldValueType', 'aliases' => [0 => 'BinaryFileFieldValue'], 'alias' => 'BinaryFileFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldValueType'] ?? $container->load('getCountryFieldValueTypeService'));
        }, [0 => 'CountryFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CountryFieldValueType', 'aliases' => [0 => 'CountryFieldValue'], 'alias' => 'CountryFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFieldValueType'] ?? $container->load('getDateFieldValueTypeService'));
        }, [0 => 'DateFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFieldValueType', 'aliases' => [0 => 'DateFieldValue'], 'alias' => 'DateFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateAndTimeFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateAndTimeFieldValueType'] ?? $container->load('getDateAndTimeFieldValueTypeService'));
        }, [0 => 'DateAndTimeFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateAndTimeFieldValueType', 'aliases' => [0 => 'DateAndTimeFieldValue'], 'alias' => 'DateAndTimeFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmailAddressFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmailAddressFieldValueType'] ?? $container->load('getEmailAddressFieldValueTypeService'));
        }, [0 => 'EmailAddressFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmailAddressFieldValueType', 'aliases' => [0 => 'EmailAddressFieldValue'], 'alias' => 'EmailAddressFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\KeywordFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\KeywordFieldValueType'] ?? $container->load('getKeywordFieldValueTypeService'));
        }, [0 => 'KeywordFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\KeywordFieldValueType', 'aliases' => [0 => 'KeywordFieldValue'], 'alias' => 'KeywordFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MapLocationFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MapLocationFieldValueType'] ?? $container->load('getMapLocationFieldValueTypeService'));
        }, [0 => 'MapLocationFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MapLocationFieldValueType', 'aliases' => [0 => 'MapLocationFieldValue'], 'alias' => 'MapLocationFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldValueType'] ?? $container->load('getMediaFieldValueTypeService'));
        }, [0 => 'MediaFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldValueType', 'aliases' => [0 => 'MediaFieldValue'], 'alias' => 'MediaFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PriceFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PriceFieldValueType'] ?? $container->load('getPriceFieldValueTypeService'));
        }, [0 => 'PriceFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PriceFieldValueType', 'aliases' => [0 => 'PriceFieldValue'], 'alias' => 'PriceFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RatingFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RatingFieldValueType'] ?? $container->load('getRatingFieldValueTypeService'));
        }, [0 => 'RatingFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RatingFieldValueType', 'aliases' => [0 => 'RatingFieldValue'], 'alias' => 'RatingFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldValueType'] ?? $container->load('getRichTextFieldValueTypeService'));
        }, [0 => 'RichTextFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldValueType', 'aliases' => [0 => 'RichTextFieldValue'], 'alias' => 'RichTextFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldValueType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldValueType'] ?? $container->load('getSelectionFieldValueTypeService'));
        }, [0 => 'SelectionFieldValue'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SelectionFieldValueType', 'aliases' => [0 => 'SelectionFieldValue'], 'alias' => 'SelectionFieldValue', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ObjectStateGroupType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ObjectStateGroupType'] ?? $container->load('getObjectStateGroupType2Service'));
        }, [0 => 'ObjectStateGroup'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ObjectStateGroupType', 'aliases' => [0 => 'ObjectStateGroup'], 'alias' => 'ObjectStateGroup', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentSearchQueryType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentSearchQueryType'] ?? $container->load('getContentSearchQueryTypeService'));
        }, [0 => 'ContentSearchQuery'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentSearchQueryType', 'aliases' => [0 => 'ContentSearchQuery'], 'alias' => 'ContentSearchQuery', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FieldCriterionInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FieldCriterionInputType'] ?? $container->load('getFieldCriterionInputTypeService'));
        }, [0 => 'FieldCriterionInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FieldCriterionInputType', 'aliases' => [0 => 'FieldCriterionInput'], 'alias' => 'FieldCriterionInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateInputType'] ?? $container->load('getDateInputTypeService'));
        }, [0 => 'DateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateInputType', 'aliases' => [0 => 'DateInput'], 'alias' => 'DateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateCriterionOperatorType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateCriterionOperatorType'] ?? $container->load('getDateCriterionOperatorTypeService'));
        }, [0 => 'DateCriterionOperator'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateCriterionOperatorType', 'aliases' => [0 => 'DateCriterionOperator'], 'alias' => 'DateCriterionOperator', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SortByOptionsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SortByOptionsType'] ?? $container->load('getSortByOptionsTypeService'));
        }, [0 => 'SortByOptions'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SortByOptionsType', 'aliases' => [0 => 'SortByOptions'], 'alias' => 'SortByOptions', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ObjectStateType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ObjectStateType'] ?? $container->load('getObjectStateType2Service'));
        }, [0 => 'ObjectState'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ObjectStateType', 'aliases' => [0 => 'ObjectState'], 'alias' => 'ObjectState', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentType'] ?? $container->load('getDomainContentTypeService'));
        }, [0 => 'DomainContent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentType', 'aliases' => [0 => 'DomainContent'], 'alias' => 'DomainContent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AbstractDomainContentType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AbstractDomainContentType'] ?? $container->load('getAbstractDomainContentTypeService'));
        }, [0 => 'AbstractDomainContent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AbstractDomainContentType', 'aliases' => [0 => 'AbstractDomainContent'], 'alias' => 'AbstractDomainContent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedContentType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedContentType'] ?? $container->load('getUntypedContentTypeService'));
        }, [0 => 'UntypedContent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedContentType', 'aliases' => [0 => 'UntypedContent'], 'alias' => 'UntypedContent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentTypeGroupType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentTypeGroupType'] ?? $container->load('getDomainContentTypeGroupTypeService'));
        }, [0 => 'DomainContentTypeGroup'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentTypeGroupType', 'aliases' => [0 => 'DomainContentTypeGroup'], 'alias' => 'DomainContentTypeGroup', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentTypeType'] ?? $container->load('getDomainContentTypeTypeService'));
        }, [0 => 'DomainContentType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainContentTypeType', 'aliases' => [0 => 'DomainContentType'], 'alias' => 'DomainContentType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseDomainContentTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseDomainContentTypeType'] ?? $container->load('getBaseDomainContentTypeTypeService'));
        }, [0 => 'BaseDomainContentType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseDomainContentTypeType', 'aliases' => [0 => 'BaseDomainContentType'], 'alias' => 'BaseDomainContentType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ThumbnailType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ThumbnailType'] ?? $container->load('getThumbnailTypeService'));
        }, [0 => 'Thumbnail'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ThumbnailType', 'aliases' => [0 => 'Thumbnail'], 'alias' => 'Thumbnail', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\NodeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\NodeType'] ?? $container->load('getNodeTypeService'));
        }, [0 => 'Node'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\NodeType', 'aliases' => [0 => 'Node'], 'alias' => 'Node', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentType'] ?? $container->load('getContentType7Service'));
        }, [0 => 'Content'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentType', 'aliases' => [0 => 'Content'], 'alias' => 'Content', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentRelationType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentRelationType'] ?? $container->load('getContentRelationTypeService'));
        }, [0 => 'ContentRelation'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentRelationType', 'aliases' => [0 => 'ContentRelation'], 'alias' => 'ContentRelation', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationTypeType'] ?? $container->load('getRelationTypeTypeService'));
        }, [0 => 'RelationType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RelationTypeType', 'aliases' => [0 => 'RelationType'], 'alias' => 'RelationType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemType'] ?? $container->load('getItemTypeService'));
        }, [0 => 'Item'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemType', 'aliases' => [0 => 'Item'], 'alias' => 'Item', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AbstractItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AbstractItemType'] ?? $container->load('getAbstractItemTypeService'));
        }, [0 => 'AbstractItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AbstractItemType', 'aliases' => [0 => 'AbstractItem'], 'alias' => 'AbstractItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedItemType'] ?? $container->load('getUntypedItemTypeService'));
        }, [0 => 'UntypedItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UntypedItemType', 'aliases' => [0 => 'UntypedItem'], 'alias' => 'UntypedItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemTypeGroupType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemTypeGroupType'] ?? $container->load('getItemTypeGroupTypeService'));
        }, [0 => 'ItemTypeGroup'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemTypeGroupType', 'aliases' => [0 => 'ItemTypeGroup'], 'alias' => 'ItemTypeGroup', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemTypeType'] ?? $container->load('getItemTypeTypeService'));
        }, [0 => 'ItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemTypeType', 'aliases' => [0 => 'ItemType'], 'alias' => 'ItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseItemTypeType'] ?? $container->load('getBaseItemTypeTypeService'));
        }, [0 => 'BaseItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseItemTypeType', 'aliases' => [0 => 'BaseItemType'], 'alias' => 'BaseItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SectionType'] ?? $container->load('getSectionType3Service'));
        }, [0 => 'Section'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SectionType', 'aliases' => [0 => 'Section'], 'alias' => 'Section', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFormatConstantType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFormatConstantType'] ?? $container->load('getDateFormatConstantTypeService'));
        }, [0 => 'DateFormatConstant'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFormatConstantType', 'aliases' => [0 => 'DateFormatConstant'], 'alias' => 'DateFormatConstant', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateTimeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateTimeType'] ?? $container->load('getDateTimeTypeService'));
        }, [0 => 'DateTime'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateTimeType', 'aliases' => [0 => 'DateTime'], 'alias' => 'DateTime', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PlatformMutationType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PlatformMutationType'] ?? $container->load('getPlatformMutationTypeService'));
        }, [0 => 'PlatformMutation'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PlatformMutationType', 'aliases' => [0 => 'PlatformMutation'], 'alias' => 'PlatformMutation', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UploadedFilesPayloadType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UploadedFilesPayloadType'] ?? $container->load('getUploadedFilesPayloadTypeService'));
        }, [0 => 'UploadedFilesPayload'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UploadedFilesPayloadType', 'aliases' => [0 => 'UploadedFilesPayload'], 'alias' => 'UploadedFilesPayload', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DeleteContentPayloadType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DeleteContentPayloadType'] ?? $container->load('getDeleteContentPayloadTypeService'));
        }, [0 => 'DeleteContentPayload'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DeleteContentPayloadType', 'aliases' => [0 => 'DeleteContentPayload'], 'alias' => 'DeleteContentPayload', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CreatedTokenPayloadType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CreatedTokenPayloadType'] ?? $container->load('getCreatedTokenPayloadTypeService'));
        }, [0 => 'CreatedTokenPayload'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CreatedTokenPayloadType', 'aliases' => [0 => 'CreatedTokenPayload'], 'alias' => 'CreatedTokenPayload', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\VersionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\VersionType'] ?? $container->load('getVersionTypeService'));
        }, [0 => 'Version'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\VersionType', 'aliases' => [0 => 'Version'], 'alias' => 'Version', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationType'] ?? $container->load('getLocationType4Service'));
        }, [0 => 'Location'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationType', 'aliases' => [0 => 'Location'], 'alias' => 'Location', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationSortByOptionsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationSortByOptionsType'] ?? $container->load('getLocationSortByOptionsTypeService'));
        }, [0 => 'LocationSortByOptions'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationSortByOptionsType', 'aliases' => [0 => 'LocationSortByOptions'], 'alias' => 'LocationSortByOptions', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationConnectionType'] ?? $container->load('getLocationConnectionTypeService'));
        }, [0 => 'LocationConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationConnectionType', 'aliases' => [0 => 'LocationConnection'], 'alias' => 'LocationConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ConnectionPageType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ConnectionPageType'] ?? $container->load('getConnectionPageTypeService'));
        }, [0 => 'ConnectionPage'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ConnectionPageType', 'aliases' => [0 => 'ConnectionPage'], 'alias' => 'ConnectionPage', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\AuthorInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\AuthorInputType'] ?? $container->load('getAuthorInputTypeService'));
        }, [0 => 'AuthorInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\AuthorInputType', 'aliases' => [0 => 'AuthorInput'], 'alias' => 'AuthorInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldInputType'] ?? $container->load('getRichTextFieldInputTypeService'));
        }, [0 => 'RichTextFieldInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldInputType', 'aliases' => [0 => 'RichTextFieldInput'], 'alias' => 'RichTextFieldInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UrlFieldInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UrlFieldInputType'] ?? $container->load('getUrlFieldInputTypeService'));
        }, [0 => 'UrlFieldInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UrlFieldInputType', 'aliases' => [0 => 'UrlFieldInput'], 'alias' => 'UrlFieldInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MapLocationFieldInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MapLocationFieldInputType'] ?? $container->load('getMapLocationFieldInputTypeService'));
        }, [0 => 'MapLocationFieldInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MapLocationFieldInputType', 'aliases' => [0 => 'MapLocationFieldInput'], 'alias' => 'MapLocationFieldInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFieldInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFieldInputType'] ?? $container->load('getDateFieldInputTypeService'));
        }, [0 => 'DateFieldInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateFieldInputType', 'aliases' => [0 => 'DateFieldInput'], 'alias' => 'DateFieldInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldInputFormatType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldInputFormatType'] ?? $container->load('getRichTextFieldInputFormatTypeService'));
        }, [0 => 'RichTextFieldInputFormat'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichTextFieldInputFormatType', 'aliases' => [0 => 'RichTextFieldInputFormat'], 'alias' => 'RichTextFieldInputFormat', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateInputFormatType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateInputFormatType'] ?? $container->load('getDateInputFormatTypeService'));
        }, [0 => 'DateInputFormat'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DateInputFormatType', 'aliases' => [0 => 'DateInputFormat'], 'alias' => 'DateInputFormat', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldInputType'] ?? $container->load('getMediaFieldInputTypeService'));
        }, [0 => 'MediaFieldInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MediaFieldInputType', 'aliases' => [0 => 'MediaFieldInput'], 'alias' => 'MediaFieldInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageFieldInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageFieldInputType'] ?? $container->load('getImageFieldInputTypeService'));
        }, [0 => 'ImageFieldInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageFieldInputType', 'aliases' => [0 => 'ImageFieldInput'], 'alias' => 'ImageFieldInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldInputType'] ?? $container->load('getBinaryFieldInputTypeService'));
        }, [0 => 'BinaryFieldInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BinaryFieldInputType', 'aliases' => [0 => 'BinaryFieldInput'], 'alias' => 'BinaryFieldInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileUploadType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileUploadType'] ?? $container->load('getFileUploadTypeService'));
        }, [0 => 'FileUpload'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileUploadType', 'aliases' => [0 => 'FileUpload'], 'alias' => 'FileUpload', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UrlAliasType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UrlAliasType'] ?? $container->load('getUrlAliasTypeService'));
        }, [0 => 'UrlAlias'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UrlAliasType', 'aliases' => [0 => 'UrlAlias'], 'alias' => 'UrlAlias', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationUrlAliasType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationUrlAliasType'] ?? $container->load('getLocationUrlAliasTypeService'));
        }, [0 => 'LocationUrlAlias'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationUrlAliasType', 'aliases' => [0 => 'LocationUrlAlias'], 'alias' => 'LocationUrlAlias', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ResourceUrlAliasType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ResourceUrlAliasType'] ?? $container->load('getResourceUrlAliasTypeService'));
        }, [0 => 'ResourceUrlAlias'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ResourceUrlAliasType', 'aliases' => [0 => 'ResourceUrlAlias'], 'alias' => 'ResourceUrlAlias', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\VirtualUrlAliasType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\VirtualUrlAliasType'] ?? $container->load('getVirtualUrlAliasTypeService'));
        }, [0 => 'VirtualUrlAlias'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\VirtualUrlAliasType', 'aliases' => [0 => 'VirtualUrlAlias'], 'alias' => 'VirtualUrlAlias', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemType'] ?? $container->load('getFolderItemTypeService'));
        }, [0 => 'FolderItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemType', 'aliases' => [0 => 'FolderItem'], 'alias' => 'FolderItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemTypeType'] ?? $container->load('getEditorItemTypeTypeService'));
        }, [0 => 'EditorItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemTypeType', 'aliases' => [0 => 'EditorItemType'], 'alias' => 'EditorItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaNewsPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaNewsPageBlockViewsType'] ?? $container->load('getIbexaNewsPageBlockViewsTypeService'));
        }, [0 => 'IbexaNewsPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaNewsPageBlockViewsType', 'aliases' => [0 => 'IbexaNewsPageBlockViews'], 'alias' => 'IbexaNewsPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemCreateInputType'] ?? $container->load('getFileItemCreateInputTypeService'));
        }, [0 => 'FileItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemCreateInputType', 'aliases' => [0 => 'FileItemCreateInput'], 'alias' => 'FileItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemTypeType'] ?? $container->load('getProductCategoryTagItemTypeTypeService'));
        }, [0 => 'ProductCategoryTagItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemTypeType', 'aliases' => [0 => 'ProductCategoryTagItemType'], 'alias' => 'ProductCategoryTagItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\QualifioPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\QualifioPageBlockViewsType'] ?? $container->load('getQualifioPageBlockViewsTypeService'));
        }, [0 => 'QualifioPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\QualifioPageBlockViewsType', 'aliases' => [0 => 'QualifioPageBlockViews'], 'alias' => 'QualifioPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemUpdateInputType'] ?? $container->load('getEditorItemUpdateInputTypeService'));
        }, [0 => 'EditorItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemUpdateInputType', 'aliases' => [0 => 'EditorItemUpdateInput'], 'alias' => 'EditorItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CollectionPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CollectionPageBlockType'] ?? $container->load('getCollectionPageBlockTypeService'));
        }, [0 => 'CollectionPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CollectionPageBlockType', 'aliases' => [0 => 'CollectionPageBlock'], 'alias' => 'CollectionPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupContentTypesType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupContentTypesType'] ?? $container->load('getItemGroupContentTypesTypeService'));
        }, [0 => 'ItemGroupContentTypes'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupContentTypesType', 'aliases' => [0 => 'ItemGroupContentTypes'], 'alias' => 'ItemGroupContentTypes', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentlistPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentlistPageBlockViewsType'] ?? $container->load('getContentlistPageBlockViewsTypeService'));
        }, [0 => 'ContentlistPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentlistPageBlockViewsType', 'aliases' => [0 => 'ContentlistPageBlockViews'], 'alias' => 'ContentlistPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemCreateInputType'] ?? $container->load('getArticleItemCreateInputTypeService'));
        }, [0 => 'ArticleItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemCreateInputType', 'aliases' => [0 => 'ArticleItemCreateInput'], 'alias' => 'ArticleItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemType'] ?? $container->load('getCustomerPortalPageItemTypeService'));
        }, [0 => 'CustomerPortalPageItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemType', 'aliases' => [0 => 'CustomerPortalPageItem'], 'alias' => 'CustomerPortalPageItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemConnectionType'] ?? $container->load('getProductCategoryTagItemConnectionTypeService'));
        }, [0 => 'ProductCategoryTagItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemConnectionType', 'aliases' => [0 => 'ProductCategoryTagItemConnection'], 'alias' => 'ProductCategoryTagItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeIdentifierType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeIdentifierType'] ?? $container->load('getContentTypeIdentifierTypeService'));
        }, [0 => 'ContentTypeIdentifier'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentTypeIdentifierType', 'aliases' => [0 => 'ContentTypeIdentifier'], 'alias' => 'ContentTypeIdentifier', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemCreateInputType'] ?? $container->load('getLandingPageItemCreateInputTypeService'));
        }, [0 => 'LandingPageItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemCreateInputType', 'aliases' => [0 => 'LandingPageItemCreateInput'], 'alias' => 'LandingPageItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormPageBlockViewsType'] ?? $container->load('getFormPageBlockViewsTypeService'));
        }, [0 => 'FormPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormPageBlockViewsType', 'aliases' => [0 => 'FormPageBlockViews'], 'alias' => 'FormPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaActivityLogListPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaActivityLogListPageBlockViewsType'] ?? $container->load('getIbexaActivityLogListPageBlockViewsTypeService'));
        }, [0 => 'IbexaActivityLogListPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaActivityLogListPageBlockViewsType', 'aliases' => [0 => 'IbexaActivityLogListPageBlockViews'], 'alias' => 'IbexaActivityLogListPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RecentlyAddedPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RecentlyAddedPageBlockViewsType'] ?? $container->load('getRecentlyAddedPageBlockViewsTypeService'));
        }, [0 => 'RecentlyAddedPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RecentlyAddedPageBlockViewsType', 'aliases' => [0 => 'RecentlyAddedPageBlockViews'], 'alias' => 'RecentlyAddedPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemConnectionType'] ?? $container->load('getImageItemConnectionTypeService'));
        }, [0 => 'ImageItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemConnectionType', 'aliases' => [0 => 'ImageItemConnection'], 'alias' => 'ImageItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\VideoPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\VideoPageBlockViewsType'] ?? $container->load('getVideoPageBlockViewsTypeService'));
        }, [0 => 'VideoPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\VideoPageBlockViewsType', 'aliases' => [0 => 'VideoPageBlockViews'], 'alias' => 'VideoPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemCreateInputType'] ?? $container->load('getEditorItemCreateInputTypeService'));
        }, [0 => 'EditorItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemCreateInputType', 'aliases' => [0 => 'EditorItemCreateInput'], 'alias' => 'EditorItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemType'] ?? $container->load('getProductCategoryTagItemTypeService'));
        }, [0 => 'ProductCategoryTagItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemType', 'aliases' => [0 => 'ProductCategoryTagItem'], 'alias' => 'ProductCategoryTagItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemUpdateInputType'] ?? $container->load('getUserItemUpdateInputTypeService'));
        }, [0 => 'UserItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemUpdateInputType', 'aliases' => [0 => 'UserItemUpdateInput'], 'alias' => 'UserItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaNewsPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaNewsPageBlockType'] ?? $container->load('getIbexaNewsPageBlockTypeService'));
        }, [0 => 'IbexaNewsPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaNewsPageBlockType', 'aliases' => [0 => 'IbexaNewsPageBlock'], 'alias' => 'IbexaNewsPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MyContentPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MyContentPageBlockType'] ?? $container->load('getMyContentPageBlockTypeService'));
        }, [0 => 'MyContentPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MyContentPageBlockType', 'aliases' => [0 => 'MyContentPageBlock'], 'alias' => 'MyContentPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemTypeType'] ?? $container->load('getImageItemTypeTypeService'));
        }, [0 => 'ImageItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemTypeType', 'aliases' => [0 => 'ImageItemType'], 'alias' => 'ImageItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichtextPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichtextPageBlockViewsType'] ?? $container->load('getRichtextPageBlockViewsTypeService'));
        }, [0 => 'RichtextPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichtextPageBlockViewsType', 'aliases' => [0 => 'RichtextPageBlockViews'], 'alias' => 'RichtextPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulePageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulePageBlockViewsType'] ?? $container->load('getSchedulePageBlockViewsTypeService'));
        }, [0 => 'SchedulePageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulePageBlockViewsType', 'aliases' => [0 => 'SchedulePageBlockViews'], 'alias' => 'SchedulePageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\GalleryPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\GalleryPageBlockViewsType'] ?? $container->load('getGalleryPageBlockViewsTypeService'));
        }, [0 => 'GalleryPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\GalleryPageBlockViewsType', 'aliases' => [0 => 'GalleryPageBlockViews'], 'alias' => 'GalleryPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupCustomerPortalTypesType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupCustomerPortalTypesType'] ?? $container->load('getItemGroupCustomerPortalTypesTypeService'));
        }, [0 => 'ItemGroupCustomerPortalTypes'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupCustomerPortalTypesType', 'aliases' => [0 => 'ItemGroupCustomerPortalTypes'], 'alias' => 'ItemGroupCustomerPortalTypes', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemUpdateInputType'] ?? $container->load('getArticleItemUpdateInputTypeService'));
        }, [0 => 'ArticleItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemUpdateInputType', 'aliases' => [0 => 'ArticleItemUpdateInput'], 'alias' => 'ArticleItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\QuickActionsPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\QuickActionsPageBlockViewsType'] ?? $container->load('getQuickActionsPageBlockViewsTypeService'));
        }, [0 => 'QuickActionsPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\QuickActionsPageBlockViewsType', 'aliases' => [0 => 'QuickActionsPageBlockViews'], 'alias' => 'QuickActionsPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemTypeType'] ?? $container->load('getFolderItemTypeTypeService'));
        }, [0 => 'FolderItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemTypeType', 'aliases' => [0 => 'FolderItemType'], 'alias' => 'FolderItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageVariationIdentifierType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageVariationIdentifierType'] ?? $container->load('getImageVariationIdentifierTypeService'));
        }, [0 => 'ImageVariationIdentifier'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageVariationIdentifierType', 'aliases' => [0 => 'ImageVariationIdentifier'], 'alias' => 'ImageVariationIdentifier', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemCreateInputType'] ?? $container->load('getUserGroupItemCreateInputTypeService'));
        }, [0 => 'UserGroupItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemCreateInputType', 'aliases' => [0 => 'UserGroupItemCreateInput'], 'alias' => 'UserGroupItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PersonalizedPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PersonalizedPageBlockType'] ?? $container->load('getPersonalizedPageBlockTypeService'));
        }, [0 => 'PersonalizedPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PersonalizedPageBlockType', 'aliases' => [0 => 'PersonalizedPageBlock'], 'alias' => 'PersonalizedPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemTypeType'] ?? $container->load('getUserItemTypeTypeService'));
        }, [0 => 'UserItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemTypeType', 'aliases' => [0 => 'UserItemType'], 'alias' => 'UserItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemType'] ?? $container->load('getTagItemTypeService'));
        }, [0 => 'TagItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemType', 'aliases' => [0 => 'TagItem'], 'alias' => 'TagItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RssPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RssPageBlockType'] ?? $container->load('getRssPageBlockTypeService'));
        }, [0 => 'RssPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RssPageBlockType', 'aliases' => [0 => 'RssPageBlock'], 'alias' => 'RssPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsWithLowestStockPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsWithLowestStockPageBlockType'] ?? $container->load('getProductsWithLowestStockPageBlockTypeService'));
        }, [0 => 'ProductsWithLowestStockPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsWithLowestStockPageBlockType', 'aliases' => [0 => 'ProductsWithLowestStockPageBlock'], 'alias' => 'ProductsWithLowestStockPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemUpdateInputType'] ?? $container->load('getCustomerPortalPageItemUpdateInputTypeService'));
        }, [0 => 'CustomerPortalPageItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemUpdateInputType', 'aliases' => [0 => 'CustomerPortalPageItemUpdateInput'], 'alias' => 'CustomerPortalPageItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemType'] ?? $container->load('getImageItemTypeService'));
        }, [0 => 'ImageItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemType', 'aliases' => [0 => 'ImageItem'], 'alias' => 'ImageItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CatalogPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CatalogPageBlockType'] ?? $container->load('getCatalogPageBlockTypeService'));
        }, [0 => 'CatalogPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CatalogPageBlockType', 'aliases' => [0 => 'CatalogPageBlock'], 'alias' => 'CatalogPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CommonContentPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CommonContentPageBlockType'] ?? $container->load('getCommonContentPageBlockTypeService'));
        }, [0 => 'CommonContentPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CommonContentPageBlockType', 'aliases' => [0 => 'CommonContentPageBlock'], 'alias' => 'CommonContentPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemTypeType'] ?? $container->load('getLandingPageItemTypeTypeService'));
        }, [0 => 'LandingPageItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemTypeType', 'aliases' => [0 => 'LandingPageItemType'], 'alias' => 'LandingPageItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmbedPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmbedPageBlockViewsType'] ?? $container->load('getEmbedPageBlockViewsTypeService'));
        }, [0 => 'EmbedPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmbedPageBlockViewsType', 'aliases' => [0 => 'EmbedPageBlockViews'], 'alias' => 'EmbedPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RssPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RssPageBlockViewsType'] ?? $container->load('getRssPageBlockViewsTypeService'));
        }, [0 => 'RssPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RssPageBlockViewsType', 'aliases' => [0 => 'RssPageBlockViews'], 'alias' => 'RssPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemCreateInputType'] ?? $container->load('getFolderItemCreateInputTypeService'));
        }, [0 => 'FolderItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemCreateInputType', 'aliases' => [0 => 'FolderItemCreateInput'], 'alias' => 'FolderItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCollectionPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCollectionPageBlockType'] ?? $container->load('getProductCollectionPageBlockTypeService'));
        }, [0 => 'ProductCollectionPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCollectionPageBlockType', 'aliases' => [0 => 'ProductCollectionPageBlock'], 'alias' => 'ProductCollectionPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulePageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulePageBlockType'] ?? $container->load('getSchedulePageBlockTypeService'));
        }, [0 => 'SchedulePageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SchedulePageBlockType', 'aliases' => [0 => 'SchedulePageBlock'], 'alias' => 'SchedulePageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemUpdateInputType'] ?? $container->load('getTagItemUpdateInputTypeService'));
        }, [0 => 'TagItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemUpdateInputType', 'aliases' => [0 => 'TagItemUpdateInput'], 'alias' => 'TagItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemConnectionType'] ?? $container->load('getUserGroupItemConnectionTypeService'));
        }, [0 => 'UserGroupItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemConnectionType', 'aliases' => [0 => 'UserGroupItemConnection'], 'alias' => 'UserGroupItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemCreateInputType'] ?? $container->load('getCustomerPortalItemCreateInputTypeService'));
        }, [0 => 'CustomerPortalItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemCreateInputType', 'aliases' => [0 => 'CustomerPortalItemCreateInput'], 'alias' => 'CustomerPortalItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ReviewQueuePageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ReviewQueuePageBlockViewsType'] ?? $container->load('getReviewQueuePageBlockViewsTypeService'));
        }, [0 => 'ReviewQueuePageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ReviewQueuePageBlockViewsType', 'aliases' => [0 => 'ReviewQueuePageBlockViews'], 'alias' => 'ReviewQueuePageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CommonContentPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CommonContentPageBlockViewsType'] ?? $container->load('getCommonContentPageBlockViewsTypeService'));
        }, [0 => 'CommonContentPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CommonContentPageBlockViewsType', 'aliases' => [0 => 'CommonContentPageBlockViews'], 'alias' => 'CommonContentPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyProduct_categoriesType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyProduct_categoriesType'] ?? $container->load('getTaxonomyProductCategoriesTypeService'));
        }, [0 => 'TaxonomyProduct_categories'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyProduct_categoriesType', 'aliases' => [0 => 'TaxonomyProduct_categories'], 'alias' => 'TaxonomyProduct_categories', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemConnectionType'] ?? $container->load('getFileItemConnectionTypeService'));
        }, [0 => 'FileItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemConnectionType', 'aliases' => [0 => 'FileItemConnection'], 'alias' => 'FileItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemConnectionType'] ?? $container->load('getFormItemConnectionTypeService'));
        }, [0 => 'FormItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemConnectionType', 'aliases' => [0 => 'FormItemConnection'], 'alias' => 'FormItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RepositoryLanguageType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RepositoryLanguageType'] ?? $container->load('getRepositoryLanguageTypeService'));
        }, [0 => 'RepositoryLanguage'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RepositoryLanguageType', 'aliases' => [0 => 'RepositoryLanguage'], 'alias' => 'RepositoryLanguage', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastPurchasedPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastPurchasedPageBlockType'] ?? $container->load('getLastPurchasedPageBlockTypeService'));
        }, [0 => 'LastPurchasedPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastPurchasedPageBlockType', 'aliases' => [0 => 'LastPurchasedPageBlock'], 'alias' => 'LastPurchasedPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaConnectBlockPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaConnectBlockPageBlockType'] ?? $container->load('getIbexaConnectBlockPageBlockTypeService'));
        }, [0 => 'IbexaConnectBlockPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaConnectBlockPageBlockType', 'aliases' => [0 => 'IbexaConnectBlockPageBlock'], 'alias' => 'IbexaConnectBlockPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemTypeType'] ?? $container->load('getTagItemTypeTypeService'));
        }, [0 => 'TagItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemTypeType', 'aliases' => [0 => 'TagItemType'], 'alias' => 'TagItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsByCategoriesPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsByCategoriesPageBlockType'] ?? $container->load('getProductsByCategoriesPageBlockTypeService'));
        }, [0 => 'ProductsByCategoriesPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsByCategoriesPageBlockType', 'aliases' => [0 => 'ProductsByCategoriesPageBlock'], 'alias' => 'ProductsByCategoriesPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsByCategoriesPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsByCategoriesPageBlockViewsType'] ?? $container->load('getProductsByCategoriesPageBlockViewsTypeService'));
        }, [0 => 'ProductsByCategoriesPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsByCategoriesPageBlockViewsType', 'aliases' => [0 => 'ProductsByCategoriesPageBlockViews'], 'alias' => 'ProductsByCategoriesPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichtextPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichtextPageBlockType'] ?? $container->load('getRichtextPageBlockTypeService'));
        }, [0 => 'RichtextPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RichtextPageBlockType', 'aliases' => [0 => 'RichtextPageBlock'], 'alias' => 'RichtextPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastViewedPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastViewedPageBlockViewsType'] ?? $container->load('getLastViewedPageBlockViewsTypeService'));
        }, [0 => 'LastViewedPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastViewedPageBlockViewsType', 'aliases' => [0 => 'LastViewedPageBlockViews'], 'alias' => 'LastViewedPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemCreateInputType'] ?? $container->load('getFormItemCreateInputTypeService'));
        }, [0 => 'FormItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemCreateInputType', 'aliases' => [0 => 'FormItemCreateInput'], 'alias' => 'FormItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupUsersType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupUsersType'] ?? $container->load('getItemGroupUsersTypeService'));
        }, [0 => 'ItemGroupUsers'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupUsersType', 'aliases' => [0 => 'ItemGroupUsers'], 'alias' => 'ItemGroupUsers', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemCreateInputType'] ?? $container->load('getImageItemCreateInputTypeService'));
        }, [0 => 'ImageItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemCreateInputType', 'aliases' => [0 => 'ImageItemCreateInput'], 'alias' => 'ImageItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CatalogPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CatalogPageBlockViewsType'] ?? $container->load('getCatalogPageBlockViewsTypeService'));
        }, [0 => 'CatalogPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CatalogPageBlockViewsType', 'aliases' => [0 => 'CatalogPageBlockViews'], 'alias' => 'CatalogPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemUpdateInputType'] ?? $container->load('getImageItemUpdateInputTypeService'));
        }, [0 => 'ImageItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemUpdateInputType', 'aliases' => [0 => 'ImageItemUpdateInput'], 'alias' => 'ImageItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemTypeType'] ?? $container->load('getFormItemTypeTypeService'));
        }, [0 => 'FormItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemTypeType', 'aliases' => [0 => 'FormItemType'], 'alias' => 'FormItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemUpdateInputType'] ?? $container->load('getFileItemUpdateInputTypeService'));
        }, [0 => 'FileItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemUpdateInputType', 'aliases' => [0 => 'FileItemUpdateInput'], 'alias' => 'FileItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemConnectionType'] ?? $container->load('getUserItemConnectionTypeService'));
        }, [0 => 'UserItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemConnectionType', 'aliases' => [0 => 'UserItemConnection'], 'alias' => 'UserItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemCreateInputType'] ?? $container->load('getCustomerPortalPageItemCreateInputTypeService'));
        }, [0 => 'CustomerPortalPageItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemCreateInputType', 'aliases' => [0 => 'CustomerPortalPageItemCreateInput'], 'alias' => 'CustomerPortalPageItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\QuickActionsPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\QuickActionsPageBlockType'] ?? $container->load('getQuickActionsPageBlockTypeService'));
        }, [0 => 'QuickActionsPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\QuickActionsPageBlockType', 'aliases' => [0 => 'QuickActionsPageBlock'], 'alias' => 'QuickActionsPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BannerPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BannerPageBlockViewsType'] ?? $container->load('getBannerPageBlockViewsTypeService'));
        }, [0 => 'BannerPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BannerPageBlockViewsType', 'aliases' => [0 => 'BannerPageBlockViews'], 'alias' => 'BannerPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemTypeType'] ?? $container->load('getCustomerPortalItemTypeTypeService'));
        }, [0 => 'CustomerPortalItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemTypeType', 'aliases' => [0 => 'CustomerPortalItemType'], 'alias' => 'CustomerPortalItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemConnectionType'] ?? $container->load('getFolderItemConnectionTypeService'));
        }, [0 => 'FolderItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemConnectionType', 'aliases' => [0 => 'FolderItemConnection'], 'alias' => 'FolderItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemConnectionType'] ?? $container->load('getTagItemConnectionTypeService'));
        }, [0 => 'TagItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemConnectionType', 'aliases' => [0 => 'TagItemConnection'], 'alias' => 'TagItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyTagsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyTagsType'] ?? $container->load('getTaxonomyTagsTypeService'));
        }, [0 => 'TaxonomyTags'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyTagsType', 'aliases' => [0 => 'TaxonomyTags'], 'alias' => 'TaxonomyTags', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainType'] ?? $container->load('getDomainTypeService'));
        }, [0 => 'Domain'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DomainType', 'aliases' => [0 => 'Domain'], 'alias' => 'Domain', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemUpdateInputType'] ?? $container->load('getFolderItemUpdateInputTypeService'));
        }, [0 => 'FolderItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemUpdateInputType', 'aliases' => [0 => 'FolderItemUpdateInput'], 'alias' => 'FolderItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastPurchasedPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastPurchasedPageBlockViewsType'] ?? $container->load('getLastPurchasedPageBlockViewsTypeService'));
        }, [0 => 'LastPurchasedPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastPurchasedPageBlockViewsType', 'aliases' => [0 => 'LastPurchasedPageBlockViews'], 'alias' => 'LastPurchasedPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemType'] ?? $container->load('getFileItemTypeService'));
        }, [0 => 'FileItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemType', 'aliases' => [0 => 'FileItem'], 'alias' => 'FileItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TopClickedItemsPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TopClickedItemsPageBlockViewsType'] ?? $container->load('getTopClickedItemsPageBlockViewsTypeService'));
        }, [0 => 'TopClickedItemsPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TopClickedItemsPageBlockViewsType', 'aliases' => [0 => 'TopClickedItemsPageBlockViews'], 'alias' => 'TopClickedItemsPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupMediaTypesType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupMediaTypesType'] ?? $container->load('getItemGroupMediaTypesTypeService'));
        }, [0 => 'ItemGroupMediaTypes'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupMediaTypesType', 'aliases' => [0 => 'ItemGroupMediaTypes'], 'alias' => 'ItemGroupMediaTypes', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentlistPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentlistPageBlockType'] ?? $container->load('getContentlistPageBlockTypeService'));
        }, [0 => 'ContentlistPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ContentlistPageBlockType', 'aliases' => [0 => 'ContentlistPageBlock'], 'alias' => 'ContentlistPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupContentType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupContentType'] ?? $container->load('getItemGroupContentTypeService'));
        }, [0 => 'ItemGroupContent'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupContentType', 'aliases' => [0 => 'ItemGroupContent'], 'alias' => 'ItemGroupContent', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupMediaType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupMediaType'] ?? $container->load('getItemGroupMediaTypeService'));
        }, [0 => 'ItemGroupMedia'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupMediaType', 'aliases' => [0 => 'ItemGroupMedia'], 'alias' => 'ItemGroupMedia', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagPageBlockType'] ?? $container->load('getTagPageBlockTypeService'));
        }, [0 => 'TagPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagPageBlockType', 'aliases' => [0 => 'TagPageBlock'], 'alias' => 'TagPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\RecentlyAddedPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\RecentlyAddedPageBlockType'] ?? $container->load('getRecentlyAddedPageBlockTypeService'));
        }, [0 => 'RecentlyAddedPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\RecentlyAddedPageBlockType', 'aliases' => [0 => 'RecentlyAddedPageBlock'], 'alias' => 'RecentlyAddedPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemUpdateInputType'] ?? $container->load('getLandingPageItemUpdateInputTypeService'));
        }, [0 => 'LandingPageItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemUpdateInputType', 'aliases' => [0 => 'LandingPageItemUpdateInput'], 'alias' => 'LandingPageItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaActivityLogListPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaActivityLogListPageBlockType'] ?? $container->load('getIbexaActivityLogListPageBlockTypeService'));
        }, [0 => 'IbexaActivityLogListPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\IbexaActivityLogListPageBlockType', 'aliases' => [0 => 'IbexaActivityLogListPageBlock'], 'alias' => 'IbexaActivityLogListPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemCreateInputType'] ?? $container->load('getUserItemCreateInputTypeService'));
        }, [0 => 'UserItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemCreateInputType', 'aliases' => [0 => 'UserItemCreateInput'], 'alias' => 'UserItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemUpdateInputType'] ?? $container->load('getUserGroupItemUpdateInputTypeService'));
        }, [0 => 'UserGroupItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemUpdateInputType', 'aliases' => [0 => 'UserGroupItemUpdateInput'], 'alias' => 'UserGroupItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CollectionPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CollectionPageBlockViewsType'] ?? $container->load('getCollectionPageBlockViewsTypeService'));
        }, [0 => 'CollectionPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CollectionPageBlockViewsType', 'aliases' => [0 => 'CollectionPageBlockViews'], 'alias' => 'CollectionPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DynamicTargetingPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DynamicTargetingPageBlockViewsType'] ?? $container->load('getDynamicTargetingPageBlockViewsTypeService'));
        }, [0 => 'DynamicTargetingPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DynamicTargetingPageBlockViewsType', 'aliases' => [0 => 'DynamicTargetingPageBlockViews'], 'alias' => 'DynamicTargetingPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SalesRepPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SalesRepPageBlockViewsType'] ?? $container->load('getSalesRepPageBlockViewsTypeService'));
        }, [0 => 'SalesRepPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SalesRepPageBlockViewsType', 'aliases' => [0 => 'SalesRepPageBlockViews'], 'alias' => 'SalesRepPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupCustomerPortalType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupCustomerPortalType'] ?? $container->load('getItemGroupCustomerPortalTypeService'));
        }, [0 => 'ItemGroupCustomerPortal'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupCustomerPortalType', 'aliases' => [0 => 'ItemGroupCustomerPortal'], 'alias' => 'ItemGroupCustomerPortal', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemTypeType'] ?? $container->load('getUserGroupItemTypeTypeService'));
        }, [0 => 'UserGroupItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemTypeType', 'aliases' => [0 => 'UserGroupItemType'], 'alias' => 'UserGroupItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsWithLowestStockPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsWithLowestStockPageBlockViewsType'] ?? $container->load('getProductsWithLowestStockPageBlockViewsTypeService'));
        }, [0 => 'ProductsWithLowestStockPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductsWithLowestStockPageBlockViewsType', 'aliases' => [0 => 'ProductsWithLowestStockPageBlockViews'], 'alias' => 'ProductsWithLowestStockPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TargetingPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TargetingPageBlockType'] ?? $container->load('getTargetingPageBlockTypeService'));
        }, [0 => 'TargetingPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TargetingPageBlockType', 'aliases' => [0 => 'TargetingPageBlock'], 'alias' => 'TargetingPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmbedPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmbedPageBlockType'] ?? $container->load('getEmbedPageBlockTypeService'));
        }, [0 => 'EmbedPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EmbedPageBlockType', 'aliases' => [0 => 'EmbedPageBlock'], 'alias' => 'EmbedPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemCreateInputType'] ?? $container->load('getTagItemCreateInputTypeService'));
        }, [0 => 'TagItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemCreateInputType', 'aliases' => [0 => 'TagItemCreateInput'], 'alias' => 'TagItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemConnectionType'] ?? $container->load('getArticleItemConnectionTypeService'));
        }, [0 => 'ArticleItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemConnectionType', 'aliases' => [0 => 'ArticleItemConnection'], 'alias' => 'ArticleItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PersonalizedPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PersonalizedPageBlockViewsType'] ?? $container->load('getPersonalizedPageBlockViewsTypeService'));
        }, [0 => 'PersonalizedPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PersonalizedPageBlockViewsType', 'aliases' => [0 => 'PersonalizedPageBlockViews'], 'alias' => 'PersonalizedPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\DynamicTargetingPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\DynamicTargetingPageBlockType'] ?? $container->load('getDynamicTargetingPageBlockTypeService'));
        }, [0 => 'DynamicTargetingPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\DynamicTargetingPageBlockType', 'aliases' => [0 => 'DynamicTargetingPageBlock'], 'alias' => 'DynamicTargetingPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemType'] ?? $container->load('getCustomerPortalItemTypeService'));
        }, [0 => 'CustomerPortalItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemType', 'aliases' => [0 => 'CustomerPortalItem'], 'alias' => 'CustomerPortalItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MyContentPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MyContentPageBlockViewsType'] ?? $container->load('getMyContentPageBlockViewsTypeService'));
        }, [0 => 'MyContentPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MyContentPageBlockViewsType', 'aliases' => [0 => 'MyContentPageBlockViews'], 'alias' => 'MyContentPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemTypeType'] ?? $container->load('getCustomerPortalPageItemTypeTypeService'));
        }, [0 => 'CustomerPortalPageItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemTypeType', 'aliases' => [0 => 'CustomerPortalPageItemType'], 'alias' => 'CustomerPortalPageItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemCreateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemCreateInputType'] ?? $container->load('getProductCategoryTagItemCreateInputTypeService'));
        }, [0 => 'ProductCategoryTagItemCreateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemCreateInputType', 'aliases' => [0 => 'ProductCategoryTagItemCreateInput'], 'alias' => 'ProductCategoryTagItemCreateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlocksListType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlocksListType'] ?? $container->load('getPageBlocksListTypeService'));
        }, [0 => 'PageBlocksList'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageBlocksListType', 'aliases' => [0 => 'PageBlocksList'], 'alias' => 'PageBlocksList', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BannerPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BannerPageBlockType'] ?? $container->load('getBannerPageBlockTypeService'));
        }, [0 => 'BannerPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BannerPageBlockType', 'aliases' => [0 => 'BannerPageBlock'], 'alias' => 'BannerPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemConnectionType'] ?? $container->load('getEditorItemConnectionTypeService'));
        }, [0 => 'EditorItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemConnectionType', 'aliases' => [0 => 'EditorItemConnection'], 'alias' => 'EditorItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemType'] ?? $container->load('getUserItemTypeService'));
        }, [0 => 'UserItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemType', 'aliases' => [0 => 'UserItem'], 'alias' => 'UserItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BestsellersPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BestsellersPageBlockType'] ?? $container->load('getBestsellersPageBlockTypeService'));
        }, [0 => 'BestsellersPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BestsellersPageBlockType', 'aliases' => [0 => 'BestsellersPageBlock'], 'alias' => 'BestsellersPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\GalleryPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\GalleryPageBlockType'] ?? $container->load('getGalleryPageBlockTypeService'));
        }, [0 => 'GalleryPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\GalleryPageBlockType', 'aliases' => [0 => 'GalleryPageBlock'], 'alias' => 'GalleryPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemConnectionType'] ?? $container->load('getLandingPageItemConnectionTypeService'));
        }, [0 => 'LandingPageItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemConnectionType', 'aliases' => [0 => 'LandingPageItemConnection'], 'alias' => 'LandingPageItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemConnectionType'] ?? $container->load('getCustomerPortalItemConnectionTypeService'));
        }, [0 => 'CustomerPortalItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemConnectionType', 'aliases' => [0 => 'CustomerPortalItemConnection'], 'alias' => 'CustomerPortalItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemUpdateInputType'] ?? $container->load('getFormItemUpdateInputTypeService'));
        }, [0 => 'FormItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemUpdateInputType', 'aliases' => [0 => 'FormItemUpdateInput'], 'alias' => 'FormItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ReviewQueuePageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ReviewQueuePageBlockType'] ?? $container->load('getReviewQueuePageBlockTypeService'));
        }, [0 => 'ReviewQueuePageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ReviewQueuePageBlockType', 'aliases' => [0 => 'ReviewQueuePageBlock'], 'alias' => 'ReviewQueuePageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemTypeType'] ?? $container->load('getFileItemTypeTypeService'));
        }, [0 => 'FileItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemTypeType', 'aliases' => [0 => 'FileItemType'], 'alias' => 'FileItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagPageBlockViewsType'] ?? $container->load('getTagPageBlockViewsTypeService'));
        }, [0 => 'TagPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagPageBlockViewsType', 'aliases' => [0 => 'TagPageBlockViews'], 'alias' => 'TagPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastViewedPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastViewedPageBlockType'] ?? $container->load('getLastViewedPageBlockTypeService'));
        }, [0 => 'LastViewedPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LastViewedPageBlockType', 'aliases' => [0 => 'LastViewedPageBlock'], 'alias' => 'LastViewedPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TargetingPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TargetingPageBlockViewsType'] ?? $container->load('getTargetingPageBlockViewsTypeService'));
        }, [0 => 'TargetingPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TargetingPageBlockViewsType', 'aliases' => [0 => 'TargetingPageBlockViews'], 'alias' => 'TargetingPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemUpdateInputType'] ?? $container->load('getCustomerPortalItemUpdateInputTypeService'));
        }, [0 => 'CustomerPortalItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemUpdateInputType', 'aliases' => [0 => 'CustomerPortalItemUpdateInput'], 'alias' => 'CustomerPortalItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\QualifioPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\QualifioPageBlockType'] ?? $container->load('getQualifioPageBlockTypeService'));
        }, [0 => 'QualifioPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\QualifioPageBlockType', 'aliases' => [0 => 'QualifioPageBlock'], 'alias' => 'QualifioPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemType'] ?? $container->load('getLandingPageItemTypeService'));
        }, [0 => 'LandingPageItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemType', 'aliases' => [0 => 'LandingPageItem'], 'alias' => 'LandingPageItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\SalesRepPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\SalesRepPageBlockType'] ?? $container->load('getSalesRepPageBlockTypeService'));
        }, [0 => 'SalesRepPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\SalesRepPageBlockType', 'aliases' => [0 => 'SalesRepPageBlock'], 'alias' => 'SalesRepPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemConnectionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemConnectionType'] ?? $container->load('getCustomerPortalPageItemConnectionTypeService'));
        }, [0 => 'CustomerPortalPageItemConnection'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemConnectionType', 'aliases' => [0 => 'CustomerPortalPageItemConnection'], 'alias' => 'CustomerPortalPageItemConnection', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCollectionPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCollectionPageBlockViewsType'] ?? $container->load('getProductCollectionPageBlockViewsTypeService'));
        }, [0 => 'ProductCollectionPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCollectionPageBlockViewsType', 'aliases' => [0 => 'ProductCollectionPageBlockViews'], 'alias' => 'ProductCollectionPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemType'] ?? $container->load('getEditorItemTypeService'));
        }, [0 => 'EditorItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemType', 'aliases' => [0 => 'EditorItem'], 'alias' => 'EditorItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\VideoPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\VideoPageBlockType'] ?? $container->load('getVideoPageBlockTypeService'));
        }, [0 => 'VideoPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\VideoPageBlockType', 'aliases' => [0 => 'VideoPageBlock'], 'alias' => 'VideoPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemTypeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemTypeType'] ?? $container->load('getArticleItemTypeTypeService'));
        }, [0 => 'ArticleItemType'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemTypeType', 'aliases' => [0 => 'ArticleItemType'], 'alias' => 'ArticleItemType', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemType'] ?? $container->load('getUserGroupItemTypeService'));
        }, [0 => 'UserGroupItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemType', 'aliases' => [0 => 'UserGroupItem'], 'alias' => 'UserGroupItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TopClickedItemsPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TopClickedItemsPageBlockType'] ?? $container->load('getTopClickedItemsPageBlockTypeService'));
        }, [0 => 'TopClickedItemsPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TopClickedItemsPageBlockType', 'aliases' => [0 => 'TopClickedItemsPageBlock'], 'alias' => 'TopClickedItemsPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BestsellersPageBlockViewsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BestsellersPageBlockViewsType'] ?? $container->load('getBestsellersPageBlockViewsTypeService'));
        }, [0 => 'BestsellersPageBlockViews'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BestsellersPageBlockViewsType', 'aliases' => [0 => 'BestsellersPageBlockViews'], 'alias' => 'BestsellersPageBlockViews', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemUpdateInputType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemUpdateInputType'] ?? $container->load('getProductCategoryTagItemUpdateInputTypeService'));
        }, [0 => 'ProductCategoryTagItemUpdateInput'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemUpdateInputType', 'aliases' => [0 => 'ProductCategoryTagItemUpdateInput'], 'alias' => 'ProductCategoryTagItemUpdateInput', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormPageBlockType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormPageBlockType'] ?? $container->load('getFormPageBlockTypeService'));
        }, [0 => 'FormPageBlock'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormPageBlockType', 'aliases' => [0 => 'FormPageBlock'], 'alias' => 'FormPageBlock', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemType'] ?? $container->load('getFormItemTypeService'));
        }, [0 => 'FormItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemType', 'aliases' => [0 => 'FormItem'], 'alias' => 'FormItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemType'] ?? $container->load('getArticleItemTypeService'));
        }, [0 => 'ArticleItem'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemType', 'aliases' => [0 => 'ArticleItem'], 'alias' => 'ArticleItem', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupUsersTypesType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupUsersTypesType'] ?? $container->load('getItemGroupUsersTypesTypeService'));
        }, [0 => 'ItemGroupUsersTypes'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemGroupUsersTypesType', 'aliases' => [0 => 'ItemGroupUsersTypes'], 'alias' => 'ItemGroupUsersTypes', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemMutationType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemMutationType'] ?? $container->load('getItemMutationTypeService'));
        }, [0 => 'ItemMutation'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ItemMutationType', 'aliases' => [0 => 'ItemMutation'], 'alias' => 'ItemMutation', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionType'] ?? $container->load('getMatrixFieldDefinitionTypeService'));
        }, [0 => 'MatrixFieldDefinition'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionType', 'aliases' => [0 => 'MatrixFieldDefinition'], 'alias' => 'MatrixFieldDefinition', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionSettingsType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionSettingsType'] ?? $container->load('getMatrixFieldDefinitionSettingsTypeService'));
        }, [0 => 'MatrixFieldDefinitionSettings'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionSettingsType', 'aliases' => [0 => 'MatrixFieldDefinitionSettings'], 'alias' => 'MatrixFieldDefinitionSettings', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionColumnType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionColumnType'] ?? $container->load('getMatrixFieldDefinitionColumnTypeService'));
        }, [0 => 'MatrixFieldDefinitionColumn'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\MatrixFieldDefinitionColumnType', 'aliases' => [0 => 'MatrixFieldDefinitionColumn'], 'alias' => 'MatrixFieldDefinitionColumn', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageInfoType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageInfoType'] ?? $container->load('getPageInfoTypeService'));
        }, [0 => 'PageInfo'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\PageInfoType', 'aliases' => [0 => 'PageInfo'], 'alias' => 'PageInfo', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryEdgeType'] ?? $container->load('getTaxonomyEntryEdgeTypeService'));
        }, [0 => 'TaxonomyEntryEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TaxonomyEntryEdgeType', 'aliases' => [0 => 'TaxonomyEntryEdge'], 'alias' => 'TaxonomyEntryEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductEdgeType'] ?? $container->load('getBaseProductEdgeTypeService'));
        }, [0 => 'BaseProductEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\BaseProductEdgeType', 'aliases' => [0 => 'BaseProductEdge'], 'alias' => 'BaseProductEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationEdgeType'] ?? $container->load('getLocationEdgeTypeService'));
        }, [0 => 'LocationEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LocationEdgeType', 'aliases' => [0 => 'LocationEdge'], 'alias' => 'LocationEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemEdgeType'] ?? $container->load('getProductCategoryTagItemEdgeTypeService'));
        }, [0 => 'ProductCategoryTagItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ProductCategoryTagItemEdgeType', 'aliases' => [0 => 'ProductCategoryTagItemEdge'], 'alias' => 'ProductCategoryTagItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemEdgeType'] ?? $container->load('getImageItemEdgeTypeService'));
        }, [0 => 'ImageItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ImageItemEdgeType', 'aliases' => [0 => 'ImageItemEdge'], 'alias' => 'ImageItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemEdgeType'] ?? $container->load('getUserGroupItemEdgeTypeService'));
        }, [0 => 'UserGroupItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserGroupItemEdgeType', 'aliases' => [0 => 'UserGroupItemEdge'], 'alias' => 'UserGroupItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemEdgeType'] ?? $container->load('getFileItemEdgeTypeService'));
        }, [0 => 'FileItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FileItemEdgeType', 'aliases' => [0 => 'FileItemEdge'], 'alias' => 'FileItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemEdgeType'] ?? $container->load('getFormItemEdgeTypeService'));
        }, [0 => 'FormItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FormItemEdgeType', 'aliases' => [0 => 'FormItemEdge'], 'alias' => 'FormItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemEdgeType'] ?? $container->load('getUserItemEdgeTypeService'));
        }, [0 => 'UserItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\UserItemEdgeType', 'aliases' => [0 => 'UserItemEdge'], 'alias' => 'UserItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemEdgeType'] ?? $container->load('getFolderItemEdgeTypeService'));
        }, [0 => 'FolderItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\FolderItemEdgeType', 'aliases' => [0 => 'FolderItemEdge'], 'alias' => 'FolderItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemEdgeType'] ?? $container->load('getTagItemEdgeTypeService'));
        }, [0 => 'TagItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\TagItemEdgeType', 'aliases' => [0 => 'TagItemEdge'], 'alias' => 'TagItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemEdgeType'] ?? $container->load('getArticleItemEdgeTypeService'));
        }, [0 => 'ArticleItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\ArticleItemEdgeType', 'aliases' => [0 => 'ArticleItemEdge'], 'alias' => 'ArticleItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemEdgeType'] ?? $container->load('getEditorItemEdgeTypeService'));
        }, [0 => 'EditorItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\EditorItemEdgeType', 'aliases' => [0 => 'EditorItemEdge'], 'alias' => 'EditorItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemEdgeType'] ?? $container->load('getLandingPageItemEdgeTypeService'));
        }, [0 => 'LandingPageItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\LandingPageItemEdgeType', 'aliases' => [0 => 'LandingPageItemEdge'], 'alias' => 'LandingPageItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemEdgeType'] ?? $container->load('getCustomerPortalItemEdgeTypeService'));
        }, [0 => 'CustomerPortalItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalItemEdgeType', 'aliases' => [0 => 'CustomerPortalItemEdge'], 'alias' => 'CustomerPortalItemEdge', 'generated' => true]);
        $instance->addSolution('Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemEdgeType', function () use ($container) {
            return ($container->privates['Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemEdgeType'] ?? $container->load('getCustomerPortalPageItemEdgeTypeService'));
        }, [0 => 'CustomerPortalPageItemEdge'], ['id' => 'Overblog\\GraphQLBundle\\__DEFINITIONS__\\CustomerPortalPageItemEdgeType', 'aliases' => [0 => 'CustomerPortalPageItemEdge'], 'alias' => 'CustomerPortalPageItemEdge', 'generated' => true]);

        return $instance;
    }
}
