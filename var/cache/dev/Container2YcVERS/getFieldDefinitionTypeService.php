<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFieldDefinitionTypeService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\AdminUi\Form\Type\FieldDefinition\FieldDefinitionType' shared autowired service.
     *
     * @return \Ibexa\AdminUi\Form\Type\FieldDefinition\FieldDefinitionType
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Form/Type/FieldDefinition/FieldDefinitionType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/FieldTypeDefinitionFormMapperDispatcherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/FieldTypeDefinitionFormMapperDispatcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/FieldDefinitionFormMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/content-forms/src/contracts/FieldType/FieldValueFormMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/AuthorFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/BinaryFileFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/CheckboxFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/SelectionFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/CountryFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/DateFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/DateTimeFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/FloatFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/ImageFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/IntegerFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/ISBNFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/MediaFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/AbstractRelationFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/RelationFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/RelationListFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/TextLineFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/TextBlockFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/TimeFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/Mapper/UserAccountFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-query/src/lib/FieldType/Mapper/QueryFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/content-forms/src/lib/ConfigResolver/MaxUploadSize.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-matrix/src/lib/FieldType/Mapper/MatrixFormMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/FieldType/TaxonomyEntry/FormMapper/TaxonomyEntryFormMapper.php';

        $a = ($container->services['ibexa.api.service.field_type'] ?? $container->getIbexa_Api_Service_FieldTypeService());

        if (isset($container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'])) {
            return $container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'];
        }
        $b = ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService());

        if (isset($container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'])) {
            return $container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'];
        }
        $c = ($container->services['ibexa.api.service.location'] ?? $container->getIbexa_Api_Service_LocationService());

        if (isset($container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'])) {
            return $container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'];
        }
        $d = ($container->privates['Ibexa\\Taxonomy\\FieldType\\TaxonomyEntryAssignment\\FormMapper\\TaxonomyEntryAssignmentFormMapper'] ?? $container->load('getTaxonomyEntryAssignmentFormMapperService'));

        if (isset($container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'])) {
            return $container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'];
        }
        $e = ($container->services['Ibexa\\FieldTypePage\\FieldType\\LandingPage\\Mapper\\LandingPageFormMapper'] ?? $container->load('getLandingPageFormMapperService'));

        if (isset($container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'])) {
            return $container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'];
        }
        $f = ($container->privates['Ibexa\\Core\\Repository\\Strategy\\ContentThumbnail\\Field\\ContentFieldStrategy'] ?? $container->load('getContentFieldStrategyService'));

        if (isset($container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'])) {
            return $container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'];
        }
        $g = new \Ibexa\AdminUi\FieldType\FieldTypeDefinitionFormMapperDispatcher();

        $h = ($container->privates['Ibexa\\ContentForms\\ConfigResolver\\MaxUploadSize'] ?? ($container->privates['Ibexa\\ContentForms\\ConfigResolver\\MaxUploadSize'] = new \Ibexa\ContentForms\ConfigResolver\MaxUploadSize()));

        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\AuthorFormMapper(), 'ezauthor');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\BinaryFileFormMapper($a, $h), 'ezbinaryfile');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\CheckboxFormMapper(), 'ezboolean');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\SelectionFormMapper(), 'ezselection');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\CountryFormMapper(), 'ezcountry');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\DateFormMapper(), 'ezdate');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\DateTimeFormMapper(), 'ezdatetime');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\FloatFormMapper(), 'ezfloat');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\ImageFormMapper($container->parameters['ibexa.field_type.ezimage.mime_types'], $h, ($container->privates['mime_types'] ?? $container->getMimeTypesService())), 'ezimage');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\IntegerFormMapper(), 'ezinteger');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\ISBNFormMapper(), 'ezisbn');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\MediaFormMapper($a, $h), 'ezmedia');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\RelationFormMapper($b, $c), 'ezobjectrelation');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\RelationListFormMapper($b, $c), 'ezobjectrelationlist');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\TextLineFormMapper(), 'ezstring');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\TextBlockFormMapper(), 'eztext');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\TimeFormMapper(), 'eztime');
        $g->addMapper(new \Ibexa\AdminUi\FieldType\Mapper\UserAccountFormMapper(), 'ezuser');
        $g->addMapper(($container->privates['Ibexa\\FieldTypeMatrix\\FieldType\\Mapper\\MatrixFormMapper'] ?? ($container->privates['Ibexa\\FieldTypeMatrix\\FieldType\\Mapper\\MatrixFormMapper'] = new \Ibexa\FieldTypeMatrix\FieldType\Mapper\MatrixFormMapper())), 'ezmatrix');
        $g->addMapper(new \Ibexa\FieldTypeQuery\FieldType\Mapper\QueryFormMapper($b, ['Ancestors' => 'Ancestors', 'Children' => 'Children', 'Siblings' => 'Siblings', 'Related to' => 'RelatedTo', 'Related to content' => 'RelatedToContent', 'Geo location' => 'GeoLocation', 'Subtree' => 'Subtree', 'Ibexa admin ui: location path' => 'IbexaAdminUi:LocationPath', 'Ibexa admin ui: content subtree' => 'IbexaAdminUi:ContentSubtree', 'Ibexa admin ui: content location subtree' => 'IbexaAdminUi:ContentLocationSubtree', 'Ibexa admin ui: media subtree' => 'IbexaAdminUi:MediaSubtree', 'Ibexa admin ui: media location subtree' => 'IbexaAdminUi:MediaLocationSubtree', 'Ibexa admin ui: trash search query' => 'IbexaAdminUi:TrashSearchQuery', 'Platform search: search query' => 'PlatformSearch:SearchQuery', 'Ibexa workflow:: users' => 'IbexaWorkflow::Users', 'Ibexa: personalization: content data source query type' => 'Ibexa:Personalization:ContentDataSourceQueryType', 'Catalog' => 'Catalog']), 'ezcontentquery');
        $g->addMapper(($container->privates['Ibexa\\Seo\\FieldType\\Mapper\\SeoFormMapper'] ?? $container->load('getSeoFormMapperService')), 'ibexa_seo');
        $g->addMapper(($container->privates['Ibexa\\Measurement\\FieldType\\Mapper\\MeasurementFormMapper'] ?? $container->load('getMeasurementFormMapperService')), 'ibexa_measurement');
        $g->addMapper(($container->privates['Ibexa\\Taxonomy\\FieldType\\TaxonomyEntry\\FormMapper\\TaxonomyEntryFormMapper'] ?? ($container->privates['Ibexa\\Taxonomy\\FieldType\\TaxonomyEntry\\FormMapper\\TaxonomyEntryFormMapper'] = new \Ibexa\Taxonomy\FieldType\TaxonomyEntry\FormMapper\TaxonomyEntryFormMapper())), 'ibexa_taxonomy_entry');
        $g->addMapper($d, 'ibexa_taxonomy_entry_assignment');
        $g->addMapper($e, 'ezlandingpage');
        $g->addMapper(($container->privates['Ibexa\\FieldTypeAddress\\FieldType\\Mapper\\AddressFormMapper'] ?? $container->load('getAddressFormMapperService')), 'ibexa_address');

        $container->privates['Ibexa\\AdminUi\\Form\\Type\\FieldDefinition\\FieldDefinitionType'] = $instance = new \Ibexa\AdminUi\Form\Type\FieldDefinition\FieldDefinitionType(($container->privates['Ibexa\\AdminUi\\Config\\AdminUiForms\\ContentTypeFieldTypesResolver'] ?? $container->getContentTypeFieldTypesResolverService()), $g, $a, $f);

        $instance->setGroupsList(($container->privates['Ibexa\\CorporateAccount\\FieldType\\FieldGroupsListDecorator'] ?? $container->getFieldGroupsListDecoratorService()));

        return $instance;
    }
}
