<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCatalogControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\ProductCatalog\Controller\REST\CatalogController' shared autowired service.
     *
     * @return \Ibexa\Bundle\ProductCatalog\Controller\REST\CatalogController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/rest/src/lib/Server/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/Controller/REST/CatalogController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/REST/Input/Parser/Query/Criterion/ProductCriteriaRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/REST/Input/Parser/Query/Criterion/ProductSortClausesRegistry.php';

        $container->services['Ibexa\\Bundle\\ProductCatalog\\Controller\\REST\\CatalogController'] = $instance = new \Ibexa\Bundle\ProductCatalog\Controller\REST\CatalogController(($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\Event\\CatalogService'] ?? $container->getCatalogServiceService()), new \Ibexa\Bundle\ProductCatalog\REST\Input\Parser\Query\Criterion\ProductCriteriaRegistry(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\CreatedAt'] ?? $container->getCreatedAtService());
            yield 1 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\CreatedAtRange'] ?? $container->getCreatedAtRangeService());
            yield 2 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\ProductCategory'] ?? $container->getProductCategoryService());
            yield 3 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\ColorAttribute'] ?? $container->getColorAttributeService());
            yield 4 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\FloatAttribute'] ?? $container->getFloatAttributeService());
            yield 5 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\FloatAttributeRange'] ?? $container->getFloatAttributeRangeService());
            yield 6 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\IntegerAttribute'] ?? $container->getIntegerAttributeService());
            yield 7 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\IntegerAttributeRange'] ?? $container->getIntegerAttributeRangeService());
            yield 8 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\SelectionAttribute'] ?? $container->getSelectionAttributeService());
            yield 9 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\ProductCode'] ?? $container->getProductCode2Service());
            yield 10 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\ProductName'] ?? $container->getProductNameService());
            yield 11 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\ProductAvailability'] ?? $container->getProductAvailabilityService());
            yield 12 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\REST\\Input\\Parser\\Query\\Criterion\\IsVirtual'] ?? $container->getIsVirtualService());
        }, 13)), new \Ibexa\Bundle\ProductCatalog\REST\Input\Parser\Query\Criterion\ProductSortClausesRegistry(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['ibexa.rest.input.parser.internal.sortclause.product_name'] ?? $container->getIbexa_Rest_Input_Parser_Internal_Sortclause_ProductNameService());
            yield 1 => ($container->privates['ibexa.rest.input.parser.internal.sortclause.product_code'] ?? $container->getIbexa_Rest_Input_Parser_Internal_Sortclause_ProductCodeService());
            yield 2 => ($container->privates['ibexa.rest.input.parser.internal.sortclause.product_availability'] ?? $container->getIbexa_Rest_Input_Parser_Internal_Sortclause_ProductAvailabilityService());
            yield 3 => ($container->privates['ibexa.rest.input.parser.internal.sortclause.created_at'] ?? $container->getIbexa_Rest_Input_Parser_Internal_Sortclause_CreatedAtService());
        }, 4)));

        $instance->setContainer($container);
        $instance->setInputDispatcher(($container->privates['Ibexa\\Rest\\Input\\Dispatcher'] ?? $container->getDispatcherService()));
        $instance->setRouter(($container->services['router'] ?? $container->getRouterService()));
        $instance->setRequestParser(($container->privates['Ibexa\\Bundle\\Rest\\RequestParser\\Router'] ?? $container->getRouter2Service()));
        $instance->setRepository(($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService()));

        return $instance;
    }
}
