<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTranslationsTabService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\AdminUi\Tab\ContentType\TranslationsTab' shared autowired service.
     *
     * @return \Ibexa\AdminUi\Tab\ContentType\TranslationsTab
     */
    public static function do($container, $lazyLoad = true)
    {
        if ($lazyLoad) {
            return $container->services['Ibexa\\AdminUi\\Tab\\ContentType\\TranslationsTab'] = $container->createProxy('TranslationsTab_4f0a941', function () use ($container) {
                return \TranslationsTab_4f0a941::staticProxyConstructor(function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = self::do($container, false);

                    $proxy->setProxyInitializer(null);

                    return true;
                });
            });
        }

        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Tab/TabInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Tab/AbstractTab.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Tab/AbstractEventDispatchingTab.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Tab/OrderedTabInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Tab/ContentType/TranslationsTab.php';

        return new \Ibexa\AdminUi\Tab\ContentType\TranslationsTab(($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService()), ($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService()), ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()), ($container->privates['Ibexa\\AdminUi\\UI\\Dataset\\DatasetFactory'] ?? $container->load('getDatasetFactoryService')), ($container->privates['Ibexa\\AdminUi\\Form\\Factory\\ContentTypeFormFactory'] ?? $container->load('getContentTypeFormFactoryService')));
    }
}
