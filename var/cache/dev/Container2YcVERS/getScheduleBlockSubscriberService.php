<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getScheduleBlockSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\PageBuilder\Event\Subscriber\ScheduleBlockSubscriber' shared autowired service.
     *
     * @return \Ibexa\PageBuilder\Event\Subscriber\ScheduleBlockSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/page-builder/src/lib/Event/Subscriber/ScheduleBlockSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/page-builder/src/lib/Block/Mapper/BlockConfigurationMapper.php';

        $a = ($container->services['Ibexa\\FieldTypePage\\Serializer\\NonSharedSerializer'] ?? $container->getNonSharedSerializerService());

        if (isset($container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'])) {
            return $container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'];
        }
        $b = ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService());

        if (isset($container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'])) {
            return $container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'];
        }
        $c = ($container->services['Ibexa\\FieldTypePage\\FieldType\\Page\\Block\\Definition\\CachedBlockDefinitionFactory'] ?? $container->getCachedBlockDefinitionFactoryService());

        if (isset($container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'])) {
            return $container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'];
        }
        $d = ($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService());

        if (isset($container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'])) {
            return $container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'];
        }

        return $container->services['Ibexa\\PageBuilder\\Event\\Subscriber\\ScheduleBlockSubscriber'] = new \Ibexa\PageBuilder\Event\Subscriber\ScheduleBlockSubscriber(new \Ibexa\PageBuilder\Block\Mapper\BlockConfigurationMapper(), $a, ($container->services['Ibexa\\FieldTypePage\\ScheduleBlock\\Scheduler'] ?? $container->getSchedulerService()), ($container->services['Ibexa\\FieldTypePage\\ScheduleBlock\\ScheduleService'] ?? ($container->services['Ibexa\\FieldTypePage\\ScheduleBlock\\ScheduleService'] = new \Ibexa\FieldTypePage\ScheduleBlock\ScheduleService())), $b, $c, $d, ($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService()), ($container->services['request_stack'] ?? ($container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($container->privates['Ibexa\\Core\\Helper\\TranslationHelper'] ?? $container->getTranslationHelperService()), ($container->privates['Ibexa\\AdminUi\\Resolver\\IconPathResolver'] ?? $container->getIconPathResolverService()), ($container->services['Ibexa\\FieldTypePage\\ScheduleBlock\\ScheduleSnapshotService'] ?? $container->getScheduleSnapshotServiceService()));
    }
}
