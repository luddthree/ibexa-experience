<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFuturePublicationEventSourceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Scheduler\Calendar\FuturePublicationEventSource' shared autowired service.
     *
     * @return \Ibexa\Scheduler\Calendar\FuturePublicationEventSource
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/calendar/src/contracts/EventSource/EventSourceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Calendar/AbstractDateBasedActionEventSource.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Calendar/FuturePublicationEventSource.php';

        $a = ($container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'] ?? $container->load('getDateBasedPublisherServiceService'));

        if (isset($container->privates['Ibexa\\Scheduler\\Calendar\\FuturePublicationEventSource'])) {
            return $container->privates['Ibexa\\Scheduler\\Calendar\\FuturePublicationEventSource'];
        }
        $b = ($container->privates['Ibexa\\Scheduler\\Calendar\\FuturePublicationEventType'] ?? $container->load('getFuturePublicationEventTypeService'));

        if (isset($container->privates['Ibexa\\Scheduler\\Calendar\\FuturePublicationEventSource'])) {
            return $container->privates['Ibexa\\Scheduler\\Calendar\\FuturePublicationEventSource'];
        }

        return $container->privates['Ibexa\\Scheduler\\Calendar\\FuturePublicationEventSource'] = new \Ibexa\Scheduler\Calendar\FuturePublicationEventSource($a, $b, ($container->services['ibexa.api.service.language'] ?? $container->getIbexa_Api_Service_LanguageService()));
    }
}
