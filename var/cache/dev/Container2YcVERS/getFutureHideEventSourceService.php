<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFutureHideEventSourceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Scheduler\Calendar\FutureHideEventSource' shared autowired service.
     *
     * @return \Ibexa\Scheduler\Calendar\FutureHideEventSource
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/calendar/src/contracts/EventSource/EventSourceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Calendar/AbstractDateBasedActionEventSource.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Calendar/FutureHideEventSource.php';

        $a = ($container->privates['Ibexa\\Scheduler\\Repository\\DateBasedHideService'] ?? $container->getDateBasedHideServiceService());

        if (isset($container->privates['Ibexa\\Scheduler\\Calendar\\FutureHideEventSource'])) {
            return $container->privates['Ibexa\\Scheduler\\Calendar\\FutureHideEventSource'];
        }

        return $container->privates['Ibexa\\Scheduler\\Calendar\\FutureHideEventSource'] = new \Ibexa\Scheduler\Calendar\FutureHideEventSource($a, ($container->privates['Ibexa\\Scheduler\\Calendar\\FutureHideEventType'] ?? $container->load('getFutureHideEventTypeService')));
    }
}
