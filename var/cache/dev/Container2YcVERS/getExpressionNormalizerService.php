<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getExpressionNormalizerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\Migration\Serializer\Normalizer\ExpressionNormalizer' shared autowired service.
     *
     * @return \Ibexa\Bundle\Migration\Serializer\Normalizer\ExpressionNormalizer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Log/LoggerAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/bundle/Serializer/Normalizer/ExpressionNormalizer.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/bundle/Serializer/Denormalizer/Template/ExpressionLanguageContext.php';

        $instance = new \Ibexa\Bundle\Migration\Serializer\Normalizer\ExpressionNormalizer(new \Symfony\Component\ExpressionLanguage\ExpressionLanguage(NULL, [0 => ($container->privates['Ibexa\\Bundle\\Migration\\Serializer\\Denormalizer\\Template\\ExpressionLanguageProvider'] ?? $container->load('getExpressionLanguageProviderService'))]), new \Ibexa\Bundle\Migration\Serializer\Denormalizer\Template\ExpressionLanguageContext(new RewindableGenerator(function () use ($container) {
            yield '_functions' => ($container->privates['Ibexa\\Bundle\\Migration\\Serializer\\Denormalizer\\Template\\ExpressionLanguageProvider'] ?? $container->load('getExpressionLanguageProviderService'));
        }, 1)));

        $instance->setLogger(($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        return $instance;
    }
}
