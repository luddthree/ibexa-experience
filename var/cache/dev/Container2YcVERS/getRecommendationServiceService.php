<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRecommendationServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Personalization\Service\Recommendation\RecommendationService' shared autowired service.
     *
     * @return \Ibexa\Personalization\Service\Recommendation\RecommendationService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Service/Recommendation/RecommendationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Service/Recommendation/RecommendationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Content/Image/ImagePathResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Content/Image/ImagePathResolver.php';

        $a = ($container->privates['Ibexa\\Personalization\\Mapper\\OutputTypeAttributesMapper'] ?? $container->load('getOutputTypeAttributesMapperService'));

        return $container->privates['Ibexa\\Personalization\\Service\\Recommendation\\RecommendationService'] = new \Ibexa\Personalization\Service\Recommendation\RecommendationService(new \Ibexa\Personalization\Content\Image\ImagePathResolver(($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService()), $a, (\dirname(__DIR__, 4).'/public')), $a, ($container->privates['Ibexa\\Personalization\\Client\\Consumer\\Recommendation\\RecommendationDataFetcher'] ?? $container->getRecommendationDataFetcherService()), ($container->privates['Ibexa\\Personalization\\Config\\Repository\\RepositoryConfigResolver'] ?? $container->load('getRepositoryConfigResolverService')), ($container->privates['Ibexa\\Personalization\\Service\\Setting\\DefaultSiteAccessSettingService'] ?? $container->load('getDefaultSiteAccessSettingServiceService')));
    }
}
