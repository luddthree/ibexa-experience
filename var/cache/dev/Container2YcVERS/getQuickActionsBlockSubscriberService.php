<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getQuickActionsBlockSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\Dashboard\EventSubscriber\PageBuilder\QuickActionsBlockSubscriber' shared autowired service.
     *
     * @return \Ibexa\Bundle\Dashboard\EventSubscriber\PageBuilder\QuickActionsBlockSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/dashboard/src/bundle/EventSubscriber/PageBuilder/QuickActionsBlockSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/dashboard/src/lib/Block/QuickActions/ConfigurationProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/dashboard/src/lib/Block/QuickActions/ConfigurationProvider.php';

        $container->privates['Ibexa\\Bundle\\Dashboard\\EventSubscriber\\PageBuilder\\QuickActionsBlockSubscriber'] = $instance = new \Ibexa\Bundle\Dashboard\EventSubscriber\PageBuilder\QuickActionsBlockSubscriber(new \Ibexa\Dashboard\Block\QuickActions\ConfigurationProvider(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\Dashboard\\Block\\QuickActions\\Actions\\CreateCatalogAction'] ?? $container->load('getCreateCatalogActionService'));
            yield 1 => ($container->privates['Ibexa\\Dashboard\\Block\\QuickActions\\Actions\\CreateCompanyAction'] ?? $container->load('getCreateCompanyActionService'));
            yield 2 => ($container->privates['Ibexa\\Dashboard\\Block\\QuickActions\\Actions\\CreateContentAction'] ?? $container->load('getCreateContentActionService'));
            yield 3 => ($container->privates['Ibexa\\Dashboard\\Block\\QuickActions\\Actions\\CreateFormAction'] ?? $container->load('getCreateFormActionService'));
            yield 4 => ($container->privates['Ibexa\\Dashboard\\Block\\QuickActions\\Actions\\CreateProductAction'] ?? $container->load('getCreateProductActionService'));
        }, 5)));

        $instance->setLogger(($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        return $instance;
    }
}
