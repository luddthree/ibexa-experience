<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getIbexaUpgradeCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\Installer\Command\IbexaUpgradeCommand' shared autowired service.
     *
     * @return \Ibexa\Bundle\Installer\Command\IbexaUpgradeCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/installer/src/bundle/Command/IbexaUpgradeCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/installer/src/lib/Gateway/SiteDataGateway.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/installer/src/lib/Gateway/SiteDataDoctrineGateway.php';

        $container->privates['Ibexa\\Bundle\\Installer\\Command\\IbexaUpgradeCommand'] = $instance = new \Ibexa\Bundle\Installer\Command\IbexaUpgradeCommand(new \Ibexa\Installer\Gateway\SiteDataDoctrineGateway(($container->services['ibexa.persistence.connection'] ?? $container->getIbexa_Persistence_ConnectionService())), ($container->privates['Ibexa\\Installer\\Provisioner\\CommerceProvisioner'] ?? $container->load('getCommerceProvisionerService')), ($container->privates['Ibexa\\Migration\\MigrationService'] ?? $container->load('getMigrationServiceService')), ($container->services['kernel'] ?? $container->get('kernel', 1)), NULL, ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService()), ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService()), ($container->services['ibexa.api.service.role'] ?? $container->getIbexa_Api_Service_RoleService()));

        $instance->addOption('siteaccess', NULL, 4, 'SiteAccess to use for operations. If not provided, default siteaccess will be used');
        $instance->setName('ibexa:upgrade');

        return $instance;
    }
}
