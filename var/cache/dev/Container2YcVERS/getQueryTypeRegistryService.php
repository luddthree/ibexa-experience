<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getQueryTypeRegistryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\ProductCatalog\QueryType\QueryTypeRegistry' shared autowired service.
     *
     * @return \Ibexa\ProductCatalog\QueryType\QueryTypeRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/contracts/QueryTypeRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/QueryType/QueryTypeRegistry.php';

        return $container->privates['Ibexa\\ProductCatalog\\QueryType\\QueryTypeRegistry'] = new \Ibexa\ProductCatalog\QueryType\QueryTypeRegistry(new RewindableGenerator(function () use ($container) {
            yield 'ibexa:blocks:categories_distribution' => ($container->services['Ibexa\\ProductCatalog\\QueryType\\Product\\Block\\ProductsByCategoriesQueryType'] ?? ($container->services['Ibexa\\ProductCatalog\\QueryType\\Product\\Block\\ProductsByCategoriesQueryType'] = new \Ibexa\ProductCatalog\QueryType\Product\Block\ProductsByCategoriesQueryType('product_categories')));
            yield 'IbexaProductSearch' => ($container->privates['Ibexa\\ProductCatalog\\QueryType\\Product\\SearchQueryType'] ?? ($container->privates['Ibexa\\ProductCatalog\\QueryType\\Product\\SearchQueryType'] = new \Ibexa\ProductCatalog\QueryType\Product\SearchQueryType()));
            yield 'IbexaProductsWithLowestStock' => ($container->privates['Ibexa\\ProductCatalog\\QueryType\\Product\\ProductsWithLowestStockQueryType'] ?? ($container->privates['Ibexa\\ProductCatalog\\QueryType\\Product\\ProductsWithLowestStockQueryType'] = new \Ibexa\ProductCatalog\QueryType\Product\ProductsWithLowestStockQueryType()));
        }, 3));
    }
}
