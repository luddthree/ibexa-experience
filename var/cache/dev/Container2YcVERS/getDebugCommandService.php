<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDebugCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Overblog\GraphQLBundle\Command\DebugCommand' shared service.
     *
     * @return \Overblog\GraphQLBundle\Command\DebugCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/overblog/graphql-bundle/src/Command/DebugCommand.php';

        $container->services['Overblog\\GraphQLBundle\\Command\\DebugCommand'] = $instance = new \Overblog\GraphQLBundle\Command\DebugCommand(($container->services['overblog_graphql.type_resolver'] ?? $container->load('getOverblogGraphql_TypeResolverService')), ($container->services['overblog_graphql.mutation_resolver'] ?? $container->load('getOverblogGraphql_MutationResolverService')), ($container->services['overblog_graphql.query_resolver'] ?? $container->load('getOverblogGraphql_QueryResolverService')));

        $instance->addOption('siteaccess', NULL, 4, 'SiteAccess to use for operations. If not provided, default siteaccess will be used');
        $instance->setName('graphql:debug');

        return $instance;
    }
}
