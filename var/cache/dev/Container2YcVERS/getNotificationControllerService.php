<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNotificationControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\AdminUi\Controller\NotificationController' shared autowired service.
     *
     * @return \Ibexa\Bundle\AdminUi\Controller\NotificationController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/bundle/Controller/NotificationController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/Notification/Renderer/Registry.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/Notification/Renderer/NotificationRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Notification/Renderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Strategy/NotificationTwigStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/workflow/src/lib/Notification/Renderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/workflow/src/lib/Notification/NotifyReviewerActionRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/workflow/src/lib/Notification/AskUnlockRenderer.php';

        $a = new \Ibexa\Core\Notification\Renderer\Registry();

        $b = ($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService());
        $c = ($container->services['router'] ?? $container->getRouterService());
        $d = ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService());
        $e = ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService());

        $f = new \Ibexa\AdminUi\Strategy\NotificationTwigStrategy($e, $d);

        $g = new \Ibexa\Scheduler\Notification\Renderer($b, $c, $d, $f);

        $a->addRenderer('DateBasedPublisher:Published', $g);
        $a->addRenderer('DateBasedPublisher:Hidden', $g);
        $a->addRenderer('DateBasedPublisher:Unscheduled', $g);
        $a->addRenderer('Workflow:StageChange', new \Ibexa\Workflow\Notification\Renderer($b, $c, $d, $f, ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService()), $e));
        $a->addRenderer('Workflow:NotifyReviewer', new \Ibexa\Workflow\Notification\NotifyReviewerActionRenderer($b, $c, $d, ($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService()), $f));
        $a->addRenderer('Workflow:AskUnlock', new \Ibexa\Workflow\Notification\AskUnlockRenderer($b, $f, $d, ($container->privates['Ibexa\\Workflow\\Service\\WorkflowService'] ?? $container->getWorkflowServiceService())));

        $container->services['Ibexa\\Bundle\\AdminUi\\Controller\\NotificationController'] = $instance = new \Ibexa\Bundle\AdminUi\Controller\NotificationController(($container->privates['Ibexa\\Core\\Event\\NotificationService'] ?? $container->getNotificationServiceService()), $a, ($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService()), ($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService()));

        $instance->setContainer($container);
        $instance->performAccessCheck();

        return $instance;
    }
}
