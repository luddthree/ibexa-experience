<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBlockContextSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\FieldTypePage\Event\Subscriber\BlockContextSubscriber' shared autowired service.
     *
     * @return \Ibexa\FieldTypePage\Event\Subscriber\BlockContextSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/Event/Subscriber/BlockContextSubscriber.php';

        $a = ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService());

        if (isset($container->services['Ibexa\\FieldTypePage\\Event\\Subscriber\\BlockContextSubscriber'])) {
            return $container->services['Ibexa\\FieldTypePage\\Event\\Subscriber\\BlockContextSubscriber'];
        }
        $b = ($container->services['ibexa.api.service.location'] ?? $container->getIbexa_Api_Service_LocationService());

        if (isset($container->services['Ibexa\\FieldTypePage\\Event\\Subscriber\\BlockContextSubscriber'])) {
            return $container->services['Ibexa\\FieldTypePage\\Event\\Subscriber\\BlockContextSubscriber'];
        }
        $c = ($container->services['Ibexa\\FieldTypePage\\FieldType\\LandingPage\\Type'] ?? $container->getType3Service());

        if (isset($container->services['Ibexa\\FieldTypePage\\Event\\Subscriber\\BlockContextSubscriber'])) {
            return $container->services['Ibexa\\FieldTypePage\\Event\\Subscriber\\BlockContextSubscriber'];
        }

        return $container->services['Ibexa\\FieldTypePage\\Event\\Subscriber\\BlockContextSubscriber'] = new \Ibexa\FieldTypePage\Event\Subscriber\BlockContextSubscriber($a, $b, ($container->privates['debug.controller_resolver'] ?? $container->getDebug_ControllerResolverService()), $c);
    }
}
