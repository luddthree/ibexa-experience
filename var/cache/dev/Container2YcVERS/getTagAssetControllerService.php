<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTagAssetControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\ProductCatalog\Controller\Product\TagAssetController' shared autowired service.
     *
     * @return \Ibexa\Bundle\ProductCatalog\Controller\Product\TagAssetController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/Controller/Product/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/Controller/Product/TagAssetController.php';

        $container->services['Ibexa\\Bundle\\ProductCatalog\\Controller\\Product\\TagAssetController'] = $instance = new \Ibexa\Bundle\ProductCatalog\Controller\Product\TagAssetController(($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService()), ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AssetService'] ?? $container->load('getAssetService2Service')), ($container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'] ?? $container->load('getSubmitHandlerService')), ($container->privates['Ibexa\\AdminUi\\Notification\\TranslatableNotificationHandler'] ?? $container->getTranslatableNotificationHandlerService()));

        $instance->setContainer(($container->privates['.service_locator.mx0UMmY'] ?? $container->load('get_ServiceLocator_Mx0UMmYService'))->withContext('Ibexa\\Bundle\\ProductCatalog\\Controller\\Product\\TagAssetController', $container));

        return $instance;
    }
}
