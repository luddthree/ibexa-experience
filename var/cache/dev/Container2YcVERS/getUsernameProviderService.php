<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUsernameProviderService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Core\MVC\Symfony\Security\User\UsernameProvider' shared service.
     *
     * @return \Ibexa\Core\MVC\Symfony\Security\User\UsernameProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/User/UserProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/MVC/Symfony/Security/User/APIUserProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/MVC/Symfony/Security/User/BaseProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/MVC/Symfony/Security/User/UsernameProvider.php';

        $a = ($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService());

        if (isset($container->privates['Ibexa\\Core\\MVC\\Symfony\\Security\\User\\UsernameProvider'])) {
            return $container->privates['Ibexa\\Core\\MVC\\Symfony\\Security\\User\\UsernameProvider'];
        }
        $b = ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService());

        if (isset($container->privates['Ibexa\\Core\\MVC\\Symfony\\Security\\User\\UsernameProvider'])) {
            return $container->privates['Ibexa\\Core\\MVC\\Symfony\\Security\\User\\UsernameProvider'];
        }

        return $container->privates['Ibexa\\Core\\MVC\\Symfony\\Security\\User\\UsernameProvider'] = new \Ibexa\Core\MVC\Symfony\Security\User\UsernameProvider($a, $b);
    }
}
