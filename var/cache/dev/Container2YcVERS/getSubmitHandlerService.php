<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSubmitHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\AdminUi\Form\SubmitHandler' shared autowired service.
     *
     * @return \Ibexa\AdminUi\Form\SubmitHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/lib/Form/SubmitHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Form/SubmitHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/UI/Action/EventDispatcherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/UI/Action/EventDispatcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/UI/Action/FormUiActionMappingDispatcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/UI/Action/FormUiActionMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/UI/Action/FormUiActionMapper.php';

        $a = ($container->services['router'] ?? $container->getRouterService());

        if (isset($container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'])) {
            return $container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'];
        }
        $b = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'])) {
            return $container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'];
        }

        return $container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'] = new \Ibexa\AdminUi\Form\SubmitHandler(($container->privates['Ibexa\\AdminUi\\Notification\\FlashBagNotificationHandler'] ?? $container->getFlashBagNotificationHandlerService()), $a, new \Ibexa\AdminUi\UI\Action\EventDispatcher($b), new \Ibexa\AdminUi\UI\Action\FormUiActionMappingDispatcher(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\AdminUi\\UI\\Action\\FormUiActionMapper'] ?? ($container->privates['Ibexa\\AdminUi\\UI\\Action\\FormUiActionMapper'] = new \Ibexa\AdminUi\UI\Action\FormUiActionMapper()));
        }, 1), ($container->privates['Ibexa\\AdminUi\\UI\\Action\\FormUiActionMapper'] ?? ($container->privates['Ibexa\\AdminUi\\UI\\Action\\FormUiActionMapper'] = new \Ibexa\AdminUi\UI\Action\FormUiActionMapper()))), ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));
    }
}
