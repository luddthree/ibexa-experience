<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLanguageLimitationTypeService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Core\Limitation\LanguageLimitationType' shared service.
     *
     * @return \Ibexa\Core\Limitation\LanguageLimitationType
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/contracts/Limitation/Type.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/contracts/Limitation/TargetAwareType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/Limitation/LanguageLimitationType.php';

        $a = ($container->privates['Ibexa\\Contracts\\Core\\Persistence\\Content\\Language\\Handler'] ?? $container->getHandler8Service());

        if (isset($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitationType'])) {
            return $container->privates['Ibexa\\Core\\Limitation\\LanguageLimitationType'];
        }
        $b = ($container->privates['Ibexa\\Contracts\\Core\\Persistence\\Content\\Handler'] ?? $container->getHandler7Service());

        if (isset($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitationType'])) {
            return $container->privates['Ibexa\\Core\\Limitation\\LanguageLimitationType'];
        }

        return $container->privates['Ibexa\\Core\\Limitation\\LanguageLimitationType'] = new \Ibexa\Core\Limitation\LanguageLimitationType($a, $b, new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\ContentDeleteEvaluator'] ?? ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\ContentDeleteEvaluator'] = new \Ibexa\Core\Limitation\LanguageLimitation\ContentDeleteEvaluator()));
            yield 1 => ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\ContentTranslationEvaluator'] ?? ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\ContentTranslationEvaluator'] = new \Ibexa\Core\Limitation\LanguageLimitation\ContentTranslationEvaluator()));
            yield 2 => ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\NewDraftEvaluator'] ?? ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\NewDraftEvaluator'] = new \Ibexa\Core\Limitation\LanguageLimitation\NewDraftEvaluator()));
            yield 3 => ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\VersionPublishingEvaluator'] ?? ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\VersionPublishingEvaluator'] = new \Ibexa\Core\Limitation\LanguageLimitation\VersionPublishingEvaluator()));
            yield 4 => ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\VersionTranslationUpdateEvaluator'] ?? ($container->privates['Ibexa\\Core\\Limitation\\LanguageLimitation\\VersionTranslationUpdateEvaluator'] = new \Ibexa\Core\Limitation\LanguageLimitation\VersionTranslationUpdateEvaluator()));
        }, 5));
    }
}
