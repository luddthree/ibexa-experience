<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDateBasedPublisherServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Scheduler\Repository\DateBasedPublisherService' shared autowired service.
     *
     * @return \Ibexa\Scheduler\Repository\DateBasedPublisherService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/contracts/Repository/DateBasedPublishServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Repository/DateBasedPublisherService.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Schedule/DateBasedVersionStrategyInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Repository/DateBasedVersionStrategy.php';

        $a = ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService());

        if (isset($container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'])) {
            return $container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'];
        }
        $b = ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService());

        if (isset($container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'])) {
            return $container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'];
        }
        $c = ($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService());

        if (isset($container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'])) {
            return $container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'];
        }
        $d = ($container->privates['Ibexa\\Core\\Repository\\ProxyFactory\\ProxyDomainMapper'] ?? $container->getProxyDomainMapperService());

        if (isset($container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'])) {
            return $container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'];
        }
        $e = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'])) {
            return $container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'];
        }

        return $container->privates['Ibexa\\Scheduler\\Repository\\DateBasedPublisherService'] = new \Ibexa\Scheduler\Repository\DateBasedPublisherService(new \Ibexa\Scheduler\Repository\DateBasedVersionStrategy(($container->privates['Ibexa\\Scheduler\\Persistence\\Handler'] ?? $container->getHandler39Service()), $a, $b, $c, $d), $b, $a, $e);
    }
}
