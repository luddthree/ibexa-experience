<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFullscreenSidebarBuilderService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\SiteContext\Menu\FullscreenSidebarBuilder' shared autowired service.
     *
     * @return \Ibexa\SiteContext\Menu\FullscreenSidebarBuilder
     */
    public static function do($container, $lazyLoad = true)
    {
        if ($lazyLoad) {
            return $container->services['Ibexa\\SiteContext\\Menu\\FullscreenSidebarBuilder'] = $container->createProxy('FullscreenSidebarBuilder_43359e6', function () use ($container) {
                return \FullscreenSidebarBuilder_43359e6::staticProxyConstructor(function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = self::do($container, false);

                    $proxy->setProxyInitializer(null);

                    return true;
                });
            });
        }

        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Menu/AbstractBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/site-context/src/lib/Menu/FullscreenSidebarBuilder.php';

        return new \Ibexa\SiteContext\Menu\FullscreenSidebarBuilder(($container->services['Ibexa\\AdminUi\\Menu\\MenuItemFactory'] ?? $container->load('getMenuItemFactoryService')), ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()), ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService()), ($container->privates['Ibexa\\AdminUi\\Permission\\PermissionChecker'] ?? $container->load('getPermissionCheckerService')), ($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService()));
    }
}
