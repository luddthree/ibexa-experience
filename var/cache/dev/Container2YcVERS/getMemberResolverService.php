<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMemberResolverService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\CorporateAccount\Permission\MemberResolver' shared autowired service.
     *
     * @return \Ibexa\CorporateAccount\Permission\MemberResolver
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/corporate-account/src/contracts/Permission/MemberResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/corporate-account/src/lib/Permission/MemberResolver.php';

        $a = ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService());

        if (isset($container->privates['Ibexa\\CorporateAccount\\Permission\\MemberResolver'])) {
            return $container->privates['Ibexa\\CorporateAccount\\Permission\\MemberResolver'];
        }
        $b = ($container->privates['Ibexa\\CorporateAccount\\Event\\CompanyService'] ?? $container->getCompanyServiceService());

        if (isset($container->privates['Ibexa\\CorporateAccount\\Permission\\MemberResolver'])) {
            return $container->privates['Ibexa\\CorporateAccount\\Permission\\MemberResolver'];
        }
        $c = ($container->privates['Ibexa\\CorporateAccount\\Event\\MemberService'] ?? $container->getMemberServiceService());

        if (isset($container->privates['Ibexa\\CorporateAccount\\Permission\\MemberResolver'])) {
            return $container->privates['Ibexa\\CorporateAccount\\Permission\\MemberResolver'];
        }

        return $container->privates['Ibexa\\CorporateAccount\\Permission\\MemberResolver'] = new \Ibexa\CorporateAccount\Permission\MemberResolver($a, $b, $c);
    }
}
