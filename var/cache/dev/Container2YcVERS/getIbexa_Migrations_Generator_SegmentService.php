<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getIbexa_Migrations_Generator_SegmentService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'ibexa.migrations.generator.segment' shared autowired service.
     *
     * @return \Ibexa\Segmentation\Generator\Segment\SegmentMigrationGenerator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/MigrationGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/segmentation/src/lib/Generator/Segment/SegmentMigrationGenerator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/StepBuilder/StepFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Log/LoggerAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/StepBuilder/AbstractStepFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/segmentation/src/lib/Generator/Segment/StepBuilder/Factory.php';

        $a = new \Ibexa\Segmentation\Generator\Segment\StepBuilder\Factory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'create' => ['privates', 'Ibexa\\Segmentation\\Generator\\Segment\\StepBuilder\\Create', 'getCreate13Service', true],
            'delete' => ['privates', 'Ibexa\\Segmentation\\Generator\\Segment\\StepBuilder\\Delete', 'getDelete7Service', true],
            'update' => ['privates', 'Ibexa\\Segmentation\\Generator\\Segment\\StepBuilder\\Update', 'getUpdate10Service', true],
        ], [
            'create' => 'Ibexa\\Segmentation\\Generator\\Segment\\StepBuilder\\Create',
            'delete' => 'Ibexa\\Segmentation\\Generator\\Segment\\StepBuilder\\Delete',
            'update' => 'Ibexa\\Segmentation\\Generator\\Segment\\StepBuilder\\Update',
        ]), 'segment');
        $a->setLogger(($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        return $container->privates['ibexa.migrations.generator.segment'] = new \Ibexa\Segmentation\Generator\Segment\SegmentMigrationGenerator($a, ($container->privates['Ibexa\\Segmentation\\Service\\Event\\SegmentationServiceEventDecorator'] ?? $container->getSegmentationServiceEventDecoratorService()));
    }
}
