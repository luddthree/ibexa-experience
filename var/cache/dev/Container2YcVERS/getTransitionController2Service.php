<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTransitionController2Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\Workflow\Controller\TransitionController' shared autowired service.
     *
     * @return \Ibexa\Bundle\Workflow\Controller\TransitionController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/workflow/src/bundle/Controller/TransitionController.php';

        $container->services['Ibexa\\Bundle\\Workflow\\Controller\\TransitionController'] = $instance = new \Ibexa\Bundle\Workflow\Controller\TransitionController(($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService()), ($container->privates['Ibexa\\Workflow\\Service\\WorkflowService'] ?? $container->getWorkflowServiceService()), ($container->privates['Ibexa\\Workflow\\Registry\\WorkflowDefinitionMetadataRegistry'] ?? $container->getWorkflowDefinitionMetadataRegistryService()), ($container->privates['Ibexa\\Workflow\\WorkflowTimeline\\WorkflowTimelineFactory'] ?? $container->getWorkflowTimelineFactoryService()));

        $instance->setContainer(($container->privates['.service_locator.mx0UMmY'] ?? $container->load('get_ServiceLocator_Mx0UMmYService'))->withContext('Ibexa\\Bundle\\Workflow\\Controller\\TransitionController', $container));

        return $instance;
    }
}
