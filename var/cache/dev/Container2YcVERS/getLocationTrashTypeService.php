<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLocationTrashTypeService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\AdminUi\Form\Type\Location\LocationTrashType' shared autowired service.
     *
     * @return \Ibexa\AdminUi\Form\Type\Location\LocationTrashType
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Form/Type/Location/LocationTrashType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Form/TrashLocationOptionProvider/OptionsFactory.php';

        return $container->privates['Ibexa\\AdminUi\\Form\\Type\\Location\\LocationTrashType'] = new \Ibexa\AdminUi\Form\Type\Location\LocationTrashType(new \Ibexa\AdminUi\Form\TrashLocationOptionProvider\OptionsFactory(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\AdminUi\\Form\\TrashLocationOptionProvider\\HasReverseRelations'] ?? $container->load('getHasReverseRelationsService'));
            yield 1 => ($container->privates['Ibexa\\AdminUi\\Form\\TrashLocationOptionProvider\\HasChildren'] ?? $container->load('getHasChildrenService'));
            yield 2 => ($container->privates['Ibexa\\AdminUi\\Form\\TrashLocationOptionProvider\\HasUniqueAssetRelation'] ?? $container->load('getHasUniqueAssetRelationService'));
            yield 3 => ($container->privates['Ibexa\\AdminUi\\Form\\TrashLocationOptionProvider\\HasAssetRelation'] ?? $container->load('getHasAssetRelationService'));
        }, 4)), ($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService()));
    }
}
