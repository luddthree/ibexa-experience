<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getInMemoryFilterDefinitionProviderService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\ProductCatalog\Local\Repository\CatalogFilter\DefinitionProvider\InMemoryFilterDefinitionProvider' shared autowired service.
     *
     * @return \Ibexa\ProductCatalog\Local\Repository\CatalogFilter\DefinitionProvider\InMemoryFilterDefinitionProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/contracts/CatalogFilters/FilterDefinitionProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/Local/Repository/CatalogFilter/DefinitionProvider/InMemoryFilterDefinitionProvider.php';

        return $container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CatalogFilter\\DefinitionProvider\\InMemoryFilterDefinitionProvider'] = new \Ibexa\ProductCatalog\Local\Repository\CatalogFilter\DefinitionProvider\InMemoryFilterDefinitionProvider(new RewindableGenerator(function () use ($container) {
            yield 'product_type' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CatalogFilter\\ProductType'] ?? $container->load('getProductType3Service'));
            yield 'product_code' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CatalogFilter\\ProductCode'] ?? $container->load('getProductCode3Service'));
            yield 'product_availability' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CatalogFilter\\ProductAvailability'] ?? $container->load('getProductAvailability2Service'));
            yield 'product_price' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CatalogFilter\\ProductBasePrice'] ?? $container->load('getProductBasePriceService'));
            yield 'product_category' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CatalogFilter\\ProductCategory'] ?? $container->load('getProductCategory2Service'));
            yield 'product_created' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CatalogFilter\\ProductCreated'] ?? $container->load('getProductCreatedService'));
        }, 6), ($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService()));
    }
}
