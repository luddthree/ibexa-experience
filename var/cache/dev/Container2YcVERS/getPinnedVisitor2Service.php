<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPinnedVisitor2Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Elasticsearch\Query\CriterionVisitor\Location\PinnedVisitor' shared autowired service.
     *
     * @return \Ibexa\Elasticsearch\Query\CriterionVisitor\Location\PinnedVisitor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/elasticsearch/src/contracts/Query/CriterionVisitor.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/elasticsearch/src/lib/Query/CriterionVisitor/AbstractPinnedVisitor.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/elasticsearch/src/lib/Query/CriterionVisitor/Location/PinnedVisitor.php';

        $a = ($container->privates['Ibexa\\Contracts\\Core\\Persistence\\Content\\Handler'] ?? $container->getHandler7Service());

        if (isset($container->privates['Ibexa\\Elasticsearch\\Query\\CriterionVisitor\\Location\\PinnedVisitor'])) {
            return $container->privates['Ibexa\\Elasticsearch\\Query\\CriterionVisitor\\Location\\PinnedVisitor'];
        }
        $b = ($container->privates['Ibexa\\Contracts\\Core\\Persistence\\Content\\Location\\Handler'] ?? $container->getHandler4Service());

        if (isset($container->privates['Ibexa\\Elasticsearch\\Query\\CriterionVisitor\\Location\\PinnedVisitor'])) {
            return $container->privates['Ibexa\\Elasticsearch\\Query\\CriterionVisitor\\Location\\PinnedVisitor'];
        }

        return $container->privates['Ibexa\\Elasticsearch\\Query\\CriterionVisitor\\Location\\PinnedVisitor'] = new \Ibexa\Elasticsearch\Query\CriterionVisitor\Location\PinnedVisitor(($container->privates['Ibexa\\Elasticsearch\\DocumentMapper\\DocumentIdGenerator'] ?? ($container->privates['Ibexa\\Elasticsearch\\DocumentMapper\\DocumentIdGenerator'] = new \Ibexa\Elasticsearch\DocumentMapper\DocumentIdGenerator())), $a, $b);
    }
}
