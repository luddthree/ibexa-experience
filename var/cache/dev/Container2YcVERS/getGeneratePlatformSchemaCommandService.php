<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGeneratePlatformSchemaCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'console.command.public_alias.Ibexa\Bundle\GraphQL\Command\GeneratePlatformSchemaCommand' shared autowired service.
     *
     * @return \Ibexa\Bundle\GraphQL\Command\GeneratePlatformSchemaCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/bundle/Core/Command/BackwardCompatibleCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/bundle/Command/GeneratePlatformSchemaCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Generator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Builder.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Builder/SchemaBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/NameValidator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Iterator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/LanguagesIterator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Worker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/ImageVariationDomain.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/ContentDomainIterator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/ProductDomainIterator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/GraphQL/Schema/Domain/Iterator/TaxonomyIterator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/DomainIterator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-matrix/src/lib/GraphQL/Schema/MatrixFieldDefinitionSchemaWorker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-matrix/src/lib/GraphQL/Schema/NameHelper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-matrix/src/lib/GraphQL/Schema/MatrixFieldDefinitionInputSchemaWorker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/BaseWorker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentType/AddItemOfTypeConnectionToGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentType/AddItemToGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentType/AddItemTypeToItemGroupTypes.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Initializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentType/AddItemTypeToItemTypeIdentifierList.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentType/DefineItem.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentType/DefineItemConnection.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentType/DefineItemMutation.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentType/DefineItemType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentTypeGroup/AddDomainGroupToDomain.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentTypeGroup/DefineDomainGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/ContentTypeGroup/DefineDomainGroupTypes.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/FieldDefinition/AddFieldDefinitionToItemMutation.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/contracts/Schema/Domain/Content/Mapper/FieldDefinition/FieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Mapper/FieldDefinition/ResolverVariables.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Mapper/FieldDefinition/DecoratingFieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/PageFieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-query/src/lib/GraphQL/ContentQueryFieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Mapper/FieldDefinition/SelectionFieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Mapper/FieldDefinition/RelationFieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Mapper/FieldDefinition/FieldDefinitionInputMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Mapper/FieldDefinition/FieldDefinitionArgsBuilderMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Mapper/FieldDefinition/ConfigurableFieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-matrix/src/lib/GraphQL/Schema/MatrixFieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Mapper/FieldDefinition/DefaultFieldDefinitionMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/FieldDefinition/AddFieldDefinitionToItemType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/FieldDefinition/AddFieldValueToItem.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Content/Worker/Language/AddLanguageToEnum.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/Base.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/AddByTypeFilterGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/AddSingleFilterGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/AddToDomain.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/Attribute/AddProductAttributes.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/FilterAware.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/Filter/AddAllFilterGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/Filter/FilterByType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/MatrixFieldType/AbstractMatrixFieldDefinitionSchemaWorker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/MatrixFieldType/MatrixFieldDefinitionInputSchemaWorker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/MatrixFieldType/MatrixFieldDefinitionSchemaWorker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/Product/AddContentFields.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/Product/DefineProduct.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/Product/DefineProductConnection.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/ProductType/DefineProductType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/ProductType/DefineProductTypes.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/ProductType/DefineProductTypesList.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/GraphQL/Schema/Worker/ProductType/PopulateProductTypes.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/GraphQL/Schema/Domain/Worker/BaseWorker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/GraphQL/Schema/Domain/Worker/AddTaxonomyToDomain.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/BaseNameHelper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/GraphQL/Schema/NameHelperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/GraphQL/Schema/NameHelper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/GraphQL/Schema/Domain/Worker/DefineTaxonomyType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/Worker/BaseWorker.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/Worker/BlockAttributeField.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/BlockAttributeBuilderRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/BlockAttributeBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/BlockAttributeBuilder/Embed.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/Worker/NameHelper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/BlockAttributeBuilder/RichText.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/BlockAttributeBuilder/LocationList.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/BlockAttributeBuilder/ContentTypeList.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/BlockAttributeBuilder/Multiple.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/BlockAttributeBuilder/ResolveWithValue.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/Worker/BlocksIndex.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/Worker/BlockType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/Worker/BlockViewsType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/GraphQL/Schema/Worker/BlockViewsValue.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Schema/Domain/Pluralizer.php';

        $a = new \Ibexa\GraphQL\Schema\Domain\NameValidator();

        $b = ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService());

        $a->setLogger($b);
        $a->setLogger($b);
        $c = new \Ibexa\GraphQL\Schema\Domain\ImageVariationDomain(($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService()), $a);
        $d = ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService());
        $e = ($container->privates['Ibexa\\ProductCatalog\\Config\\ConfigProvider'] ?? $container->getConfigProviderService());
        $f = ($container->privates['Ibexa\\ProductCatalog\\Dispatcher\\ProductTypeServiceDispatcher'] ?? $container->getProductTypeServiceDispatcherService());
        $g = new \Ibexa\FieldTypeMatrix\GraphQL\Schema\NameHelper();
        $h = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentType\AddItemOfTypeConnectionToGroup();

        $i = ($container->privates['Ibexa\\GraphQL\\Schema\\Domain\\Content\\NameHelper'] ?? $container->load('getNameHelperService'));

        $h->setNameHelper($i);
        $j = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentType\AddItemToGroup();
        $j->setNameHelper($i);
        $k = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentType\AddItemTypeToItemGroupTypes();
        $k->setNameHelper($i);
        $l = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentType\AddItemTypeToItemTypeIdentifierList();
        $l->setNameHelper($i);
        $m = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentType\DefineItem();
        $m->setNameHelper($i);
        $n = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentType\DefineItemConnection();
        $n->setNameHelper($i);
        $o = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentType\DefineItemMutation();
        $o->setNameHelper($i);
        $p = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentType\DefineItemType();
        $p->setNameHelper($i);
        $q = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentTypeGroup\AddDomainGroupToDomain($d);
        $q->setNameHelper($i);
        $r = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentTypeGroup\DefineDomainGroup($d);
        $r->setNameHelper($i);
        $s = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\ContentTypeGroup\DefineDomainGroupTypes($d);
        $s->setNameHelper($i);
        $t = new \Ibexa\GraphQL\Schema\Domain\Content\Mapper\FieldDefinition\ResolverVariables(new \Ibexa\FieldTypePage\GraphQL\PageFieldDefinitionMapper(new \Ibexa\FieldTypeQuery\GraphQL\ContentQueryFieldDefinitionMapper(new \Ibexa\GraphQL\Schema\Domain\Content\Mapper\FieldDefinition\SelectionFieldDefinitionMapper(new \Ibexa\GraphQL\Schema\Domain\Content\Mapper\FieldDefinition\RelationFieldDefinitionMapper(new \Ibexa\GraphQL\Schema\Domain\Content\Mapper\FieldDefinition\ConfigurableFieldDefinitionMapper(new \Ibexa\FieldTypeMatrix\GraphQL\Schema\MatrixFieldDefinitionMapper(new \Ibexa\GraphQL\Schema\Domain\Content\Mapper\FieldDefinition\DefaultFieldDefinitionMapper(), $g, $d, new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\ProductCatalog\\FieldType\\Strategy\\FieldDefinitionToContentTypeStrategy'] ?? $container->load('getFieldDefinitionToContentTypeStrategyService'));
            yield 1 => ($container->privates['Ibexa\\FieldTypeMatrix\\FieldType\\Mapper\\FieldTypeToContentTypeStrategy'] ?? $container->load('getFieldTypeToContentTypeStrategyService'));
        }, 2)), $container->parameters['ibexa.graphql.schema.content.mapping.field_definition_type']), $i, $d)), $i, $d, 'ezcontentquery'), ($container->services['Ibexa\\FieldTypePage\\FieldType\\LandingPage\\Type'] ?? $container->getType3Service())));

        $u = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\FieldDefinition\AddFieldDefinitionToItemMutation($t);
        $u->setNameHelper($i);
        $v = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\FieldDefinition\AddFieldDefinitionToItemType($t);
        $v->setNameHelper($i);
        $w = new \Ibexa\GraphQL\Schema\Domain\Content\Worker\FieldDefinition\AddFieldValueToItem($t);
        $w->setNameHelper($i);
        $x = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\AddByTypeFilterGroup();

        $y = ($container->privates['Ibexa\\ProductCatalog\\GraphQL\\Schema\\NameHelper'] ?? $container->load('getNameHelper2Service'));

        $x->setNameHelper($y);
        $z = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\AddSingleFilterGroup();
        $z->setNameHelper($y);
        $aa = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\AddToDomain($f, $e);
        $aa->setNameHelper($y);
        $ba = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\Attribute\AddProductAttributes(($container->services['overblog_graphql.type_resolver'] ?? $container->load('getOverblogGraphql_TypeResolverService')));
        $ba->setNameHelper($y);
        $ca = ($container->privates['Ibexa\\ProductCatalog\\GraphQL\\Query\\FilterRegistry'] ?? $container->load('getFilterRegistryService'));

        $da = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\Filter\AddAllFilterGroup($ca);
        $da->setNameHelper($y);
        $ea = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\Filter\FilterByType($ca);
        $ea->setNameHelper($y);
        $fa = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\MatrixFieldType\MatrixFieldDefinitionInputSchemaWorker('ezmatrix');
        $fa->setNameHelper($y);
        $ga = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\MatrixFieldType\MatrixFieldDefinitionSchemaWorker('ezmatrix');
        $ga->setNameHelper($y);
        $ha = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\Product\AddContentFields($t);
        $ha->setNameHelper($y);
        $ia = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\Product\DefineProduct();
        $ia->setNameHelper($y);
        $ja = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\Product\DefineProductConnection();
        $ja->setNameHelper($y);
        $ka = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\ProductType\DefineProductType();
        $ka->setNameHelper($y);
        $la = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\ProductType\DefineProductTypes();
        $la->setNameHelper($y);
        $ma = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\ProductType\DefineProductTypesList($f, $e);
        $ma->setNameHelper($y);
        $na = new \Ibexa\ProductCatalog\GraphQL\Schema\Worker\ProductType\PopulateProductTypes();
        $na->setNameHelper($y);
        $oa = new \Ibexa\Taxonomy\GraphQL\Schema\Domain\Worker\AddTaxonomyToDomain();

        $pa = new \Ibexa\Taxonomy\GraphQL\Schema\NameHelper(($container->privates['Ibexa\\GraphQL\\Schema\\Domain\\Pluralizer'] ?? ($container->privates['Ibexa\\GraphQL\\Schema\\Domain\\Pluralizer'] = new \Ibexa\GraphQL\Schema\Domain\Pluralizer())));

        $oa->setNameHelper($pa);
        $qa = new \Ibexa\Taxonomy\GraphQL\Schema\Domain\Worker\DefineTaxonomyType();
        $qa->setNameHelper($pa);
        $ra = new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilderRegistry();

        $sa = new \Ibexa\FieldTypePage\GraphQL\Schema\Worker\NameHelper();

        $ta = new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\Embed($sa);
        $ua = new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\ResolveWithValue('String', $sa);

        $ra->setAttributeBuilders(['embed' => $ta, 'embedvideo' => $ta, 'richtext' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\RichText($sa), 'locationlist' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\LocationList($sa), 'contenttypelist' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\ContentTypeList($sa), 'multiple' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\Multiple($sa), 'string' => $ua, 'text' => $ua, 'select' => $ua, 'radio' => $ua, 'url' => $ua, 'integer' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\ResolveWithValue('Int', $sa), 'schedule_events' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\ResolveWithValue('[SchedulerBlockEvent]', $sa), 'schedule_snapshots' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\ResolveWithValue('[SchedulerBlockSnapshot]', $sa), 'schedule_initial_items' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\ResolveWithValue('[SchedulerBlockItem]', $sa), 'schedule_loaded_snapshot' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\ResolveWithValue('SchedulerBlockSnapshot', $sa), 'schedule_slots' => new \Ibexa\FieldTypePage\GraphQL\Schema\BlockAttributeBuilder\ResolveWithValue('[SchedulerBlockSlot]', $sa)]);

        $va = new \Ibexa\FieldTypePage\GraphQL\Schema\Worker\BlockAttributeField($ra);
        $va->setNameHelper($sa);
        $wa = new \Ibexa\FieldTypePage\GraphQL\Schema\Worker\BlocksIndex();
        $wa->setNameHelper($sa);
        $xa = new \Ibexa\FieldTypePage\GraphQL\Schema\Worker\BlockType();
        $xa->setNameHelper($sa);
        $ya = new \Ibexa\FieldTypePage\GraphQL\Schema\Worker\BlockViewsType($a);
        $ya->setNameHelper($sa);
        $za = new \Ibexa\FieldTypePage\GraphQL\Schema\Worker\BlockViewsValue($a);
        $za->setNameHelper($sa);

        $container->services['console.command.public_alias.Ibexa\\Bundle\\GraphQL\\Command\\GeneratePlatformSchemaCommand'] = $instance = new \Ibexa\Bundle\GraphQL\Command\GeneratePlatformSchemaCommand(new \Ibexa\GraphQL\Schema\Generator(new \Ibexa\GraphQL\Schema\Builder\SchemaBuilder($a), [0 => new \Ibexa\GraphQL\Schema\Domain\Content\LanguagesIterator(($container->services['ibexa.api.service.language'] ?? $container->getIbexa_Api_Service_LanguageService())), 1 => $c, 2 => new \Ibexa\GraphQL\Schema\Domain\Content\ContentDomainIterator($d, $a), 3 => new \Ibexa\ProductCatalog\GraphQL\Schema\ProductDomainIterator($e, $f, $a), 4 => new \Ibexa\Taxonomy\GraphQL\Schema\Domain\Iterator\TaxonomyIterator(($container->privates['Ibexa\\Taxonomy\\Service\\TaxonomyConfiguration'] ?? $container->getTaxonomyConfigurationService())), 5 => new \Ibexa\FieldTypePage\GraphQL\Schema\DomainIterator(($container->services['Ibexa\\FieldTypePage\\FieldType\\Page\\Block\\Definition\\CachedBlockDefinitionFactory'] ?? $container->getCachedBlockDefinitionFactoryService()), $a)], [0 => new \Ibexa\FieldTypeMatrix\GraphQL\Schema\MatrixFieldDefinitionSchemaWorker($g), 1 => new \Ibexa\FieldTypeMatrix\GraphQL\Schema\MatrixFieldDefinitionInputSchemaWorker($g), 2 => $h, 3 => $j, 4 => $k, 5 => $l, 6 => $m, 7 => $n, 8 => $o, 9 => $p, 10 => $q, 11 => $r, 12 => $s, 13 => $u, 14 => $v, 15 => $w, 16 => new \Ibexa\GraphQL\Schema\Domain\Content\Worker\Language\AddLanguageToEnum(), 17 => $c, 18 => $x, 19 => $z, 20 => $aa, 21 => $ba, 22 => $da, 23 => $ea, 24 => $fa, 25 => $ga, 26 => $ha, 27 => $ia, 28 => $ja, 29 => $ka, 30 => $la, 31 => $ma, 32 => $na, 33 => $oa, 34 => $qa, 35 => $va, 36 => $wa, 37 => $xa, 38 => $ya, 39 => $za]), ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService()), (\dirname(__DIR__, 4).'/config/graphql/types/ibexa'));

        $instance->addOption('siteaccess', NULL, 4, 'SiteAccess to use for operations. If not provided, default siteaccess will be used');

        return $instance;
    }
}
