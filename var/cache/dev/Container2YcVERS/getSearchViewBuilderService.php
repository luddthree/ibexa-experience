<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSearchViewBuilderService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Search\View\SearchViewBuilder' shared service.
     *
     * @return \Ibexa\Search\View\SearchViewBuilder
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/MVC/Symfony/View/Builder/ViewBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/search/src/lib/View/SearchViewBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/search/src/lib/Mapper/PagerSearchContentToDataMapper.php';

        $a = ($container->privates['Ibexa\\Core\\MVC\\Symfony\\View\\Configurator\\ViewProvider'] ?? $container->load('getViewProviderService'));

        if (isset($container->privates['Ibexa\\Search\\View\\SearchViewBuilder'])) {
            return $container->privates['Ibexa\\Search\\View\\SearchViewBuilder'];
        }
        $b = ($container->privates['Ibexa\\Core\\MVC\\Symfony\\View\\ParametersInjector\\EventDispatcherInjector'] ?? $container->load('getEventDispatcherInjectorService'));

        if (isset($container->privates['Ibexa\\Search\\View\\SearchViewBuilder'])) {
            return $container->privates['Ibexa\\Search\\View\\SearchViewBuilder'];
        }
        $c = ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService());

        if (isset($container->privates['Ibexa\\Search\\View\\SearchViewBuilder'])) {
            return $container->privates['Ibexa\\Search\\View\\SearchViewBuilder'];
        }
        $d = ($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService());

        if (isset($container->privates['Ibexa\\Search\\View\\SearchViewBuilder'])) {
            return $container->privates['Ibexa\\Search\\View\\SearchViewBuilder'];
        }
        $e = ($container->privates['Ibexa\\Core\\Repository\\LocationResolver\\PermissionAwareLocationResolver'] ?? $container->load('getPermissionAwareLocationResolverService'));

        if (isset($container->privates['Ibexa\\Search\\View\\SearchViewBuilder'])) {
            return $container->privates['Ibexa\\Search\\View\\SearchViewBuilder'];
        }

        return $container->privates['Ibexa\\Search\\View\\SearchViewBuilder'] = new \Ibexa\Search\View\SearchViewBuilder($a, $b, ($container->services['ibexa.api.service.search'] ?? $container->getIbexa_Api_Service_SearchService()), new \Ibexa\Search\Mapper\PagerSearchContentToDataMapper($c, $d, ($container->privates['Ibexa\\Core\\MVC\\Symfony\\Locale\\UserLanguagePreferenceProvider'] ?? $container->getUserLanguagePreferenceProviderService()), ($container->privates['Ibexa\\Core\\Helper\\TranslationHelper'] ?? $container->getTranslationHelperService()), ($container->services['ibexa.api.service.language'] ?? $container->getIbexa_Api_Service_LanguageService()), $e), ($container->privates['Ibexa\\Search\\QueryType\\SearchQueryType'] ?? $container->getSearchQueryTypeService()));
    }
}
