<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSynchronizeEntryWithContentSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Taxonomy\Event\Subscriber\SynchronizeEntryWithContentSubscriber' shared autowired service.
     *
     * @return \Ibexa\Taxonomy\Event\Subscriber\SynchronizeEntryWithContentSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/Event/Subscriber/SynchronizeEntryWithContentSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/Repository/Content/ContentSynchronizerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/Repository/Content/ContentSynchronizer.php';

        $a = ($container->privates['Ibexa\\Taxonomy\\Service\\Event\\TaxonomyService'] ?? $container->getTaxonomyServiceService());

        if (isset($container->privates['Ibexa\\Taxonomy\\Event\\Subscriber\\SynchronizeEntryWithContentSubscriber'])) {
            return $container->privates['Ibexa\\Taxonomy\\Event\\Subscriber\\SynchronizeEntryWithContentSubscriber'];
        }
        $b = ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService());

        if (isset($container->privates['Ibexa\\Taxonomy\\Event\\Subscriber\\SynchronizeEntryWithContentSubscriber'])) {
            return $container->privates['Ibexa\\Taxonomy\\Event\\Subscriber\\SynchronizeEntryWithContentSubscriber'];
        }
        $c = ($container->privates['Ibexa\\Taxonomy\\Service\\TaxonomyConfiguration'] ?? $container->getTaxonomyConfigurationService());

        return $container->privates['Ibexa\\Taxonomy\\Event\\Subscriber\\SynchronizeEntryWithContentSubscriber'] = new \Ibexa\Taxonomy\Event\Subscriber\SynchronizeEntryWithContentSubscriber($a, $c, new \Ibexa\Taxonomy\Repository\Content\ContentSynchronizer($c, $a, $b));
    }
}
