<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLocationEventSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\Elasticsearch\Event\Subscriber\LocationEventSubscriber' shared autowired service.
     *
     * @return \Ibexa\Bundle\Elasticsearch\Event\Subscriber\LocationEventSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/Search/Common/EventSubscriber/AbstractSearchEventSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/elasticsearch/src/bundle/Event/Subscriber/LocationEventSubscriber.php';

        $a = ($container->privates['Ibexa\\Contracts\\Core\\Search\\VersatileHandler'] ?? $container->getVersatileHandlerService());

        if (isset($container->privates['Ibexa\\Bundle\\Elasticsearch\\Event\\Subscriber\\LocationEventSubscriber'])) {
            return $container->privates['Ibexa\\Bundle\\Elasticsearch\\Event\\Subscriber\\LocationEventSubscriber'];
        }
        $b = ($container->privates['Ibexa\\Core\\Persistence\\Cache\\Handler'] ?? $container->getHandler2Service());

        if (isset($container->privates['Ibexa\\Bundle\\Elasticsearch\\Event\\Subscriber\\LocationEventSubscriber'])) {
            return $container->privates['Ibexa\\Bundle\\Elasticsearch\\Event\\Subscriber\\LocationEventSubscriber'];
        }

        return $container->privates['Ibexa\\Bundle\\Elasticsearch\\Event\\Subscriber\\LocationEventSubscriber'] = new \Ibexa\Bundle\Elasticsearch\Event\Subscriber\LocationEventSubscriber($a, $b);
    }
}
