<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNotificationService2Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Notifications\Service\NotificationService' shared autowired service.
     *
     * @return \Ibexa\Notifications\Service\NotificationService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/notifications/src/contracts/Service/NotificationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/notifications/src/lib/Service/NotificationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/NotifierInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Notifier.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Channel/ChannelPolicyInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Channel/ChannelPolicy.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/RecipientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/EmailRecipientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/SmsRecipientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/EmailRecipientTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/SmsRecipientTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/notifier/Recipient/Recipient.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/notifications/src/lib/SubscriptionResolver/SubscriptionResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/notifications/src/lib/SubscriptionResolver/ChainSubscriptionResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/notifications/src/lib/Mapper/NotificationMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/notifications/src/lib/Mapper/NotificationMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/notifications/src/lib/Mapper/RecipientMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/notifications/src/lib/Mapper/RecipientMapper.php';

        $a = new \Symfony\Component\Notifier\Notifier(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'browser' => ['privates', 'notifier.channel.browser', 'getNotifier_Channel_BrowserService', true],
            'chat' => ['privates', 'notifier.channel.chat', 'getNotifier_Channel_ChatService', true],
            'push' => ['privates', 'notifier.channel.push', 'getNotifier_Channel_PushService', true],
            'sms' => ['privates', 'notifier.channel.sms', 'getNotifier_Channel_SmsService', true],
        ], [
            'browser' => 'Symfony\\Component\\Notifier\\Channel\\BrowserChannel',
            'chat' => 'Symfony\\Component\\Notifier\\Channel\\ChatChannel',
            'push' => 'Symfony\\Component\\Notifier\\Channel\\PushChannel',
            'sms' => 'Symfony\\Component\\Notifier\\Channel\\SmsChannel',
        ]), new \Symfony\Component\Notifier\Channel\ChannelPolicy(['urgent' => [0 => 'email'], 'high' => [0 => 'email'], 'medium' => [0 => 'email'], 'low' => [0 => 'email']]));
        $a->addAdminRecipient(new \Symfony\Component\Notifier\Recipient\Recipient('admin@example.com', ''));

        return $container->privates['Ibexa\\Notifications\\Service\\NotificationService'] = new \Ibexa\Notifications\Service\NotificationService($a, new \Ibexa\Notifications\SubscriptionResolver\ChainSubscriptionResolver(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\Notifications\\SubscriptionResolver\\ConfigBasedSubscriptionResolver'] ?? $container->load('getConfigBasedSubscriptionResolverService'));
        }, 1)), new \Ibexa\Notifications\Mapper\NotificationMapper(), new \Ibexa\Notifications\Mapper\RecipientMapper());
    }
}
