<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMigrateCustomersCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\CorporateAccount\Command\MigrateCustomersCommand' shared autowired service.
     *
     * @return \Ibexa\Bundle\CorporateAccount\Command\MigrateCustomersCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/corporate-account/src/bundle/Command/MigrateCustomersCommand.php';

        $container->privates['Ibexa\\Bundle\\CorporateAccount\\Command\\MigrateCustomersCommand'] = $instance = new \Ibexa\Bundle\CorporateAccount\Command\MigrateCustomersCommand(($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService()), ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService()), ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService()), ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService()), ($container->services['doctrine.dbal.default_connection'] ?? $container->getDoctrine_Dbal_DefaultConnectionService()), ($container->privates['Ibexa\\Core\\Persistence\\Cache\\TransactionHandler'] ?? $container->getTransactionHandlerService()), ($container->privates['Ibexa\\Core\\Persistence\\Cache\\Adapter\\TransactionalInMemoryCacheAdapter'] ?? $container->getTransactionalInMemoryCacheAdapterService()), ($container->privates['Ibexa\\Core\\Persistence\\Cache\\Identifier\\CacheIdentifierGenerator'] ?? $container->getCacheIdentifierGeneratorService()));

        $instance->addOption('siteaccess', NULL, 4, 'SiteAccess to use for operations. If not provided, default siteaccess will be used');
        $instance->setName('ibexa:migrate:customers');

        return $instance;
    }
}
