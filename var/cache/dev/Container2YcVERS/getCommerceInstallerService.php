<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCommerceInstallerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Installer\Installer\CommerceInstaller' shared autowired service.
     *
     * @return \Ibexa\Installer\Installer\CommerceInstaller
     */
    public static function do($container, $lazyLoad = true)
    {
        if ($lazyLoad) {
            return $container->privates['Ibexa\\Installer\\Installer\\CommerceInstaller'] = $container->createProxy('CommerceInstaller_1d86cd7', function () use ($container) {
                return \CommerceInstaller_1d86cd7::staticProxyConstructor(function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = self::do($container, false);

                    $proxy->setProxyInitializer(null);

                    return true;
                });
            });
        }

        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/bundle/RepositoryInstaller/Installer/DbBasedInstaller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/bundle/RepositoryInstaller/Installer/Installer.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/bundle/RepositoryInstaller/Installer/CoreInstaller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/installer/src/lib/Installer/AbstractProductInstaller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/installer/src/lib/Installer/CommerceInstaller.php';

        return new \Ibexa\Installer\Installer\CommerceInstaller(($container->services['ibexa.persistence.connection'] ?? $container->getIbexa_Persistence_ConnectionService()), ($container->privates['Ibexa\\DoctrineSchema\\Builder\\SchemaBuilder'] ?? $container->load('getSchemaBuilderService')), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\Installer\\Provisioner\\HeadlessProvisioner'] ?? $container->load('getHeadlessProvisionerService'));
            yield 1 => ($container->privates['Ibexa\\Installer\\Provisioner\\ExperienceProvisioner'] ?? $container->load('getExperienceProvisionerService'));
            yield 2 => ($container->privates['Ibexa\\Installer\\Provisioner\\CommerceProvisioner'] ?? $container->load('getCommerceProvisionerService'));
            yield 3 => ($container->privates['Ibexa\\Installer\\Provisioner\\CommonProvisioner'] ?? $container->load('getCommonProvisionerService'));
            yield 4 => ($container->privates['Ibexa\\Taxonomy\\Installer\\TaxonomyProvisioner'] ?? $container->load('getTaxonomyProvisionerService'));
            yield 5 => ($container->privates['Ibexa\\ImagePicker\\Installer\\ImagePickerProvisioner'] ?? $container->load('getImagePickerProvisionerService'));
            yield 6 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\Installer\\ProductCatalogProvisioner'] ?? $container->load('getProductCatalogProvisionerService'));
            yield 7 => ($container->privates['Ibexa\\Bundle\\CorporateAccount\\Installer\\CorporateAccountProvisioner'] ?? $container->load('getCorporateAccountProvisionerService'));
            yield 8 => ($container->privates['Ibexa\\Bundle\\CorporateAccount\\Installer\\CorporateAccountCommerceProvisioner'] ?? $container->load('getCorporateAccountCommerceProvisionerService'));
            yield 9 => ($container->privates['Ibexa\\Bundle\\Dashboard\\Installer\\DashboardProvisioner'] ?? $container->load('getDashboardProvisioner2Service'));
            yield 10 => ($container->privates['Ibexa\\Bundle\\ActivityLog\\Installer\\DashboardProvisioner'] ?? $container->load('getDashboardProvisionerService'));
            yield 11 => ($container->privates['Ibexa\\Bundle\\Personalization\\Installer\\DashboardProvisioner'] ?? $container->load('getDashboardProvisioner3Service'));
            yield 12 => ($container->privates['Ibexa\\Bundle\\ProductCatalog\\Installer\\DashboardProvisioner'] ?? $container->load('getDashboardProvisioner4Service'));
        }, 13));
    }
}
