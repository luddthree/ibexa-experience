<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSegmentControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\Segmentation\Controller\SegmentController' shared autowired service.
     *
     * @return \Ibexa\Bundle\Segmentation\Controller\SegmentController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/segmentation/src/bundle/Controller/SegmentController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/segmentation/src/contracts/Configuration/ProtectedSegmentGroupsConfigurationInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/segmentation/src/lib/Configuration/ProtectedSegmentGroupsConfiguration.php';

        $a = ($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService());

        $container->services['Ibexa\\Bundle\\Segmentation\\Controller\\SegmentController'] = $instance = new \Ibexa\Bundle\Segmentation\Controller\SegmentController(($container->privates['Ibexa\\Segmentation\\Service\\Event\\SegmentationServiceEventDecorator'] ?? $container->getSegmentationServiceEventDecoratorService()), ($container->services['.container.private.form.factory'] ?? $container->get_Container_Private_Form_FactoryService()), ($container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'] ?? $container->load('getSubmitHandlerService')), ($container->privates['Ibexa\\AdminUi\\Notification\\TranslatableNotificationHandler'] ?? $container->getTranslatableNotificationHandlerService()), $a, ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService()), new \Ibexa\Segmentation\Configuration\ProtectedSegmentGroupsConfiguration($a));

        $instance->setContainer(($container->privates['.service_locator.mx0UMmY'] ?? $container->load('get_ServiceLocator_Mx0UMmYService'))->withContext('Ibexa\\Bundle\\Segmentation\\Controller\\SegmentController', $container));

        return $instance;
    }
}
