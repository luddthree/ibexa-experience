<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getManagerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\Core\View\Manager' shared service.
     *
     * @return \Ibexa\Bundle\Core\View\Manager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/MVC/Symfony/View/ViewManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/MVC/Symfony/View/Manager.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/bundle/Core/View/Manager.php';

        $a = ($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService());

        if (isset($container->privates['Ibexa\\Bundle\\Core\\View\\Manager'])) {
            return $container->privates['Ibexa\\Bundle\\Core\\View\\Manager'];
        }
        $b = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['Ibexa\\Bundle\\Core\\View\\Manager'])) {
            return $container->privates['Ibexa\\Bundle\\Core\\View\\Manager'];
        }
        $c = ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService());

        if (isset($container->privates['Ibexa\\Bundle\\Core\\View\\Manager'])) {
            return $container->privates['Ibexa\\Bundle\\Core\\View\\Manager'];
        }
        $d = ($container->privates['Ibexa\\Core\\MVC\\Symfony\\View\\Configurator\\ViewProvider'] ?? $container->load('getViewProviderService'));

        if (isset($container->privates['Ibexa\\Bundle\\Core\\View\\Manager'])) {
            return $container->privates['Ibexa\\Bundle\\Core\\View\\Manager'];
        }

        return $container->privates['Ibexa\\Bundle\\Core\\View\\Manager'] = new \Ibexa\Bundle\Core\View\Manager($a, $b, $c, ($container->services['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ChainConfigResolver'] ?? $container->getChainConfigResolverService()), '@IbexaCore/viewbase_layout.html.twig', $d, ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));
    }
}
