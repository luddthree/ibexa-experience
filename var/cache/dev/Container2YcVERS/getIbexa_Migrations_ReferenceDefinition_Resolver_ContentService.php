<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getIbexa_Migrations_ReferenceDefinition_Resolver_ContentService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'ibexa.migrations.reference_definition.resolver.content' shared autowired service.
     *
     * @return \Ibexa\Migration\StepExecutor\ReferenceDefinition\Resolver
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/ReferenceDefinition/ResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/ReferenceDefinition/Resolver.php';

        return $container->privates['ibexa.migrations.reference_definition.resolver.content'] = new \Ibexa\Migration\StepExecutor\ReferenceDefinition\Resolver(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'content_id' => ['privates', 'Ibexa\\Migration\\StepExecutor\\ReferenceDefinition\\Content\\ContentIdResolver', 'getContentIdResolverService', true],
            'location_id' => ['privates', 'Ibexa\\Migration\\StepExecutor\\ReferenceDefinition\\Content\\ContentLocationIdResolver', 'getContentLocationIdResolverService', true],
            'path' => ['privates', 'Ibexa\\Migration\\StepExecutor\\ReferenceDefinition\\Content\\ContentLocationPathResolver', 'getContentLocationPathResolverService', true],
        ], [
            'content_id' => 'Ibexa\\Migration\\StepExecutor\\ReferenceDefinition\\Content\\ContentIdResolver',
            'location_id' => 'Ibexa\\Migration\\StepExecutor\\ReferenceDefinition\\Content\\ContentLocationIdResolver',
            'path' => 'Ibexa\\Migration\\StepExecutor\\ReferenceDefinition\\Content\\ContentLocationPathResolver',
        ]));
    }
}
