<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMigrateRichTextNamespacesCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\FieldTypeRichText\Command\MigrateRichTextNamespacesCommand' shared autowired service.
     *
     * @return \Ibexa\Bundle\FieldTypeRichText\Command\MigrateRichTextNamespacesCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-richtext/src/bundle/Command/MigrateRichTextNamespacesCommand.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-richtext/src/lib/Persistence/MigrateRichTextNamespacesHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-richtext/src/lib/Persistence/Legacy/MigrateRichTextNamespaces/Handler.php';

        $container->privates['Ibexa\\Bundle\\FieldTypeRichText\\Command\\MigrateRichTextNamespacesCommand'] = $instance = new \Ibexa\Bundle\FieldTypeRichText\Command\MigrateRichTextNamespacesCommand(new \Ibexa\FieldTypeRichText\Persistence\Legacy\MigrateRichTextNamespaces\Handler(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\FieldTypeRichText\\Persistence\\Legacy\\MigrateRichTextNamespaces\\Gateway\\DoctrineDatabase'] ?? $container->load('getDoctrineDatabase5Service'));
            yield 1 => ($container->privates['Ibexa\\PageBuilder\\Persistence\\Legacy\\MigrateRichTextNamespaces\\Gateway\\DoctrineDatabase'] ?? $container->load('getDoctrineDatabase6Service'));
        }, 2)), $container->parameters['ibexa.field_type.rich_text.namespaces_migration_map'], ($container->privates['Ibexa\\Core\\Persistence\\Cache\\Adapter\\TransactionalInMemoryCacheAdapter'] ?? $container->getTransactionalInMemoryCacheAdapterService()));

        $instance->addOption('siteaccess', NULL, 4, 'SiteAccess to use for operations. If not provided, default siteaccess will be used');
        $instance->setName('ibexa:migrate:richtext-namespaces');

        return $instance;
    }
}
