<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContentCreateStepExecutorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Migration\StepExecutor\ContentCreateStepExecutor' shared autowired service.
     *
     * @return \Ibexa\Migration\StepExecutor\ContentCreateStepExecutor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/StepExecutorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/UserContextAwareStepExecutorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/service-contracts/ServiceSubscriberTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/UserContextAwareStepExecutorTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/contracts/StepExecutor/AbstractStepExecutor.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Log/LoggerAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/ContentCreateStepExecutor.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/ActionExecutor/ExecutorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/ActionExecutor/AbstractExecutor.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/ActionExecutor/Content/Create/Executor.php';

        $container->privates['Ibexa\\Migration\\StepExecutor\\ContentCreateStepExecutor'] = $instance = new \Ibexa\Migration\StepExecutor\ContentCreateStepExecutor(($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService()), ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService()), ($container->privates['Ibexa\\Migration\\Service\\FieldTypeService'] ?? $container->load('getFieldTypeServiceService')), ($container->services['ibexa.api.service.location'] ?? $container->getIbexa_Api_Service_LocationService()), ($container->services['ibexa.api.service.section'] ?? $container->getIbexa_Api_Service_SectionService()), new \Ibexa\Migration\StepExecutor\ActionExecutor\Content\Create\Executor(($container->privates['.service_locator.m7TxS0i'] ?? $container->load('get_ServiceLocator_M7TxS0iService'))), ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        $instance->setPermissionResolver(($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService()));
        $instance->setContainer(($container->privates['.service_locator.HVzuLil'] ?? $container->load('get_ServiceLocator_HVzuLilService'))->withContext('Ibexa\\Migration\\StepExecutor\\ContentCreateStepExecutor', $container));

        return $instance;
    }
}
