<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConfigScopeListenerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Bundle\Core\EventListener\ConfigScopeListener' shared service.
     *
     * @return \Ibexa\Bundle\Core\EventListener\ConfigScopeListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/contracts/MVC/EventSubscriber/ConfigScopeChangeSubscriber.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/bundle/Core/EventListener/ConfigScopeListener.php';

        $a = ($container->privates['Ibexa\\Bundle\\Core\\View\\Manager'] ?? $container->load('getManagerService'));

        if (isset($container->privates['Ibexa\\Bundle\\Core\\EventListener\\ConfigScopeListener'])) {
            return $container->privates['Ibexa\\Bundle\\Core\\EventListener\\ConfigScopeListener'];
        }

        $container->privates['Ibexa\\Bundle\\Core\\EventListener\\ConfigScopeListener'] = $instance = new \Ibexa\Bundle\Core\EventListener\ConfigScopeListener(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ConfigResolver\\GlobalScopeConfigResolver'] ?? $container->getGlobalScopeConfigResolverService());
            yield 1 => ($container->privates['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ConfigResolver\\StaticSiteAccessConfigResolver'] ?? $container->getStaticSiteAccessConfigResolverService());
            yield 2 => ($container->privates['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ConfigResolver\\SiteAccessGroupConfigResolver'] ?? $container->getSiteAccessGroupConfigResolverService());
            yield 3 => ($container->privates['Ibexa\\Bundle\\Core\\DependencyInjection\\Configuration\\ConfigResolver\\DefaultScopeConfigResolver'] ?? $container->getDefaultScopeConfigResolverService());
        }, 4), $a);

        $instance->setViewProviders([0 => ($container->privates['ibexa.content_view_provider.configured'] ?? $container->load('getIbexa_ContentViewProvider_ConfiguredService')), 1 => ($container->privates['ibexa.location_view_provider.configured'] ?? $container->load('getIbexa_LocationViewProvider_ConfiguredService')), 2 => ($container->privates['ibexa.product_catalog.content_view_provider'] ?? $container->load('getIbexa_ProductCatalog_ContentViewProviderService')), 3 => ($container->privates['ibexa.content_view_provider.default_configured'] ?? $container->load('getIbexa_ContentViewProvider_DefaultConfiguredService')), 4 => ($container->privates['ibexa.support_tools.view.system_info.provider'] ?? $container->load('getIbexa_SupportTools_View_SystemInfo_ProviderService')), 5 => ($container->privates['Ibexa\\ContentForms\\Content\\View\\Provider\\ContentEditView\\Configured'] ?? $container->load('getConfigured2Service')), 6 => ($container->privates['Ibexa\\ContentForms\\Content\\View\\Provider\\ContentCreateView\\Configured'] ?? $container->load('getConfigured3Service')), 7 => ($container->privates['Ibexa\\AdminUi\\View\\Provider\\ContentTranslateView\\Configured'] ?? $container->load('getConfiguredService')), 8 => ($container->privates['Ibexa\\User\\View\\UserSettings\\UpdateViewProvider'] ?? $container->load('getUpdateViewProviderService')), 9 => ($container->privates['ibexa.user.view.user_setting.update.default_configured'] ?? $container->load('getIbexa_User_View_UserSetting_Update_DefaultConfiguredService')), 10 => ($container->privates['Ibexa\\Search\\View\\SearchViewProvider'] ?? $container->load('getSearchViewProviderService')), 11 => ($container->privates['Ibexa\\Connector\\Dam\\View\\AssetViewProvider'] ?? $container->load('getAssetViewProviderService')), 12 => ($container->privates['ibexa.view.connector.dam.asset.default_configured'] ?? $container->load('getIbexa_View_Connector_Dam_Asset_DefaultConfiguredService'))]);

        return $instance;
    }
}
