<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContentService3Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Personalization\Service\Content\ContentService' shared autowired service.
     *
     * @return \Ibexa\Personalization\Service\Content\ContentService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/contracts/Content/AbstractContentService.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Service/Content/ContentServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Service/Content/ContentService.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Content/Routing/UrlGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Content/Routing/UrlGenerator.php';

        $a = ($container->privates['Ibexa\\Personalization\\Service\\Item\\ItemService'] ?? $container->load('getItemServiceService'));

        if (isset($container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'])) {
            return $container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'];
        }
        $b = ($container->privates['Ibexa\\Personalization\\Service\\Setting\\DefaultSiteAccessSettingService'] ?? $container->load('getDefaultSiteAccessSettingServiceService'));

        if (isset($container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'])) {
            return $container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'];
        }
        $c = ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService());

        if (isset($container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'])) {
            return $container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'];
        }
        $d = ($container->privates['Ibexa\\Personalization\\Config\\Host\\HostResolver'] ?? $container->load('getHostResolverService'));

        if (isset($container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'])) {
            return $container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'];
        }

        $container->privates['Ibexa\\Personalization\\Service\\Content\\ContentService'] = $instance = new \Ibexa\Personalization\Service\Content\ContentService(($container->privates['Ibexa\\Personalization\\Config\\Authentication\\ParametersResolver'] ?? $container->load('getParametersResolverService')), ($container->privates['Ibexa\\Personalization\\Config\\Repository\\RepositoryConfigResolver'] ?? $container->load('getRepositoryConfigResolverService')), ($container->privates['Ibexa\\Personalization\\Config\\ItemType\\IncludedItemTypeResolver'] ?? $container->load('getIncludedItemTypeResolverService')), $a, $b, new \Ibexa\Personalization\Content\Routing\UrlGenerator($c, $d));

        $instance->setLogger(($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        return $instance;
    }
}
