<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUniversalDiscoveryProviderService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\AdminUi\UniversalDiscovery\UniversalDiscoveryProvider' shared autowired service.
     *
     * @return \Ibexa\AdminUi\UniversalDiscovery\UniversalDiscoveryProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/UniversalDiscovery/Provider.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/UniversalDiscovery/UniversalDiscoveryProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/Permission/LookupLimitationsTransformer.php';

        $a = ($container->services['ibexa.api.service.location'] ?? $container->getIbexa_Api_Service_LocationService());

        if (isset($container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'])) {
            return $container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'];
        }
        $b = ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService());

        if (isset($container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'])) {
            return $container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'];
        }
        $c = ($container->services['ibexa.api.service.bookmark'] ?? $container->getIbexa_Api_Service_BookmarkService());

        if (isset($container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'])) {
            return $container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'];
        }
        $d = ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService());

        if (isset($container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'])) {
            return $container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'];
        }
        $e = ($container->privates['ibexa.rest.output.visitor.json'] ?? $container->load('getIbexa_Rest_Output_Visitor_JsonService'));

        if (isset($container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'])) {
            return $container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'];
        }

        return $container->privates['Ibexa\\AdminUi\\UniversalDiscovery\\UniversalDiscoveryProvider'] = new \Ibexa\AdminUi\UniversalDiscovery\UniversalDiscoveryProvider($a, $b, ($container->services['ibexa.api.service.search'] ?? $container->getIbexa_Api_Service_SearchService()), $c, $d, $e, ($container->privates['Ibexa\\AdminUi\\Permission\\PermissionChecker'] ?? $container->load('getPermissionCheckerService')), ($container->privates['Ibexa\\AdminUi\\Permission\\LookupLimitationsTransformer'] ?? ($container->privates['Ibexa\\AdminUi\\Permission\\LookupLimitationsTransformer'] = new \Ibexa\AdminUi\Permission\LookupLimitationsTransformer())), ($container->privates['Ibexa\\AdminUi\\QueryType\\LocationPathQueryType'] ?? ($container->privates['Ibexa\\AdminUi\\QueryType\\LocationPathQueryType'] = new \Ibexa\AdminUi\QueryType\LocationPathQueryType())));
    }
}
