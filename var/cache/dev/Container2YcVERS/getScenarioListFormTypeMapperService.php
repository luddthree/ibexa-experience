<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getScenarioListFormTypeMapperService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Personalization\PageBuilder\FormTypeMapper\ScenarioListFormTypeMapper' shared autowired service.
     *
     * @return \Ibexa\Personalization\PageBuilder\FormTypeMapper\ScenarioListFormTypeMapper
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/contracts/FieldType/Page/Block/Attribute/FormTypeMapper/AttributeFormTypeMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/PageBuilder/FormTypeMapper/ScenarioListFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/PageBlock/DataProvider/Scenario/ScenarioDataProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/PageBlock/DataProvider/Scenario/ScenarioDataProvider.php';

        $a = ($container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'] ?? $container->load('getCachedScenarioServiceService'));

        if (isset($container->services['Ibexa\\Personalization\\PageBuilder\\FormTypeMapper\\ScenarioListFormTypeMapper'])) {
            return $container->services['Ibexa\\Personalization\\PageBuilder\\FormTypeMapper\\ScenarioListFormTypeMapper'];
        }
        $b = ($container->privates['Ibexa\\Personalization\\Security\\Service\\SecurityService'] ?? $container->load('getSecurityServiceService'));

        if (isset($container->services['Ibexa\\Personalization\\PageBuilder\\FormTypeMapper\\ScenarioListFormTypeMapper'])) {
            return $container->services['Ibexa\\Personalization\\PageBuilder\\FormTypeMapper\\ScenarioListFormTypeMapper'];
        }
        $c = ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService());

        $container->services['Ibexa\\Personalization\\PageBuilder\\FormTypeMapper\\ScenarioListFormTypeMapper'] = $instance = new \Ibexa\Personalization\PageBuilder\FormTypeMapper\ScenarioListFormTypeMapper(new \Ibexa\Personalization\PageBlock\DataProvider\Scenario\ScenarioDataProvider($a), $a, $b, $c);

        $instance->setLogger($c);

        return $instance;
    }
}
