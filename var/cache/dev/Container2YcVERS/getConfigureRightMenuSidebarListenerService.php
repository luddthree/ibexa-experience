<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConfigureRightMenuSidebarListenerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Scheduler\Menu\ConfigureRightMenuSidebarListener' shared autowired service.
     *
     * @return \Ibexa\Scheduler\Menu\ConfigureRightMenuSidebarListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/scheduler/src/lib/Menu/ConfigureRightMenuSidebarListener.php';

        $a = ($container->services['.container.private.form.factory'] ?? $container->get_Container_Private_Form_FactoryService());

        if (isset($container->privates['Ibexa\\Scheduler\\Menu\\ConfigureRightMenuSidebarListener'])) {
            return $container->privates['Ibexa\\Scheduler\\Menu\\ConfigureRightMenuSidebarListener'];
        }
        $b = ($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService());

        if (isset($container->privates['Ibexa\\Scheduler\\Menu\\ConfigureRightMenuSidebarListener'])) {
            return $container->privates['Ibexa\\Scheduler\\Menu\\ConfigureRightMenuSidebarListener'];
        }
        $c = ($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService());

        if (isset($container->privates['Ibexa\\Scheduler\\Menu\\ConfigureRightMenuSidebarListener'])) {
            return $container->privates['Ibexa\\Scheduler\\Menu\\ConfigureRightMenuSidebarListener'];
        }

        return $container->privates['Ibexa\\Scheduler\\Menu\\ConfigureRightMenuSidebarListener'] = new \Ibexa\Scheduler\Menu\ConfigureRightMenuSidebarListener(($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService()), $a, ($container->privates['Ibexa\\Scheduler\\Repository\\DateBasedHideService'] ?? $container->getDateBasedHideServiceService()), $b, $c);
    }
}
