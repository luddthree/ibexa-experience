<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFocusModeControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\AdminUi\Controller\User\FocusModeController' shared autowired service.
     *
     * @return \Ibexa\Bundle\AdminUi\Controller\User\FocusModeController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/bundle/Controller/User/FocusModeController.php';

        $container->services['Ibexa\\Bundle\\AdminUi\\Controller\\User\\FocusModeController'] = $instance = new \Ibexa\Bundle\AdminUi\Controller\User\FocusModeController(($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()), ($container->privates['Ibexa\\User\\UserSetting\\UserSettingService'] ?? $container->getUserSettingServiceService()), ($container->services['router'] ?? $container->getRouterService()), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\AdminUi\\Strategy\\FocusMode\\ContentStructureRedirectStrategy'] ?? $container->load('getContentStructureRedirectStrategyService'));
            yield 1 => ($container->privates['Ibexa\\AdminUi\\Strategy\\FocusMode\\OriginalPathRedirectStrategy'] ?? ($container->privates['Ibexa\\AdminUi\\Strategy\\FocusMode\\OriginalPathRedirectStrategy'] = new \Ibexa\AdminUi\Strategy\FocusMode\OriginalPathRedirectStrategy()));
        }, 2));

        $instance->setContainer($container);
        $instance->performAccessCheck();

        return $instance;
    }
}
