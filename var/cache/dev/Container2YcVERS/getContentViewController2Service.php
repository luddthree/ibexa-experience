<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContentViewController2Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\Taxonomy\Controller\ContentViewController' shared autowired service.
     *
     * @return \Ibexa\Bundle\Taxonomy\Controller\ContentViewController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/bundle/Controller/ContentViewController.php';

        $container->services['Ibexa\\Bundle\\Taxonomy\\Controller\\ContentViewController'] = $instance = new \Ibexa\Bundle\Taxonomy\Controller\ContentViewController(($container->services['Ibexa\\Bundle\\AdminUi\\Controller\\ContentViewController'] ?? $container->load('getContentViewControllerService')), ($container->privates['Ibexa\\Taxonomy\\Service\\Event\\TaxonomyService'] ?? $container->getTaxonomyServiceService()), ($container->privates['Ibexa\\Taxonomy\\Service\\TaxonomyConfiguration'] ?? $container->getTaxonomyConfigurationService()), ($container->services['ibexa.api.service.location'] ?? $container->getIbexa_Api_Service_LocationService()), ($container->services['ibexa.api.service.language'] ?? $container->getIbexa_Api_Service_LanguageService()), ($container->services['.container.private.form.factory'] ?? $container->get_Container_Private_Form_FactoryService()), ($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService()));

        $instance->setContainer($container);
        $instance->performAccessCheck();

        return $instance;
    }
}
