<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBazinga_Jstranslation_TranslationDumperService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'bazinga.jstranslation.translation_dumper' shared service.
     *
     * @return \Bazinga\Bundle\JsTranslationBundle\Dumper\TranslationDumper
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/willdurand/js-translation-bundle/Dumper/TranslationDumper.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/LoaderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/ArrayLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/FileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/PhpFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/YamlFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/translation-bundle/Translation/Loader/Symfony/XliffLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/PoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/MoFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/QtFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/CsvFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IcuResFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IcuDatFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/IniFileLoader.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation/Loader/JsonFileLoader.php';

        $container->services['bazinga.jstranslation.translation_dumper'] = $instance = new \Bazinga\Bundle\JsTranslationBundle\Dumper\TranslationDumper(($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService()), ($container->services['bazinga.jstranslation.translation_finder'] ?? $container->load('getBazinga_Jstranslation_TranslationFinderService')), ($container->services['.container.private.filesystem'] ?? ($container->services['.container.private.filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), 'en', 'messages', [], [0 => 'ibexa_dashboard', 1 => 'ibexa_corporate_account', 2 => 'ibexa_page_builder', 3 => 'ibexa_site_factory_ui', 4 => 'ibexa_form_builder', 5 => 'ibexa_page_fieldtype', 6 => 'ibexa_page_builder', 7 => 'ibexa_timeline', 8 => 'ibexa_page_builder_infobar', 9 => 'ibexa_image_picker', 10 => 'ibexa_content_tree_ui', 11 => 'ibexa_tree_builder_ui', 12 => 'ibexa_taxonomy_ui', 13 => 'forms', 14 => 'ibexa_product_catalog', 15 => 'ibexa_page_builder_block', 16 => 'ibexa_image_editor', 17 => 'validators', 18 => 'ibexa_personalization', 19 => 'ezplatform_connector_dam_ui', 20 => 'ibexa_calendar_widget', 21 => 'transition_apply', 22 => 'ibexa_calendar_events', 23 => 'ibexa_scheduler', 24 => 'ibexa_universal_discovery_widget', 25 => 'alloy_editor', 26 => 'ibexa_fieldtypes_edit', 27 => 'ibexa_notifications', 28 => 'ibexa_search', 29 => 'ibexa_content', 30 => 'ibexa_multi_file_upload', 31 => 'ibexa_sub_items', 32 => 'ibexa_content_tree', 33 => 'ibexa_trash_ui', 34 => 'ibexa_user_invitation', 35 => 'ibexa_content_type', 36 => 'ibexa_dropdown', 37 => 'messages', 38 => 'alloy_editor', 39 => 'ck_editor']);

        $a = ($container->privates['translation.loader.yml'] ?? ($container->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader()));
        $b = ($container->privates['translation.loader.xliff'] ?? ($container->privates['translation.loader.xliff'] = new \JMS\TranslationBundle\Translation\Loader\Symfony\XliffLoader()));

        $instance->addLoader('php', ($container->privates['translation.loader.php'] ?? ($container->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader())));
        $instance->addLoader('yaml', $a);
        $instance->addLoader('yml', $a);
        $instance->addLoader('xlf', $b);
        $instance->addLoader('xliff', $b);
        $instance->addLoader('po', ($container->privates['translation.loader.po'] ?? ($container->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader())));
        $instance->addLoader('mo', ($container->privates['translation.loader.mo'] ?? ($container->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader())));
        $instance->addLoader('ts', ($container->privates['translation.loader.qt'] ?? ($container->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader())));
        $instance->addLoader('csv', ($container->privates['translation.loader.csv'] ?? ($container->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader())));
        $instance->addLoader('res', ($container->privates['translation.loader.res'] ?? ($container->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader())));
        $instance->addLoader('dat', ($container->privates['translation.loader.dat'] ?? ($container->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader())));
        $instance->addLoader('ini', ($container->privates['translation.loader.ini'] ?? ($container->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader())));
        $instance->addLoader('json', ($container->privates['translation.loader.json'] ?? ($container->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader())));

        return $instance;
    }
}
