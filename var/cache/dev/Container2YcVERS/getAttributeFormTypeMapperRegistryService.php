<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAttributeFormTypeMapperRegistryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\FieldTypePage\FieldType\Page\Registry\AttributeFormTypeMapperRegistry' shared autowired service.
     *
     * @return \Ibexa\FieldTypePage\FieldType\Page\Registry\AttributeFormTypeMapperRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Registry/AttributeFormTypeMapperRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/contracts/FieldType/Page/Block/Attribute/FormTypeMapper/AttributeFormTypeMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/GenericFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/CheckboxFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/GenericChoiceFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/RichTextFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/SelectFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/LocationListFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/ContentTypeListFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/NestedAttributeFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/Page/Block/Attribute/FormTypeMapper/ScheduleAttributeFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/segmentation/src/lib/PageBuilder/FormTypeMapper/SegmentContentMapFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/connector-qualifio/src/lib/FieldTypePage/FieldType/Page/Block/Attribute/FormTypeMapper/QualifioChannelListFormTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/PageBuilder/FormTypeMapper/OutputTypeFormTypeMapper.php';

        $container->privates['Ibexa\\FieldTypePage\\FieldType\\Page\\Registry\\AttributeFormTypeMapperRegistry'] = $instance = new \Ibexa\FieldTypePage\FieldType\Page\Registry\AttributeFormTypeMapperRegistry();

        $a = ($container->services['Ibexa\\FieldTypePage\\FieldType\\Page\\Block\\Definition\\CachedBlockDefinitionFactory'] ?? $container->getCachedBlockDefinitionFactoryService());
        $b = ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService());

        $c = new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\SelectFormTypeMapper(true, NULL, $b);
        $c->setLogger($b);

        $instance->addMapper('Ibexa\\Bundle\\ActivityLog\\Form\\Type\\ObjectClassChoiceType', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\Bundle\\ActivityLog\\Form\\Type\\ObjectClassChoiceType', true));
        $instance->addMapper('personalization_scenario_list', ($container->services['Ibexa\\Personalization\\PageBuilder\\FormTypeMapper\\ScenarioListFormTypeMapper'] ?? $container->load('getScenarioListFormTypeMapperService')));
        $instance->addMapper('personalization_segment_scenario_map', ($container->services['ibexa.personalization.form_type_attribute.mapper.personalization_segment_scenario_map'] ?? ($container->services['ibexa.personalization.form_type_attribute.mapper.personalization_segment_scenario_map'] = new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\Personalization\\Form\\Type\\BlockAttribute\\TargetedScenarioMapAttributeType'))));
        $instance->addMapper('personalization_customer_select', ($container->services['ibexa.personalization.form_type_attribute.mapper.personalization_customer_select'] ?? ($container->services['ibexa.personalization.form_type_attribute.mapper.personalization_customer_select'] = new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\Personalization\\Form\\Type\\BlockAttribute\\CustomerSelectAttributeType'))));
        $instance->addMapper('personalization_output_type_list', ($container->services['Ibexa\\Personalization\\PageBuilder\\FormTypeMapper\\OutputTypeFormTypeMapper'] ?? ($container->services['Ibexa\\Personalization\\PageBuilder\\FormTypeMapper\\OutputTypeFormTypeMapper'] = new \Ibexa\Personalization\PageBuilder\FormTypeMapper\OutputTypeFormTypeMapper())));
        $instance->addMapper('catalog_list', ($container->services['ibexa.product_catalog.form_type_attribute.mapper.catalog_list'] ?? ($container->services['ibexa.product_catalog.form_type_attribute.mapper.catalog_list'] = new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\Bundle\\ProductCatalog\\Form\\Type\\CatalogChoiceType'))));
        $instance->addMapper('targeted_catalog_customer_group_map_attribute', ($container->services['ibexa.product_catalog.form_type_attribute.mapper.targeted_catalog_customer_group_map_attribute'] ?? ($container->services['ibexa.product_catalog.form_type_attribute.mapper.targeted_catalog_customer_group_map_attribute'] = new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\Bundle\\ProductCatalog\\Form\\Type\\BlockAttribute\\TargetedCatalogCustomerGroupMapAttributeType'))));
        $instance->addMapper('product_list', ($container->services['ibexa.product_catalog.form_type_attribute.mapper.product_collection'] ?? ($container->services['ibexa.product_catalog.form_type_attribute.mapper.product_collection'] = new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\Bundle\\ProductCatalog\\Form\\Type\\BlockAttribute\\ProductListAttributeType'))));
        $instance->addMapper('string', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeStringType'));
        $instance->addMapper('checkbox', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\CheckboxFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeCheckboxType'));
        $instance->addMapper('text', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeTextType'));
        $instance->addMapper('integer', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeIntegerType', true));
        $instance->addMapper('url', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeUrlType'));
        $instance->addMapper('embed', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeEmbedType'));
        $instance->addMapper('embedvideo', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeEmbedVideoType'));
        $instance->addMapper('multiple', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericChoiceFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeMultipleType', $a));
        $instance->addMapper('radio', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericChoiceFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeRadioType', $a));
        $instance->addMapper('Ibexa\\AdminUi\\Form\\Type\\UserChoiceType', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\AdminUi\\Form\\Type\\UserChoiceType', true));
        $instance->addMapper('richtext', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\RichTextFormTypeMapper('Ibexa\\FieldTypePage\\Form\\Type\\BlockAttribute\\AttributeRichTextType'));
        $instance->addMapper('select', $c);
        $instance->addMapper('locationlist', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\LocationListFormTypeMapper($a));
        $instance->addMapper('contenttypelist', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\ContentTypeListFormTypeMapper(($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService())));
        $instance->addMapper('nested_attribute', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\NestedAttributeFormTypeMapper());
        $instance->addMapper('schedule_events', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\ScheduleAttributeFormTypeMapper('events'));
        $instance->addMapper('schedule_snapshots', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\ScheduleAttributeFormTypeMapper('snapshots'));
        $instance->addMapper('schedule_initial_items', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\ScheduleAttributeFormTypeMapper('initial_items'));
        $instance->addMapper('schedule_slots', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\ScheduleAttributeFormTypeMapper('slots'));
        $instance->addMapper('schedule_loaded_snapshot', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\ScheduleAttributeFormTypeMapper('loaded_snapshot'));
        $instance->addMapper('embedform', new \Ibexa\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\GenericFormTypeMapper('Ibexa\\FormBuilder\\Form\\Type\\BlockAttribute\\AttributeEmbedFormType'));
        $instance->addMapper('segment_content_map', new \Ibexa\Segmentation\PageBuilder\FormTypeMapper\SegmentContentMapFormTypeMapper());
        $instance->addMapper('qualifiochannellist', new \Ibexa\ConnectorQualifio\FieldTypePage\FieldType\Page\Block\Attribute\FormTypeMapper\QualifioChannelListFormTypeMapper());

        return $instance;
    }
}
