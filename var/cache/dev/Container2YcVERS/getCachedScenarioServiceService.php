<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCachedScenarioServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Personalization\Cache\CachedScenarioService' shared service.
     *
     * @return \Ibexa\Personalization\Cache\CachedScenarioService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Cache/AbstractCacheServiceDecorator.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Service/Scenario/ScenarioServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Cache/CachedScenarioService.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Service/Scenario/ScenarioService.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Client/Consumer/Scenario/ScenarioDataFetcherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Client/Consumer/Scenario/ScenarioDataFetcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Client/Consumer/Scenario/ScenarioDataSenderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/lib/Client/Consumer/Scenario/ScenarioDataSender.php';

        $a = ($container->privates['Ibexa\\Contracts\\Core\\Persistence\\Handler'] ?? $container->getHandler11Service());

        if (isset($container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'])) {
            return $container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'];
        }
        $b = ($container->privates['Ibexa\\Personalization\\Service\\Setting\\DefaultSiteAccessSettingService'] ?? $container->load('getDefaultSiteAccessSettingServiceService'));

        if (isset($container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'])) {
            return $container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'];
        }
        $c = ($container->privates['Ibexa\\Personalization\\Cache\\CachedCustomerInformationService'] ?? $container->load('getCachedCustomerInformationServiceService'));

        if (isset($container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'])) {
            return $container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'];
        }
        $d = ($container->privates['Ibexa\\Personalization\\Client\\PersonalizationClient'] ?? $container->getPersonalizationClientService());

        return $container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'] = new \Ibexa\Personalization\Cache\CachedScenarioService(($container->privates['Ibexa\\Core\\Persistence\\Cache\\Adapter\\TransactionalInMemoryCacheAdapter'] ?? $container->getTransactionalInMemoryCacheAdapterService()), $a, ($container->privates['Ibexa\\Core\\Persistence\\Cache\\PersistenceLogger'] ?? ($container->privates['Ibexa\\Core\\Persistence\\Cache\\PersistenceLogger'] = new \Ibexa\Core\Persistence\Cache\PersistenceLogger(true))), ($container->privates['Ibexa\\Core\\Persistence\\Cache\\Identifier\\CacheIdentifierGenerator'] ?? $container->getCacheIdentifierGeneratorService()), ($container->privates['Ibexa\\Core\\Persistence\\Cache\\Identifier\\CacheIdentifierSanitizer'] ?? ($container->privates['Ibexa\\Core\\Persistence\\Cache\\Identifier\\CacheIdentifierSanitizer'] = new \Ibexa\Core\Persistence\Cache\Identifier\CacheIdentifierSanitizer())), ($container->privates['Ibexa\\Core\\Persistence\\Cache\\LocationPathConverter'] ?? ($container->privates['Ibexa\\Core\\Persistence\\Cache\\LocationPathConverter'] = new \Ibexa\Core\Persistence\Cache\LocationPathConverter())), new \Ibexa\Personalization\Service\Scenario\ScenarioService($b, new \Ibexa\Personalization\Client\Consumer\Scenario\ScenarioDataFetcher($d, 'https://admin.perso.ibexa.co'), new \Ibexa\Personalization\Client\Consumer\Scenario\ScenarioDataSender($d, 'https://admin.perso.ibexa.co'), $c, ($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService())));
    }
}
