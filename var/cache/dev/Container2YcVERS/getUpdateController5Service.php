<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUpdateController5Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\ProductCatalog\Controller\CustomerGroup\UpdateController' shared autowired service.
     *
     * @return \Ibexa\Bundle\ProductCatalog\Controller\CustomerGroup\UpdateController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/Controller/CustomerGroup/UpdateController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/Form/DataMapper/CustomerGroupUpdateMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/Form/FormMapper/CustomerGroupMapper.php';

        $a = ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CustomerGroupService'] ?? $container->getCustomerGroupServiceService());

        $container->services['Ibexa\\Bundle\\ProductCatalog\\Controller\\CustomerGroup\\UpdateController'] = $instance = new \Ibexa\Bundle\ProductCatalog\Controller\CustomerGroup\UpdateController(($container->privates['Ibexa\\AdminUi\\Notification\\TranslatableNotificationHandler'] ?? $container->getTranslatableNotificationHandlerService()), ($container->services['ibexa.api.service.language'] ?? $container->getIbexa_Api_Service_LanguageService()), $a, new \Ibexa\Bundle\ProductCatalog\Form\DataMapper\CustomerGroupUpdateMapper(), new \Ibexa\Bundle\ProductCatalog\Form\FormMapper\CustomerGroupMapper($a), ($container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'] ?? $container->load('getSubmitHandlerService')));

        $instance->setContainer(($container->privates['.service_locator.mx0UMmY'] ?? $container->load('get_ServiceLocator_Mx0UMmYService'))->withContext('Ibexa\\Bundle\\ProductCatalog\\Controller\\CustomerGroup\\UpdateController', $container));

        return $instance;
    }
}
