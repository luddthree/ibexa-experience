<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCreateController9Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\ProductCatalog\Controller\Product\Price\CreateController' shared autowired service.
     *
     * @return \Ibexa\Bundle\ProductCatalog\Controller\Product\Price\CreateController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/contracts/Controller/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/Controller/Product/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/bundle/Controller/Product/Price/CreateController.php';

        $container->services['Ibexa\\Bundle\\ProductCatalog\\Controller\\Product\\Price\\CreateController'] = $instance = new \Ibexa\Bundle\ProductCatalog\Controller\Product\Price\CreateController(($container->privates['Ibexa\\Core\\Persistence\\Cache\\TransactionHandler'] ?? $container->getTransactionHandlerService()), ($container->privates['Ibexa\\AdminUi\\Notification\\TranslatableNotificationHandler'] ?? $container->getTranslatableNotificationHandlerService()), ($container->privates['Ibexa\\AdminUi\\Form\\SubmitHandler'] ?? $container->load('getSubmitHandlerService')), ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\Event\\ProductPriceService'] ?? $container->getProductPriceServiceService()), ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\CustomerGroupService'] ?? $container->getCustomerGroupServiceService()), ($container->privates['Ibexa\\Bundle\\ProductCatalog\\Form\\DataMapper\\ProductPrice\\ProductPriceMapper'] ?? $container->load('getProductPriceMapperService')));

        $instance->setContainer(($container->privates['.service_locator.mx0UMmY'] ?? $container->load('get_ServiceLocator_Mx0UMmYService'))->withContext('Ibexa\\Bundle\\ProductCatalog\\Controller\\Product\\Price\\CreateController', $container));

        return $instance;
    }
}
