<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAttributeGroupService2Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\ProductCatalog\Local\Repository\AttributeGroupService' shared autowired service.
     *
     * @return \Ibexa\ProductCatalog\Local\Repository\AttributeGroupService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/contracts/Local/LocalAttributeGroupServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/Local/Repository/AttributeGroupService.php';

        $a = ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService());

        if (isset($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'])) {
            return $container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'];
        }
        $b = ($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\DomainMapper'] ?? $container->getDomainMapper5Service());

        if (isset($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'])) {
            return $container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'];
        }
        $c = ($container->privates['Ibexa\\Contracts\\Core\\Persistence\\Content\\Language\\Handler'] ?? $container->getHandler8Service());

        if (isset($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'])) {
            return $container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'];
        }
        $d = ($container->privates['Ibexa\\ProductCatalog\\Local\\Permission\\PermissionResolver'] ?? $container->getPermissionResolverService());

        if (isset($container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'])) {
            return $container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'];
        }

        return $container->privates['Ibexa\\ProductCatalog\\Local\\Repository\\AttributeGroupService'] = new \Ibexa\ProductCatalog\Local\Repository\AttributeGroupService($a, $b, ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Cache\\AttributeGroup\\Handler'] ?? $container->getHandler34Service()), ($container->privates['Ibexa\\Bundle\\Core\\SiteAccess\\LanguageResolver'] ?? $container->getLanguageResolverService()), $c, $d, ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Handler'] ?? $container->getHandler21Service()));
    }
}
