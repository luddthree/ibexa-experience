<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getResolveVirtualFieldSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Core\Persistence\Legacy\Content\Mapper\ResolveVirtualFieldSubscriber' shared service.
     *
     * @return \Ibexa\Core\Persistence\Legacy\Content\Mapper\ResolveVirtualFieldSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/Persistence/Legacy/Content/Mapper/ResolveVirtualFieldSubscriber.php';

        $a = ($container->privates['Ibexa\\Core\\Persistence\\Legacy\\Content\\FieldValue\\ConverterRegistry'] ?? $container->getConverterRegistryService());

        if (isset($container->privates['Ibexa\\Core\\Persistence\\Legacy\\Content\\Mapper\\ResolveVirtualFieldSubscriber'])) {
            return $container->privates['Ibexa\\Core\\Persistence\\Legacy\\Content\\Mapper\\ResolveVirtualFieldSubscriber'];
        }
        $b = ($container->privates['Ibexa\\Core\\Persistence\\Legacy\\Content\\StorageRegistry'] ?? $container->getStorageRegistryService());

        if (isset($container->privates['Ibexa\\Core\\Persistence\\Legacy\\Content\\Mapper\\ResolveVirtualFieldSubscriber'])) {
            return $container->privates['Ibexa\\Core\\Persistence\\Legacy\\Content\\Mapper\\ResolveVirtualFieldSubscriber'];
        }

        return $container->privates['Ibexa\\Core\\Persistence\\Legacy\\Content\\Mapper\\ResolveVirtualFieldSubscriber'] = new \Ibexa\Core\Persistence\Legacy\Content\Mapper\ResolveVirtualFieldSubscriber($a, $b, ($container->privates['Ibexa\\Core\\Persistence\\Legacy\\Content\\Gateway\\ExceptionConversion'] ?? $container->getExceptionConversionService()));
    }
}
