<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContentTypeGroupCreateStepExecutorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Migration\StepExecutor\ContentTypeGroupCreateStepExecutor' shared autowired service.
     *
     * @return \Ibexa\Migration\StepExecutor\ContentTypeGroupCreateStepExecutor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/StepExecutorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/UserContextAwareStepExecutorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Log/LoggerAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/UserContextAwareStepExecutorTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/StepExecutor/ContentTypeGroupCreateStepExecutor.php';

        $container->privates['Ibexa\\Migration\\StepExecutor\\ContentTypeGroupCreateStepExecutor'] = $instance = new \Ibexa\Migration\StepExecutor\ContentTypeGroupCreateStepExecutor(($container->privates['Ibexa\\Core\\Persistence\\Cache\\TransactionHandler'] ?? $container->getTransactionHandlerService()), ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService()), ($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService()), 'admin', ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        $instance->setPermissionResolver(($container->privates['Ibexa\\Core\\Repository\\Permission\\CachedPermissionService'] ?? $container->getCachedPermissionServiceService()));

        return $instance;
    }
}
