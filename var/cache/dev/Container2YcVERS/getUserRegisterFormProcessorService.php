<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUserRegisterFormProcessorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\User\Form\Processor\UserRegisterFormProcessor' shared autowired service.
     *
     * @return \Ibexa\User\Form\Processor\UserRegisterFormProcessor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/user/src/lib/Form/Processor/UserRegisterFormProcessor.php';

        $a = ($container->services['ibexa.api.repository'] ?? $container->getIbexa_Api_RepositoryService());

        if (isset($container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'])) {
            return $container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'];
        }
        $b = ($container->services['ibexa.api.service.user'] ?? $container->getIbexa_Api_Service_UserService());

        if (isset($container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'])) {
            return $container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'];
        }
        $c = ($container->services['router'] ?? $container->getRouterService());

        if (isset($container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'])) {
            return $container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'];
        }
        $d = ($container->services['ibexa.api.service.role'] ?? $container->getIbexa_Api_Service_RoleService());

        if (isset($container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'])) {
            return $container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'];
        }
        $e = ($container->privates['Ibexa\\Notifications\\Service\\NotificationService'] ?? $container->load('getNotificationService2Service'));

        if (isset($container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'])) {
            return $container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'];
        }

        return $container->privates['Ibexa\\User\\Form\\Processor\\UserRegisterFormProcessor'] = new \Ibexa\User\Form\Processor\UserRegisterFormProcessor($a, $b, $c, $d, $e);
    }
}
