<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getIbexa_ProductCatalog_Attribute_Gateway_MeasurementService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'ibexa.product_catalog.attribute.gateway.measurement' shared autowired service.
     *
     * @return \Ibexa\ProductCatalog\Local\Persistence\Legacy\Attribute\Inheritance\Gateway
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/Local/Persistence/Legacy/Attribute/Inheritance/GatewayInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/Local/Persistence/Legacy/Attribute/Inheritance/Gateway.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/contracts/Local/Attribute/StorageDefinitionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/product-catalog/src/lib/Local/Persistence/Legacy/Attribute/SimpleCustom/StorageDefinition.php';

        $a = ($container->privates['Ibexa\\CorePersistence\\Gateway\\DoctrineSchemaMetadataRegistry'] ?? $container->getDoctrineSchemaMetadataRegistryService());

        if (isset($container->privates['ibexa.product_catalog.attribute.gateway.measurement'])) {
            return $container->privates['ibexa.product_catalog.attribute.gateway.measurement'];
        }

        return $container->privates['ibexa.product_catalog.attribute.gateway.measurement'] = new \Ibexa\ProductCatalog\Local\Persistence\Legacy\Attribute\Inheritance\Gateway(($container->services['ibexa.persistence.connection'] ?? $container->getIbexa_Persistence_ConnectionService()), $a, new RewindableGenerator(function () use ($container) {
            yield 'measurement_range' => ($container->privates['Ibexa\\Measurement\\ProductCatalog\\Local\\Attribute\\RangeMeasurementStorageConverter'] ?? $container->load('getRangeMeasurementStorageConverterService'));
            yield 'measurement_single' => ($container->privates['Ibexa\\Measurement\\ProductCatalog\\Local\\Attribute\\SingleMeasurementStorageConverter'] ?? $container->load('getSingleMeasurementStorageConverterService'));
            yield 'measurement' => ($container->privates['Ibexa\\Measurement\\ProductCatalog\\Local\\Attribute\\MeasurementStorageConverter'] ?? $container->load('getMeasurementStorageConverterService'));
            yield 'checkbox' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Boolean\\StorageConverter'] ?? ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Boolean\\StorageConverter'] = new \Ibexa\ProductCatalog\Local\Persistence\Legacy\Attribute\Boolean\StorageConverter()));
            yield 'float' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Float\\StorageConverter'] ?? ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Float\\StorageConverter'] = new \Ibexa\ProductCatalog\Local\Persistence\Legacy\Attribute\Float\StorageConverter()));
            yield 'integer' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Integer\\StorageConverter'] ?? ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Integer\\StorageConverter'] = new \Ibexa\ProductCatalog\Local\Persistence\Legacy\Attribute\Integer\StorageConverter()));
            yield 'selection' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Selection\\StorageConverter'] ?? ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Selection\\StorageConverter'] = new \Ibexa\ProductCatalog\Local\Persistence\Legacy\Attribute\Selection\StorageConverter()));
            yield 'color' => ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Selection\\StorageConverter'] ?? ($container->privates['Ibexa\\ProductCatalog\\Local\\Persistence\\Legacy\\Attribute\\Selection\\StorageConverter'] = new \Ibexa\ProductCatalog\Local\Persistence\Legacy\Attribute\Selection\StorageConverter()));
        }, 8), new \Ibexa\ProductCatalog\Local\Persistence\Legacy\Attribute\SimpleCustom\StorageDefinition(), [0 => 'measurement']);
    }
}
