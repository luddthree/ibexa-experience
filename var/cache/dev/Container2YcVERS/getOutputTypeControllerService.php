<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOutputTypeControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\Bundle\Personalization\Controller\OutputTypeController' shared autowired service.
     *
     * @return \Ibexa\Bundle\Personalization\Controller\OutputTypeController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/bundle/Core/Controller.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/bundle/Controller/AbstractPersonalizationAjaxController.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/personalization/src/bundle/Controller/OutputTypeController.php';

        $container->services['Ibexa\\Bundle\\Personalization\\Controller\\OutputTypeController'] = $instance = new \Ibexa\Bundle\Personalization\Controller\OutputTypeController(($container->privates['Ibexa\\Personalization\\Permission\\PermissionChecker'] ?? $container->load('getPermissionChecker2Service')), ($container->privates['Ibexa\\Personalization\\Service\\Setting\\DefaultSiteAccessSettingService'] ?? $container->load('getDefaultSiteAccessSettingServiceService')), ($container->privates['Ibexa\\Personalization\\Mapper\\OutputTypeAttributesMapper'] ?? $container->load('getOutputTypeAttributesMapperService')), ($container->privates['Ibexa\\Personalization\\Cache\\CachedScenarioService'] ?? $container->load('getCachedScenarioServiceService')));

        $instance->setContainer(($container->privates['.service_locator.GS60sXn'] ?? $container->load('get_ServiceLocator_GS60sXnService'))->withContext('Ibexa\\Bundle\\Personalization\\Controller\\OutputTypeController', $container));

        return $instance;
    }
}
