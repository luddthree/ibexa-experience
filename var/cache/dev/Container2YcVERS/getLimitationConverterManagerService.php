<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLimitationConverterManagerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Migration\Generator\Role\StepBuilder\LimitationConverterManager' shared autowired service.
     *
     * @return \Ibexa\Migration\Generator\Role\StepBuilder\LimitationConverterManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/migrations/src/lib/Generator/Role/StepBuilder/LimitationConverterManager.php';

        return $container->privates['Ibexa\\Migration\\Generator\\Role\\StepBuilder\\LimitationConverterManager'] = new \Ibexa\Migration\Generator\Role\StepBuilder\LimitationConverterManager(($container->privates['Ibexa\\Core\\Repository\\Permission\\LimitationService'] ?? $container->getLimitationServiceService()), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Ibexa\\Migration\\Generator\\Role\\StepBuilder\\LimitationConverter\\ContentTypeLimitationConverter'] ?? $container->load('getContentTypeLimitationConverterService'));
            yield 1 => ($container->privates['Ibexa\\Migration\\Generator\\Role\\StepBuilder\\LimitationConverter\\SectionLimitationConverter'] ?? $container->load('getSectionLimitationConverterService'));
            yield 2 => ($container->privates['Ibexa\\Migration\\Generator\\Role\\StepBuilder\\LimitationConverter\\ParentContentTypeLimitationConverter'] ?? $container->load('getParentContentTypeLimitationConverterService'));
            yield 3 => ($container->privates['Ibexa\\Migration\\Generator\\Role\\StepBuilder\\LimitationConverter\\SiteAccessLimitationConverter'] ?? $container->load('getSiteAccessLimitationConverterService'));
        }, 4));
    }
}
