<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNodeResolverService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\GraphQL\Relay\NodeResolver' shared autowired service.
     *
     * @return \Ibexa\GraphQL\Relay\NodeResolver
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/graphql/src/lib/Relay/NodeResolver.php';

        $a = ($container->services['overblog_graphql.type_resolver'] ?? $container->load('getOverblogGraphql_TypeResolverService'));

        if (isset($container->privates['Ibexa\\GraphQL\\Relay\\NodeResolver'])) {
            return $container->privates['Ibexa\\GraphQL\\Relay\\NodeResolver'];
        }

        return $container->privates['Ibexa\\GraphQL\\Relay\\NodeResolver'] = new \Ibexa\GraphQL\Relay\NodeResolver(($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService()), $a, ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService()), ($container->privates['Ibexa\\GraphQL\\Schema\\Domain\\Content\\NameHelper'] ?? $container->load('getNameHelperService')));
    }
}
