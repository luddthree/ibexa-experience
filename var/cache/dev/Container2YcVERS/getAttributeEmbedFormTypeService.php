<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAttributeEmbedFormTypeService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\FormBuilder\Form\Type\BlockAttribute\AttributeEmbedFormType' shared autowired service.
     *
     * @return \Ibexa\FormBuilder\Form\Type\BlockAttribute\AttributeEmbedFormType
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/AbstractType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/Form/Type/BlockAttribute/AttributeEmbedType.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/form-builder/src/lib/Form/Type/BlockAttribute/AttributeEmbedFormType.php';

        $a = ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService());

        if (isset($container->services['Ibexa\\FormBuilder\\Form\\Type\\BlockAttribute\\AttributeEmbedFormType'])) {
            return $container->services['Ibexa\\FormBuilder\\Form\\Type\\BlockAttribute\\AttributeEmbedFormType'];
        }
        $b = ($container->services['ibexa.api.service.content_type'] ?? $container->getIbexa_Api_Service_ContentTypeService());

        if (isset($container->services['Ibexa\\FormBuilder\\Form\\Type\\BlockAttribute\\AttributeEmbedFormType'])) {
            return $container->services['Ibexa\\FormBuilder\\Form\\Type\\BlockAttribute\\AttributeEmbedFormType'];
        }

        return $container->services['Ibexa\\FormBuilder\\Form\\Type\\BlockAttribute\\AttributeEmbedFormType'] = new \Ibexa\FormBuilder\Form\Type\BlockAttribute\AttributeEmbedFormType($a, $b, ($container->privates['Ibexa\\AdminUi\\Notification\\FlashBagNotificationHandler'] ?? $container->getFlashBagNotificationHandlerService()));
    }
}
