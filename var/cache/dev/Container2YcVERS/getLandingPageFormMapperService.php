<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLandingPageFormMapperService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Ibexa\FieldTypePage\FieldType\LandingPage\Mapper\LandingPageFormMapper' shared autowired service.
     *
     * @return \Ibexa\FieldTypePage\FieldType\LandingPage\Mapper\LandingPageFormMapper
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/admin-ui/src/lib/FieldType/FieldDefinitionFormMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/fieldtype-page/src/lib/FieldType/LandingPage/Mapper/LandingPageFormMapper.php';

        $a = ($container->services['Ibexa\\FieldTypePage\\ApplicationConfig\\Providers\\BlockDefinitions'] ?? $container->load('getBlockDefinitionsService'));

        if (isset($container->services['Ibexa\\FieldTypePage\\FieldType\\LandingPage\\Mapper\\LandingPageFormMapper'])) {
            return $container->services['Ibexa\\FieldTypePage\\FieldType\\LandingPage\\Mapper\\LandingPageFormMapper'];
        }
        $b = ($container->services['Ibexa\\FieldTypePage\\ApplicationConfig\\Providers\\LayoutDefinitions'] ?? $container->load('getLayoutDefinitionsService'));

        if (isset($container->services['Ibexa\\FieldTypePage\\FieldType\\LandingPage\\Mapper\\LandingPageFormMapper'])) {
            return $container->services['Ibexa\\FieldTypePage\\FieldType\\LandingPage\\Mapper\\LandingPageFormMapper'];
        }

        return $container->services['Ibexa\\FieldTypePage\\FieldType\\LandingPage\\Mapper\\LandingPageFormMapper'] = new \Ibexa\FieldTypePage\FieldType\LandingPage\Mapper\LandingPageFormMapper($a, $b, ($container->services['Symfony\\Contracts\\Translation\\TranslatorInterface'] ?? $container->getTranslatorInterfaceService()));
    }
}
