<?php

namespace Container2YcVERS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getIsTaxonomyParentFolderService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Ibexa\Taxonomy\View\Matcher\IsTaxonomyParentFolder' shared autowired service.
     *
     * @return \Ibexa\Taxonomy\View\Matcher\IsTaxonomyParentFolder
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/core/src/lib/MVC/Symfony/Matcher/ViewMatcherInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/ibexa/taxonomy/src/lib/View/Matcher/IsTaxonomyParentFolder.php';

        $a = ($container->services['ibexa.api.service.content'] ?? $container->getIbexa_Api_Service_ContentService());

        if (isset($container->privates['Ibexa\\Taxonomy\\View\\Matcher\\IsTaxonomyParentFolder'])) {
            return $container->privates['Ibexa\\Taxonomy\\View\\Matcher\\IsTaxonomyParentFolder'];
        }

        return $container->privates['Ibexa\\Taxonomy\\View\\Matcher\\IsTaxonomyParentFolder'] = new \Ibexa\Taxonomy\View\Matcher\IsTaxonomyParentFolder(($container->privates['Ibexa\\Taxonomy\\Service\\TaxonomyConfiguration'] ?? $container->getTaxonomyConfigurationService()), ($container->privates['Ibexa\\Taxonomy\\Tree\\TaxonomyTreeService'] ?? $container->load('getTaxonomyTreeServiceService')), $a);
    }
}
